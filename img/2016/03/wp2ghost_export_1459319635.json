{"data":{"posts":[{"id":2,"title":"About me","slug":"about","markdown":"\nMy name is Leif Larsen, and I am a software engineer based in Norway.\n\nThis blog is meant to be a place where I will write about whatever I care about. There is however no need to hide the fact that it will probably be a lot of posts regarding different technologies. Hopefully I can connect with others, which share my interests, with the intent of learning more on certain technologies as well as new technologies.\n\nI am quite interested in mobile development. There are a lot of opportunities in that field, and it is a technology that continuously grows and evolves, which triggers my curiosity. This will be a field I will come back to on several occasions.\n\nIt is worth mentioning that I do not speak English as my mother tongue, so if you do happen to come across any misspelled words, or bad grammar, please let me know. I would like to improve my language as well!\n\nIf you have any questions, don\u2019t be shy!\n\n\n","html":"<p>My name is Leif Larsen, and I am a software engineer based in Norway.<\/p>\n<p>This blog is meant to be a place where I will write about whatever I care about. There is however no need to hide the fact that it will probably be a lot of posts regarding different technologies. Hopefully I can connect with others, which share my interests, with the intent of learning more on certain technologies as well as new technologies.<\/p>\n<p>I am quite interested in mobile development. There are a lot of opportunities in that field, and it is a technology that continuously grows and evolves, which triggers my curiosity. This will be a field I will come back to on several occasions.<\/p>\n<p>It is worth mentioning that I do not speak English as my mother tongue, so if you do happen to come across any misspelled words, or bad grammar, please let me know. I would like to improve my language as well!<\/p>\n<p>If you have any questions, don&#8217;t be shy!<\/p>\n","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 14 Aug 2012 18:06:46 +0000","created_by":1,"updated_at":"Sun, 26 Apr 2015 18:47:58 +0000","updated_by":1,"published_at":"Tue, 14 Aug 2012 18:06:46 +0000","published_by":1},{"id":32,"title":"Contact me","slug":"contact-me","markdown":"\nIf you have any questions, or need to get in touch for some reason, you can use the contact form below. I am also available at Twitter, where you can find me as @leif_larsen.\n\n[contact-form subject=\u2019Someone contacted you on your blog!\u2019][contact-field label=\u2019Name\u2019 type=\u2019name\u2019 required=\u20191\u2019\/][contact-field label=\u2019Email\u2019 type=\u2019email\u2019 required=\u20191\u2019\/][contact-field label=\u2019Comment\u2019 type=\u2019textarea\u2019 required=\u20191\u2019\/][\/contact-form]\n\n\n","html":"<p>If you have any questions, or need to get in touch for some reason, you can use the contact form below. I am also available at Twitter, where you can find me as @leif_larsen.<\/p>\n<p>[contact-form subject=&#8217;Someone contacted you on your blog!&#8217;][contact-field label=&#8217;Name&#8217; type=&#8217;name&#8217; required=&#8217;1&#8217;\/][contact-field label=&#8217;Email&#8217; type=&#8217;email&#8217; required=&#8217;1&#8217;\/][contact-field label=&#8217;Comment&#8217; type=&#8217;textarea&#8217; required=&#8217;1&#8217;\/][\/contact-form] <\/p>\n","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 27 Aug 2012 21:10:56 +0000","created_by":1,"updated_at":"Thu, 04 Dec 2014 11:51:11 +0000","updated_by":1,"published_at":"Mon, 27 Aug 2012 21:10:56 +0000","published_by":1},{"id":53,"title":"My work","slug":"my-work","markdown":"","html":"","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 31 Aug 2012 20:10:41 +0000","created_by":1,"updated_at":"Wed, 30 Mar 2016 06:42:03 +0000","updated_by":1,"published_at":"Fri, 31 Aug 2012 20:10:41 +0000","published_by":1},{"id":56,"title":"Web sites","slug":"web-sites","markdown":"\n[nggallery id=1]\n\n\n","html":"<p>[nggallery id=1]<\/p>\n","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 31 Aug 2012 20:16:15 +0000","created_by":1,"updated_at":"Sun, 24 Feb 2013 18:03:28 +0000","updated_by":1,"published_at":"Fri, 31 Aug 2012 20:16:15 +0000","published_by":1},{"id":48,"title":"Implementing SOAP with PHP","slug":"implementing-soap-with-php","markdown":"\nRecently I have been working with a project requiring the use of SOAP. Beforehand my knowledge of SOAP was not great, but I had the basic idea of it. This project was therefore quite fun to do, because it caused a few challenges, and I learned a lot.  \n  \n The idea was fairly simple; a customer should give some information (name, birthdate and zip number) to initiate an order form. This information was to be sent to a service called NUBIX, which would use this information to fetch more information about the customer. This extended information would then be returned, and the needed fields for an order would be automatically be filled in.  \n  \n To fill you out with some background information, NUBIX is a web service which is central for power suppliers in Norway. Power suppliers can use this in their web pages to get basic information like address, place etc., but also more information regarding measuring point IDs etc (used to identify fuse boxes). This service is run on a IIS server, and as far as my research showed, no other power suppliers had implemented this with PHP. Also the people in control of NUBIX did not have any examples of implementation with PHP.  \n  \n Anyhow, my first instinct was obviously to try the native PHP SOAP library. NUBIX uses WSDL, and the requests and responses is pretty much straight forwards. It turned out that it wasn\u2019t as easy as first expected. I thought it might be just that I didn\u2019t understand how SOAP worked properly, so I stumbled across this brilliant explanation of it (check it out [here](http:\/\/stackoverflow.com\/questions\/10511478\/php-soap-client-for-uk-mail-webservice-api)). Basically I tried to solve it this way, but I had no luck this way either. I could connect to the service, but all I got back was \u201cThe user \u2018Unknown User\u2019 is not verified\u201d (loosely translated from Norwegian).  \n  \n My next try was to go ahead and use Nusoap, which is a SOAP library developed before the native library. I hesitated to use this library, seeing as it is not in development anymore, and the only real reason to use it is legacy reasons. But I was on a deadline, so I gave it a shot and with got some progress. I managed to get passed the first error message I had received, but now I got some other error. I have to admit I can\u2019t remember what it was, but it had to do with the request I sent. This puzzled me, seeing as the request I sent resembled the example request I got from the people in control of NUBIX.  \n  \n My last try was to send in raw XML, to make sure that the request was correct, down to the smallest whitespace. This time the response was that the verb in the request (POST in this case) was not allowed. I modified the code, so I could send the request as a GET request, but this did not work, since I were not able to pass any data.  \n  \n So, how did I solve this? Well, after quite some time googling around, I came across another link to the NUBIX service, but in another format. The previous link was \u201chttps:\/\/ws.nubix.no\/Schemas\/2011\/Requestor\/NubixService.wsdl\u201d, but the new one were \u201chttps:\/\/ws.nubix.no\/Nubix.asmx?WSDL\u201d. Suddenly I was able to send raw XML as a POST request, and get a positive response back! Success at last.  \n  \n I won\u2019t be going in detail about all the code I wrote here, because it was a lot. The code below is a modified function to show how to send raw XML with nusoap. As you might see the function takes three parameters, last name, zip code and birth date (the format which it needs to be is 1990-10-15). Also you need to make sure that nusoap uses UTF-8.\n\n <?php function getNUBIX($name, $zip, $bdate) { $client = new nusoap_client('https:\/\/ws.nubix.no\/Nubix.asmx?WSDL', 'wsdl'); $client->soap_defencoding = 'UTF-8'; $client->decode_utf8 = false; $id = \"2345212453234\"; $xmlbody = '<?xml version=\"1.0\" encoding=\"utf-8\"?> <soap:Envelope xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xmlns:xsd=\"http:\/\/www.w3.org\/2001\/XMLSchema\" xmlns:soap=\"http:\/\/schemas.xmlsoap.org\/soap\/envelope\/\"> <soap:Header> <credentialsHeader xmlns=\"http:\/\/www.ediel.no\/schemas\/public\/nubix\/credentialsHeader\"> <Username xmlns=\"\">*******<\/Username> <Password xmlns=\"\">*******<\/Password> <\/credentialsHeader> <\/soap:Header> <soap:Body> <MeteringPointIdRequest xmlns=\"http:\/\/www.ediel.no\/schemas\/public\/nubix\/MeteringPointIdRequest\"> <RequestId xmlns=\"\">'.$id.'<\/RequestId> <Requestor xmlns=\"\"> <GLN>***********<\/GLN> <\/Requestor> <Customers xmlns=\"\"> <DomesticCustomer xmlns=\"\"> <LastName>'.$name.'<\/LastName> <BirthDate>'.$date.'<\/BirthDate> <Addresses> <Address> <PostCode>'.$zip.'<\/PostCode> <CountryCode>NO<\/CountryCode> <\/Address> <\/Addresses> <\/DomesticCustomer> <\/Customers> <\/MeteringPointIdRequest> <\/soap:Body> <\/soap:Envelope>'; $endpoint = \"http:\/\/www.ediel.no\/schemas\/public\/nubix\/:GetMeteringPointIdRequest\"; $result = $client->send($xmlbody, $endpoint); \/\/print_r($client->request); \/\/print_r($client->response); return $result; } \/\/ End getNubix ?>\n\n If I was to do this again I would probably try to find a way to send raw XML with the native SOAP library. Unfortunately I did not have time to do this now, but I should definitely do it as an update to the project. I do believe that because of how the NUBIX service works it is not possible to send requests the \u201csimple\u201d way. However, if anyone has examples that might resemble this one, and have a solution, feel free to share it!  \n  \n As far as SOAP as a protocol my impression is that it is quite good, but maybe not that developed in PHP. As far as I could find, there was not that many resources around, but then again, I might have worked towards a special web service?\n\n\n","html":"<p>Recently I have been working with a project requiring the use of SOAP. Beforehand my knowledge of SOAP was not great, but I had the basic idea of it. This project was therefore quite fun to do, because it caused a few challenges, and I learned a lot.<br \/>\n<br \/>\nThe idea was fairly simple; a customer should give some information (name, birthdate and zip number) to initiate an order form. This information was to be sent to a service called NUBIX, which would use this information to fetch more information about the customer. This extended information would then be returned, and the needed fields for an order would be automatically be filled in.<br \/>\n<br \/>\nTo fill you out with some background information, NUBIX is a web service which is central for power suppliers in Norway. Power suppliers can use this in their web pages to get basic information like address, place etc., but also more information regarding measuring point IDs etc (used to identify fuse boxes). This service is run on a IIS server, and as far as my research showed, no other power suppliers had implemented this with PHP. Also the people in control of NUBIX did not have any examples of implementation with PHP.<br \/>\n<br \/>\nAnyhow, my first instinct was obviously to try the native PHP SOAP library. NUBIX uses WSDL, and the requests and responses is pretty much straight forwards. It turned out that it wasn\u2019t as easy as first expected. I thought it might be just that I didn\u2019t understand how SOAP worked properly, so I stumbled across this brilliant explanation of it (check it out <a href=\"http:\/\/stackoverflow.com\/questions\/10511478\/php-soap-client-for-uk-mail-webservice-api\">here<\/a>). Basically I tried to solve it this way, but I had no luck this way either. I could connect to the service, but all I got back was \u201cThe user \u2018Unknown User\u2019 is not verified\u201d (loosely translated from Norwegian).<br \/>\n<br \/>\nMy next try was to go ahead and use Nusoap, which is a SOAP library developed before the native library. I hesitated to use this library, seeing as it is not in development anymore, and the only real reason to use it is legacy reasons. But I was on a deadline, so I gave it a shot and with got some progress. I managed to get passed the first error message I had received, but now I got some other error. I have to admit I can\u2019t remember what it was, but it had to do with the request I sent. This puzzled me, seeing as the request I sent resembled the example request I got from the people in control of NUBIX.<br \/>\n<br \/>\nMy last try was to send in raw XML, to make sure that the request was correct, down to the smallest whitespace. This time the response was that the verb in the request (POST in this case) was not allowed. I modified the code, so I could send the request as a GET request, but this did not work, since I were not able to pass any data.<br \/>\n<br \/>\nSo, how did I solve this? Well, after quite some time googling around, I came across another link to the NUBIX service, but in another format. The previous link was &#8220;https:\/\/ws.nubix.no\/Schemas\/2011\/Requestor\/NubixService.wsdl&#8221;, but the new one were &#8220;https:\/\/ws.nubix.no\/Nubix.asmx?WSDL&#8221;. Suddenly I was able to send raw XML as a POST request, and get a positive response back! Success at last.<br \/>\n<br \/>\nI won\u2019t be going in detail about all the code I wrote here, because it was a lot. The code below is a modified function to show how to send raw XML with nusoap. As you might see the function takes three parameters, last name, zip code and birth date (the format which it needs to be is 1990-10-15). Also you need to make sure that nusoap uses UTF-8.<br \/>\n<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n&lt;?php\r\nfunction getNUBIX($name, $zip, $bdate) {\r\n   $client = new nusoap_client(&#039;https:\/\/ws.nubix.no\/Nubix.asmx?WSDL&#039;, &#039;wsdl&#039;);\r\n   $client-&gt;soap_defencoding = &#039;UTF-8&#039;; \r\n   $client-&gt;decode_utf8 = false;\r\n   $id = &quot;2345212453234&quot;;\r\n        \r\n   $xmlbody = &#039;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\r\n      &lt;soap:Envelope xmlns:xsi=&quot;http:\/\/www.w3.org\/2001\/XMLSchema-instance&quot; xmlns:xsd=&quot;http:\/\/www.w3.org\/2001\/XMLSchema&quot; xmlns:soap=&quot;http:\/\/schemas.xmlsoap.org\/soap\/envelope\/&quot;&gt;\r\n         &lt;soap:Header&gt;\r\n            &lt;credentialsHeader xmlns=&quot;http:\/\/www.ediel.no\/schemas\/public\/nubix\/credentialsHeader&quot;&gt;\r\n               &lt;Username xmlns=&quot;&quot;&gt;*******&lt;\/Username&gt;\r\n               &lt;Password xmlns=&quot;&quot;&gt;*******&lt;\/Password&gt;\r\n            &lt;\/credentialsHeader&gt;\r\n         &lt;\/soap:Header&gt;\r\n         &lt;soap:Body&gt;\r\n            &lt;MeteringPointIdRequest xmlns=&quot;http:\/\/www.ediel.no\/schemas\/public\/nubix\/MeteringPointIdRequest&quot;&gt;\r\n               &lt;RequestId xmlns=&quot;&quot;&gt;&#039;.$id.&#039;&lt;\/RequestId&gt;\r\n               &lt;Requestor xmlns=&quot;&quot;&gt;\r\n                  &lt;GLN&gt;***********&lt;\/GLN&gt;\r\n               &lt;\/Requestor&gt;\r\n               &lt;Customers xmlns=&quot;&quot;&gt;\r\n                  &lt;DomesticCustomer xmlns=&quot;&quot;&gt;\r\n                     &lt;LastName&gt;&#039;.$name.&#039;&lt;\/LastName&gt;\r\n                     &lt;BirthDate&gt;&#039;.$date.&#039;&lt;\/BirthDate&gt;\r\n                     &lt;Addresses&gt;\r\n                        &lt;Address&gt;\r\n                           &lt;PostCode&gt;&#039;.$zip.&#039;&lt;\/PostCode&gt;\r\n                           &lt;CountryCode&gt;NO&lt;\/CountryCode&gt;\r\n                        &lt;\/Address&gt;\r\n                     &lt;\/Addresses&gt;\r\n                  &lt;\/DomesticCustomer&gt;\r\n               &lt;\/Customers&gt;\r\n            &lt;\/MeteringPointIdRequest&gt;\r\n         &lt;\/soap:Body&gt;\r\n      &lt;\/soap:Envelope&gt;&#039;;\r\n   $endpoint = &quot;http:\/\/www.ediel.no\/schemas\/public\/nubix\/:GetMeteringPointIdRequest&quot;;\r\n        \r\n   $result = $client-&gt;send($xmlbody, $endpoint);\r\n   \/\/print_r($client-&gt;request);\r\n   \/\/print_r($client-&gt;response);\r\n   return $result;\r\n} \/\/ End getNubix\r\n?&gt;\r\n<\/pre>\n<p>\nIf I was to do this again I would probably try to find a way to send raw XML with the native SOAP library. Unfortunately I did not have time to do this now, but I should definitely do it as an update to the project. I do believe that because of how the NUBIX service works it is not possible to send requests the \u201csimple\u201d way. However, if anyone has examples that might resemble this one, and have a solution, feel free to share it!<br \/>\n<br \/>\nAs far as SOAP as a protocol my impression is that it is quite good, but maybe not that developed in PHP. As far as I could find, there was not that many resources around, but then again, I might have worked towards a special web service?<br \/><\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2012\/08\/Soap.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 31 Aug 2012 21:50:05 +0000","created_by":1,"updated_at":"Thu, 18 Jul 2013 20:38:02 +0000","updated_by":1,"published_at":"Fri, 31 Aug 2012 21:50:05 +0000","published_by":1},{"id":155,"title":"Windows Phone 8 SDK in VM","slug":"windows-phone-8-sdk-in-vm","markdown":"\nSo recently I\u2019ve been starting to work a bit with the Windows Phone 8 SDK, and since I don\u2019t own a WP8 phone myself, my only option for testing is using the emulator from Visual Studio. At first I was hoping to use a virtual machine with Windows 8, but that gave me quite a bit of trouble. I got some error messages stating that there was some issues with the network interface, and after some googling I concluded that you cannot run the emulator inside a virtual machine.  \n  \n I have a workstation at home, which had Windows 7 installed, so I figured I\u2019ll just install Windows 8 on that, and give it a go. Turns out the hardware is too old, so Hyper-V doesn\u2019t run as intended. Doing some more googling I came across CoreInfo.exe, a tool which you can use to verify the computer settings for virtualization (along with other stuff, but I won\u2019t go into details on that). You can find the tool [here](http:\/\/technet.microsoft.com\/en-us\/sysinternals\/cc835722.aspx).  \n  \n When the files have downloaded, unzip it, and place it for example in C:\\. Open a command prompt in elevated mode, and run the command \u201cCoreInfo.exe -V\u201d. This is the result from my run on my work laptop:  \n[![CoreInfo](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2013\/07\/CoreInfo-300x150.png?fit=300%2C150)](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2013\/07\/CoreInfo.png)  \n  \n The issue on my workstation was that EPT was not present, so I didn\u2019t have support for SLAT, which is required for Hyper-V. Seeing as this was present on my laptop, I figured there had to be a way to make the emulator work in a virtual machine (I don\u2019t have the possibility to install Windows 8 at my laptop at present time). More googling gave me a link to Nokia\u2019s Developer page, which had instructions on how to make it work! You can find the article [here](http:\/\/social.technet.microsoft.com\/wiki\/contents\/articles\/27606.windows-phone-windows-phone-8-sdk-on-a-virtual-machine-with-working-emulator.aspx). While that article is based on VMWare Workstation, I got it working on WMWare Player. Also I didn\u2019t reinstall the virtual machine, I just changed the settings on my existing virtual machine. The three things I found were missing in my settings were the number of processor cores, the \u201cVirtualize Intel VT-x\/EPT or AMD-v\/RVI\u201d and the line \u201chypervisor.cpuid.v0 = \u201dFALSE\u201d\u201d. When I changed those things I was able to run the WP8 emulator inside the virtual machine.  \n  \n Gotta say I love the power of Google!\n\n[EDIT] The developer page from Nokia has been removed now, due to Microsoft purchasing Nokia. I have updated the link in question so it goes to the corresponding page at Microsoft\u2019s developer page.\n\n\n","html":"<p>So recently I&#8217;ve been starting to work a bit with the Windows Phone 8 SDK, and since I don&#8217;t own a WP8 phone myself, my only option for testing is using the emulator from Visual Studio. At first I was hoping to use a virtual machine with Windows 8, but that gave me quite a bit of trouble. I got some error messages stating that there was some issues with the network interface, and after some googling I concluded that you cannot run the emulator inside a virtual machine.<br \/>\n<br \/>\nI have a workstation at home, which had Windows 7 installed, so I figured I&#8217;ll just install Windows 8 on that, and give it a go. Turns out the hardware is too old, so Hyper-V doesn&#8217;t run as intended. Doing some more googling I came across CoreInfo.exe, a tool which you can use to verify the computer settings for virtualization (along with other stuff, but I won&#8217;t go into details on that). You can find the tool <a href=\"http:\/\/technet.microsoft.com\/en-us\/sysinternals\/cc835722.aspx\" target=\"_blank\">here<\/a>.<br \/>\n<br \/>\nWhen the files have downloaded, unzip it, and place it for example in C:\\. Open a command prompt in elevated mode, and run the command &#8220;CoreInfo.exe -V&#8221;. This is the result from my run on my work laptop:<br \/>\n<a href=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2013\/07\/CoreInfo.png\" rel=\"lightbox[155]\"><img src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2013\/07\/CoreInfo-300x150.png?fit=300%2C150\" alt=\"CoreInfo\" class=\"alignnone size-medium wp-image-157\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2013\/07\/CoreInfo.png?resize=300%2C150 300w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2013\/07\/CoreInfo.png?w=678 678w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><br \/>\n<br \/>\nThe issue on my workstation was that EPT was not present, so I didn&#8217;t have support for SLAT, which is required for Hyper-V. Seeing as this was present on my laptop, I figured there had to be a way to make the emulator work in a virtual machine (I don&#8217;t have the possibility to install Windows 8 at my laptop at present time). More googling gave me a link to Nokia&#8217;s Developer page, which had instructions on how to make it work! You can find the article <a href=\"http:\/\/social.technet.microsoft.com\/wiki\/contents\/articles\/27606.windows-phone-windows-phone-8-sdk-on-a-virtual-machine-with-working-emulator.aspx\" target=\"_blank\">here<\/a>. While that article is based on VMWare Workstation, I got it working on WMWare Player. Also I didn&#8217;t reinstall the virtual machine, I just changed the settings on my existing virtual machine. The three things I found were missing in my settings were the number of processor cores, the &#8220;Virtualize Intel VT-x\/EPT or AMD-v\/RVI&#8221; and the line &#8220;hypervisor.cpuid.v0 = \u201dFALSE\u201d&#8221;. When I changed those things I was able to run the WP8 emulator inside the virtual machine.<br \/>\n<br \/>\nGotta say I love the power of Google!<\/p>\n<p>[EDIT] The developer page from Nokia has been removed now, due to Microsoft purchasing Nokia. I have updated the link in question so it goes to the corresponding page at Microsoft&#8217;s developer page.<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2013\/07\/WP8.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 21 Jul 2013 14:46:22 +0000","created_by":1,"updated_at":"Mon, 20 Apr 2015 14:40:16 +0000","updated_by":1,"published_at":"Sun, 21 Jul 2013 14:46:22 +0000","published_by":1},{"id":186,"title":"LeapMotion","slug":"leapmotion","markdown":"\nToday I finally received my LeapMotion. I sent in a pre-order over a year ago, and they finally released it a few days ago. Seeing as I received it today, I wanted to write a little about my first impression.  \n  \n So far, so good! The first thing I had to do was to install the driver, to make it work. The installation was easy. You get directed to a setup page at LeapMotions web sites, where you download your installer. While you wait for the download to finish, you have the chance to see a video as an introduction. The installation itself went smooth and then it\u2019s time to connect the device. A firmware update was installed, and then Airspace Home (were you can start all your apps) started.  \n  \n When Airspace Home started up, it went through some steps as an introduction. This was the first experience with the device, and you were supposed to just see how it worked. Then you were offered to create an account, unless you had registered already. I logged in, and some free apps were installed by default. The UI is neat and clean, as expected. As I already had been to Airspace, I had found an app called \u201cTouchless for Windows\u201d, which was installed. This is an app which basically gives you the control of the mouse in your hands.  \n  \n Touchless for Windows had a little introduction, with some exercises you could go through, to see how it worked. I\u2019ve been using it for half an hour now, and it takes a bit to getting used to it. I am yet to be in full control, but I guess that it just takes some time to practise. Hopefully I will be able to master it shortly, and explore more of the apps available. Later I will make sure to check out the API, and see if I can make any apps myself. More for fun than anything.  \n  \n It will be interesting to see if LeapMotion becomes my primary navigation tool, or if it just ends up as a toy.  \n  \n You can get yourself a LeapMotion by visiting their page [here](http:\/\/leapmotion.com) []()!\n\n\n","html":"<p>Today I finally received my LeapMotion. I sent in a pre-order over a year ago, and they finally released it a few days ago. Seeing as I received it today, I wanted to write a little about my first impression.<br \/>\n<br \/>\nSo far, so good! The first thing I had to do was to install the driver, to make it work. The installation was easy. You get directed to a setup page at LeapMotions web sites, where you download your installer. While you wait for the download to finish, you have the chance to see a video as an introduction. The installation itself went smooth and then it&#8217;s time to connect the device. A firmware update was installed, and then Airspace Home (were you can start all your apps) started.<br \/>\n<br \/>\nWhen Airspace Home started up, it went through some steps as an introduction. This was the first experience with the device, and you were supposed to just see how it worked. Then you were offered to create an account, unless you had registered already. I logged in, and some free apps were installed by default. The UI is neat and clean, as expected. As I already had been to Airspace, I had found an app called &#8220;Touchless for Windows&#8221;, which was installed. This is an app which basically gives you the control of the mouse in your hands.<br \/>\n<br \/>\nTouchless for Windows had a little introduction, with some exercises you could go through, to see how it worked. I&#8217;ve been using it for half an hour now, and it takes a bit to getting used to it. I am yet to be in full control, but I guess that it just takes some time to practise. Hopefully I will be able to master it shortly, and explore more of the apps available. Later I will make sure to check out the API, and see if I can make any apps myself. More for fun than anything.<br \/>\n<br \/>\nIt will be interesting to see if LeapMotion becomes my primary navigation tool, or if it just ends up as a toy.<br \/>\n<br \/>\nYou can get yourself a LeapMotion by visiting their page <a href=\"http:\/\/leapmotion.com\">here<a\/>!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2013\/07\/LeapMotion.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 26 Jul 2013 16:26:53 +0000","created_by":1,"updated_at":"Fri, 26 Jul 2013 16:26:53 +0000","updated_by":1,"published_at":"Fri, 26 Jul 2013 16:26:53 +0000","published_by":1},{"id":191,"title":"Blog","slug":"blog","markdown":"","html":"","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 14 Mar 2014 10:16:13 +0000","created_by":1,"updated_at":"Fri, 14 Mar 2014 10:17:34 +0000","updated_by":1,"published_at":"Fri, 14 Mar 2014 10:16:13 +0000","published_by":1},{"id":226,"title":"myRemote Privacy","slug":"myremote-privacy","markdown":"\nThis application does not share personal information with third parties nor does it store any information about you.\n\nThis privacy policy is subject to change without notice and was last updated on April 12th 2014. If you have any questions feel free to contact me directly at [me@leiflarsen.org](mailto:me@leiflarsen.org).\n\n\n","html":"<p>This application does not share personal information with third parties nor does it store any information about you.<\/p>\n<p>This privacy policy is subject to change without notice and was last updated on April 12th 2014. If you have any questions feel free to contact me directly at <a href=\"mailto:me@leiflarsen.org\">me@leiflarsen.org<\/a>.<\/p>\n","image":null,"featured":0,"page":1,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sat, 12 Apr 2014 13:20:15 +0000","created_by":1,"updated_at":"Sat, 12 Apr 2014 13:22:10 +0000","updated_by":1,"published_at":"Sat, 12 Apr 2014 13:20:15 +0000","published_by":1},{"id":201,"title":"Course on Agile development","slug":"course-agile-development","markdown":"\nA few weeks ago I participated in a course on Agile development, lead by Venkat Subramaniam. The course was a one day, two-part course, where the first part was an introduction to agile development with benefits of agile development, compared to other development methods. The second part was aiming to show technical practices to sustain agile development.  \n  \n A few of the things I thought of as key points were frequent releases, early feedback, TDD and automated testing. As the course went on I caught myself thinking that these were practices I have thought of as reasonable earlier, without actually using them. I will not go into details regarding the techniques we saw, as I believe that others can explain them better than me.  \n  \n In future projects I will definitely try to implement these practices, as I see that it could give me more flexibility in projects. I also got advice from Venkat on a book on TDD, since I don\u00b4t have much experience with it. The book is called \u201cGrowing object-oriented software, guided by tests\u201d and is written by Steve Freemand and Nat Pryce. I haven\u00b4t finished it yet, but so far it? been a good read.  \n  \n The next step will be to implement this in my next project, in which I have already started. Care to share your experience with agile development?\n\n\n","html":"<p>A few weeks ago I participated in a course on Agile development, lead by Venkat Subramaniam. The course was a one day, two-part course, where the first part was an introduction to agile development with benefits of agile development, compared to other development methods. The second part was aiming to show technical practices to sustain agile development.<br \/>\n<br \/>\nA few of the things I thought of as key points were frequent releases, early feedback, TDD and automated testing. As the course went on I caught myself thinking that these were practices I have thought of as reasonable earlier, without actually using them. I will not go into details regarding the techniques we saw, as I believe that others can explain them better than me.<br \/>\n<br \/>\nIn future projects I will definitely try to implement these practices, as I see that it could give me more flexibility in projects. I also got advice from Venkat on a book on TDD, since I don\u00b4t have much experience with it. The book is called &#8220;Growing object-oriented software, guided by tests&#8221; and is written by Steve Freemand and Nat Pryce. I haven\u00b4t finished it yet, but so far it? been a good read.<br \/>\n<br \/>\nThe next step will be to implement this in my next project, in which I have already started. Care to share your experience with agile development?<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sat, 12 Apr 2014 17:18:48 +0000","created_by":1,"updated_at":"Sun, 13 Apr 2014 15:41:54 +0000","updated_by":1,"published_at":"Sat, 12 Apr 2014 17:18:48 +0000","published_by":1},{"id":232,"title":"Privacy settings in Windows store app","slug":"privacy-settings-windows-store-app","markdown":"\nSo recently I been working on finishing my first Windows store app. This app (which I will tell more about when it? been released) needs connection to the local network. This meant that this was a permission I would need to get from the user.  \n  \n Thinking that since I did not store any data from the user, it would not need any privacy policy. This turned out to be wrong, and as I submitted the app, it only took a few hours before the feedback was \u201crejected\u201d. The notes I got was the following:\n\n> The app has declared access to network capabilities and no privacy statement was provided in the Windows Settings Charm.\n\n The solution to this was to create a new page on my domain, add a privacy policy and then add this to the Windows Settings Charm, as well as submit it in the description to the store. To add this to the Windows Settings Charm I found this blog entry, which explains it quite well. Click [here](http:\/\/jimiz.net\/2012\/12\/privacy-policy-windows-store-apps\/#axzz2yfnVEnWJ \"How to add privacy policy to Windows Settings Charm\") to see the blog.  \n  \n As a policy I submitted the following:\n\n> This application does not share personal information with third parties nor does it store any information about you.  \n>  This privacy policy is subject to change without notice and was last updated on April 12th 2014. If you have any questions feel free to contact me directly at me@leiflarsen.org.\n\nIn my opinion that should be enough, seeing as the app does not really does not store anything. Then it\u00b4s just to wait and see if Microsoft feels the same way.  \n  \n [EDIT April 14th 2014]  \n I can now confirm that the policy text was enough, as my app was released just today.\n\n\n","html":"<p>So recently I been working on finishing my first Windows store app. This app (which I will tell more about when it? been released) needs connection to the local network. This meant that this was a permission I would need to get from the user.<br \/>\n<br \/>\nThinking that since I did not store any data from the user, it would not need any privacy policy. This turned out to be wrong, and as I submitted the app, it only took a few hours before the feedback was &#8220;rejected&#8221;. The notes I got was the following:<\/p>\n<blockquote><p>The app has declared access to network capabilities and no privacy statement was provided in the Windows Settings Charm.<\/p><\/blockquote>\n<p>\nThe solution to this was to create a new page on my domain, add a privacy policy and then add this to the Windows Settings Charm, as well as submit it in the description to the store. To add this to the Windows Settings Charm I found this blog entry, which explains it quite well. Click <a href=\"http:\/\/jimiz.net\/2012\/12\/privacy-policy-windows-store-apps\/#axzz2yfnVEnWJ\" title=\"How to add privacy policy to Windows Settings Charm\" target=\"_blank\">here<\/a> to see the blog.<br \/>\n<br \/>\nAs a policy I submitted the following:<\/p>\n<blockquote><p>This application does not share personal information with third parties nor does it store any information about you.<br \/>\nThis privacy policy is subject to change without notice and was last updated on April 12th 2014. If you have any questions feel free to contact me directly at me@leiflarsen.org<\/a>.\n<\/p><\/blockquote>\n<p>In my opinion that should be enough, seeing as the app does not really does not store anything. Then it\u00b4s just to wait and see if Microsoft feels the same way.<br \/>\n<br \/>\n[EDIT April 14th 2014]<br \/>\nI can now confirm that the policy text was enough, as my app was released just today.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 13 Apr 2014 12:00:43 +0000","created_by":1,"updated_at":"Thu, 04 Dec 2014 11:41:59 +0000","updated_by":1,"published_at":"Sun, 13 Apr 2014 12:00:43 +0000","published_by":1},{"id":260,"title":"My goals for 2015","slug":"goals-2015","markdown":"\nWe\u2019re about to leave 2014 behind, and enter what will be, at least for me, an exciting year.  \n Through the first month of the year I will participate in a course on [coursera](https:\/\/www.coursera.org\/ \"Coursera\") regarding cryptography. This is a free, online course, from Stanford University, lead by Dan Boneh. Cryptography is something I have picked up an interest in lately, alongside with computer security, so it will be interesting to see if I can get some better knowledge around this subject. As far as I can tell it will be interesting to participate in this course, as it will be lectures and assignments, which means I get to test my understanding of the subjects.\n\nAnother thing I personally look really forward to is the fact that I start in a new job in February. I go from being a software engineer, working with configuration and development of industrial control systems, to work as a software engineer, with all my focus in programming and development. I have lately felt that this is something I need to do to develop as a developer, and I have realized that it is what I really want to do.\n\nWhen we came into 2014 I didn\u2019t set any particular goals to myself. I guess you could say I were in at a stage of not really knowing what I wanted to do with the year, and as such I haven\u2019t reached nor not reached any goals. This has changed when we cross the finishing line of 2014. A lot of people state that if you want to reach your goals, you should tell people about them (especially true if you try to change habits, I guess). So I have decided to share most of them here.\n\nGoals should be measurable, so I have tried my very best to put some numbers next to each goal.  \n My goals for 2015 is the following:\n\nWrite at least 25 blog posts.\nI have wanted to write more posts this year, however I have not actually done it. In 2015 I aim to write a new post at least every other week. I believe that if I can manage this, I can both increase my understanding of the topics I write about, but also get feedback on ideas and my understanding of subjects.\n\nRelease at least 3 apps\nAt this moment I have 3 app ideas I would like to see come to life. By making this a goal, it means I have to complete one app per quarter (excluding the summer season!). When thinking about the fact that I start a new job, work out, play guitar and also want some time for family and friends, it might be a bit optimistic. But hey, I like challenges!\n\nDo some kind of work out at least 120 times within the year\nI am in a good rythm regarding work out now, where I go to the gym three times a week. I\u2019d like to keep that trend going through 2015. Excluding a few weeks with vacation this leaves me at around 120 times. Note that by working out I mean running\/jogging\/weight lifting\/playing soccer\/boxing etc.\n\nImprove my programming skills\nOk, this is a dogdy one. How do I measure my programming skills? Well, I have a pretty good idea on where I am today, so my goal is to improve by the end of the year. I plan to take one or possibly two certifications from Microsoft, so I will let that be my guide.\n\nI do have some more goals on a personal level, but those are just that, personal. It will be exciting to sit here the last days of December 2015 and summarize my year, to see how it\u2019s been.\n\nDo you have any goals for 2015? Are they achievable?\n\nAnyway, until next time! Have a great new year celebration!\n\n\n","html":"<p>We&#8217;re about to leave 2014 behind, and enter what will be, at least for me, an exciting year.<br \/>\nThrough the first month of the year I will participate in a course on <a href=\"https:\/\/www.coursera.org\/\" title=\"Coursera\" target=\"_blank\">coursera<\/a> regarding cryptography. This is a free, online course, from Stanford University, lead by Dan Boneh. Cryptography is something I have picked up an interest in lately, alongside with computer security, so it will be interesting to see if I can get some better knowledge around this subject. As far as I can tell it will be interesting to participate in this course, as it will be lectures and assignments, which means I get to test my understanding of the subjects. <\/p>\n<p>Another thing I personally look really forward to is the fact that I start in a new job in February. I go from being a software engineer, working with configuration and development of industrial control systems, to work as a software engineer, with all my focus in programming and development. I have lately felt that this is something I need to do to develop as a developer, and I have realized that it is what I really want to do. <\/p>\n<p>When we came into 2014 I didn&#8217;t set any particular goals to myself. I guess you could say I were in at a stage of not really knowing what I wanted to do with the year, and as such I haven&#8217;t reached nor not reached any goals. This has changed when we cross the finishing line of 2014. A lot of people state that if you want to reach your goals, you should tell people about them (especially true if you try to change habits, I guess). So I have decided to share most of them here.<\/p>\n<p>Goals should be measurable, so I have tried my very best to put some numbers next to each goal.<br \/>\nMy goals for 2015 is the following:<\/p>\n<ul>Write at least 25 blog posts.<\/ul>\n<p>I have wanted to write more posts this year, however I have not actually done it. In 2015 I aim to write a new post at least every other week. I believe that if I can manage this, I can both increase my understanding of the topics I write about, but also get feedback on ideas and my understanding of subjects.<\/p>\n<ul>Release at least 3 apps<\/ul>\n<p>At this moment I have 3 app ideas I would like to see come to life. By making this a goal, it means I have to complete one app per quarter (excluding the summer season!). When thinking about the fact that I start a new job, work out, play guitar and also want some time for family and friends, it might be a bit optimistic. But hey, I like challenges!<\/p>\n<ul>Do some kind of work out at least 120 times within the year<\/ul>\n<p>I am in a good rythm regarding work out now, where I go to the gym three times a week. I&#8217;d like to keep that trend going through 2015. Excluding a few weeks with vacation this leaves me at around 120 times. Note that by working out I mean running\/jogging\/weight lifting\/playing soccer\/boxing etc.<\/p>\n<ul>Improve my programming skills<\/ul>\n<p>Ok, this is a dogdy one. How do I measure my programming skills? Well, I have a pretty good idea on where I am today, so my goal is to improve by the end of the year. I plan to take one or possibly two certifications from Microsoft, so I will let that be my guide.<\/p>\n<p>I do have some more goals on a personal level, but those are just that, personal. It will be exciting to sit here the last days of December 2015 and summarize my year, to see how it&#8217;s been. <\/p>\n<p>Do you have any goals for 2015? Are they achievable? <\/p>\n<p>Anyway, until next time! Have a great new year celebration! <\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2014\/12\/canfield_fireworks_2009_13_by_wdwparksgal_stock-d24vas4.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 30 Dec 2014 22:15:00 +0000","created_by":1,"updated_at":"Tue, 30 Dec 2014 22:15:00 +0000","updated_by":1,"published_at":"Tue, 30 Dec 2014 22:15:00 +0000","published_by":1},{"id":241,"title":"I bought a Mac Mini!","slug":"i-bought-a-mac-mini","markdown":"\nSo this post should really have been posted almost a year ago. Perhaps I should have chosen a different title. Oh well, I planned to write this post at the time, so let us assume I did, just with more impressions than I had back then.\n\nSo to get to the point; I bought a Mac Mini! I have always used Windows for everything, but I have always been curious about OS X and standardizing on Apple products at home. Both my SO and me use iPhone, we have an iPad and so on, so finally I thought it was about time I tried a Mac as well. However, seeing as the prices are what they are, I did not want to go all in with an iMac just yet, so I decided to go for a Mac Mini. I figured that it could do what I would like from a Mac anyway, and if I like it, I could upgrade later.\n\nThe model I bought was a Mac Mini, late 2012 edition. The specs are as follows:\n\n**Processor:** Intel Core I7 \u2013 2,3 GHz\n**Memory:** 8 GB\n**HDD:** 1TB\nSo as you can see, not the best specifications, but to save costs it was good enough. And I\u2019m not disappointed! As with most of the products Apple make, it just works. The setup was quite easy, and although the UI is a bit different from Windows, I managed to learn it quickly. After about 8-9 months with it, I am comfortable enough with the UI and shortcuts to be able to use it as efficiently as Windows.\n\nMy primary goal of using OS X is to do development for iOS and iPhone. At first I was playing around with X-Code and Objective-C, however I am more comfortable working with C# and .NET, so I have moved to Xamarin and cross-platform development. If this is a good choice is another discussion, which I won\u2019t be doing now. Maybe I\u2019ll write a post about it later. So my use of the Mac is not for heavy photo or film editing, but primarily programming.\n\nPerformance wise it is ok, but nothing more. As you can tell by the specifications it\u2019s not top notch, but it works for my use. I do notice that the performance is a bit slow when using virtual machines and using the iOS simulator. For these reasons, I am considering upgrading the memory to 16 gb, and possibly adding an SSD as an addition to the HDD. Then I can create a fusion drive, which apparently will make the entire machine boot up quicker and perform quicker in general. Anybody with experience doing this? I would love to get some feedback as to how to perform this (although many tutorials probably exist).\n\n\n","html":"<p>So this post should really have been posted almost a year ago. Perhaps I should have chosen a different title. Oh well, I planned to write this post at the time, so let us assume I did, just with more impressions than I had back then.<\/p>\n<p>So to get to the point; I bought a Mac Mini! I have always used Windows for everything, but I have always been curious about OS X and standardizing on Apple products at home. Both my SO and me use iPhone, we have an iPad and so on, so finally I thought it was about time I tried a Mac as well. However, seeing as the prices are what they are, I did not want to go all in with an iMac just yet, so I decided to go for a Mac Mini. I figured that it could do what I would like from a Mac anyway, and if I like it, I could upgrade later. <\/p>\n<p>The model I bought was a Mac Mini, late 2012 edition. The specs are as follows:<\/p>\n<ul><strong>Processor:<\/strong> Intel Core I7 &#8211; 2,3 GHz<\/ul>\n<ul><strong>Memory:<\/strong> 8 GB<\/ul>\n<ul><strong>HDD:<\/strong> 1TB<\/ul>\n<p>So as you can see, not the best specifications, but to save costs it was good enough. And I&#8217;m not disappointed! As with most of the products Apple make, it just works. The setup was quite easy, and although the UI is a bit different from Windows, I managed to learn it quickly. After about 8-9 months with it, I am comfortable enough with the UI and shortcuts to be able to use it as efficiently as Windows. <\/p>\n<p>My primary goal of using OS X is to do development for iOS and iPhone. At first I was playing around with X-Code and Objective-C, however I am more comfortable working with C# and .NET, so I have moved to Xamarin and cross-platform development. If this is a good choice is another discussion, which I won&#8217;t be doing now. Maybe I&#8217;ll write a post about it later. So my use of the Mac is not for heavy photo or film editing, but primarily programming.<\/p>\n<p>Performance wise it is ok, but nothing more. As you can tell by the specifications it&#8217;s not top notch, but it works for my use. I do notice that the performance is a bit slow when using virtual machines and using the iOS simulator. For these reasons, I am considering upgrading the memory to 16 gb, and possibly adding an SSD as an addition to the HDD. Then I can create a fusion drive, which apparently will make the entire machine boot up quicker and perform quicker in general. Anybody with experience doing this? I would love to get some feedback as to how to perform this (although many tutorials probably exist).<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/01\/mac_mini.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 12 Jan 2015 17:55:13 +0000","created_by":1,"updated_at":"Mon, 12 Jan 2015 17:55:13 +0000","updated_by":1,"published_at":"Mon, 12 Jan 2015 17:55:13 +0000","published_by":1},{"id":273,"title":"Relearning guitar","slug":"relearning-guitar","markdown":"\nI\u2019ve played guitar since I was around 16 years old. When I first started out I didn\u2019t really do any courses or follow any learning paths, I just tried to play songs I liked, while having fun. I was fortunate enough to join a band, and can safely say that it was great for my skills. Not only did I learn to play fairly well, I also played well with others and on stage. Great times!\n\nUnfortunately the band dissolved. Me and some other friends tried to start a new band, however it didn\u2019t really work out. For this reason my guitar playing decreased throughout the studies, and for the last couple of years it\u2019s practically been no playing at all. So before Christmas last year I came across a guitar I had wanted for a long time and naturally I decided to give myself an early Christmas present!\n\n<figure class=\"wp-caption alignnone\" id=\"attachment_274\" style=\"width: 128px\">[![Epiphone Les Paul](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/01\/EpiphoneLesPaul-128x300.png?fit=128%2C300)](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/01\/EpiphoneLesPaul.png)<figcaption class=\"wp-caption-text\">Epiphone Les Paul Black Beauty<\/figcaption><\/figure>The guitar in question is a Epiphone Les Paul Black Beauty. Originally I wanted the original Gibson edition, but this looks as good and is a bit cheaper. Sounds really great as well!\n\nSeeing as I bought a new guitar, I felt the need to actually use it. Therefore I picked up playing again, however this time I thought \u201chey, why not try to learn guitar properly\u201d. So I have been going slowly, teaching myself chords and doing exercises, but not forgetting the fun of playing some of the easier songs I know. In this relearning phase I have been following along with the course hosted by [Justin Guitar](http:\/\/www.justinguitar.com\/ \"Justin Guitar\"). I find it to be really good as it takes everything step by step, with both video lectures and written text. I can do it in my own pace, and it\u2019s good for increasing my own enthusiasm of guitar playing. So if you are new to guitar, or simply need to relearn after a long hiatus, then check it out!\n\nDo you play guitar or any other instruments? How was your learning experience?\n\n\n","html":"<p>I&#8217;ve played guitar since I was around 16 years old. When I first started out I didn&#8217;t really do any courses or follow any learning paths, I just tried to play songs I liked, while having fun. I was fortunate enough to join a band, and can safely say that it was great for my skills. Not only did I learn to play fairly well, I also played well with others and on stage. Great times!<\/p>\n<p>Unfortunately the band dissolved. Me and some other friends tried to start a new band, however it didn&#8217;t really work out. For this reason my guitar playing decreased throughout the studies, and for the last couple of years it&#8217;s practically been no playing at all. So before Christmas last year I came across a guitar I had wanted for a long time and naturally I decided to give myself an early Christmas present! <\/p>\n<figure id=\"attachment_274\" style=\"width: 128px\" class=\"wp-caption alignnone\"><a href=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/01\/EpiphoneLesPaul.png\" rel=\"lightbox[273]\"><img src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/01\/EpiphoneLesPaul-128x300.png?fit=128%2C300\" alt=\"Epiphone Les Paul\" class=\"size-medium wp-image-274\" data-recalc-dims=\"1\" \/><\/a><figcaption class=\"wp-caption-text\">Epiphone Les Paul Black Beauty<\/figcaption><\/figure>\n<p>The guitar in question is a Epiphone Les Paul Black Beauty. Originally I wanted the original Gibson edition, but this looks as good and is a bit cheaper. Sounds really great as well!<\/p>\n<p>Seeing as I bought a new guitar, I felt the need to actually use it. Therefore I picked up playing again, however this time I thought &#8220;hey, why not try to learn guitar properly&#8221;. So I have been going slowly, teaching myself chords and doing exercises, but not forgetting the fun of playing some of the easier songs I know. In this relearning phase I have been following along with the course hosted by <a href=\"http:\/\/www.justinguitar.com\/\" title=\"Justin Guitar\" target=\"_blank\">Justin Guitar<\/a>. I find it to be really good as it takes everything step by step, with both video lectures and written text. I can do it in my own pace, and it&#8217;s good for increasing my own enthusiasm of guitar playing. So if you are new to guitar, or simply need to relearn after a long hiatus, then check it out!<\/p>\n<p>Do you play guitar or any other instruments? How was your learning experience?<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/01\/EpiphoneLesPaul.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 30 Jan 2015 22:59:49 +0000","created_by":1,"updated_at":"Fri, 30 Jan 2015 22:59:49 +0000","updated_by":1,"published_at":"Fri, 30 Jan 2015 22:59:49 +0000","published_by":1},{"id":278,"title":"Why I chose Xamarin","slug":"chose-xamarin","markdown":"\nI mentioned in an earlier post that I have chosen to use Xamarin for cross-platform development. In this post I will write a bit why I chose Xamarin.\n\nMy way towards app development started with the introduction of Windows 8. With the store Microsoft presented (and the lack of apps for it) I saw an opportunity to create some apps for the Windows platform. The first (and only one) app I created was a remote controller for Onkyo receivers, specially created for the Microsoft Surface. This was programmed using C# and XAML. Moving on I found that I still were using an iPhone myself. Seeing as I still have some ideas for apps I personally want to use, I saw the need to change programming platform.\n\nQuite a few technologies exist for app development, and you need to consider if you want to program for one specific OS or for several. You could choose Objective C or Swift for iOS and mac, C#\/XAML or HTML\/Javascript for Windows 8.1\/Windows Phone or Java for Android. Or you could go for a more generic solution by creating a responsive web site, or use a hybrid framework. Of course there are advantages and disadvantages for all, and it really comes down to what type of app you want to create.\n\nI looked into Objective C for iOS, however I found that I really didn\u2019t want to learn a new language at the time, so I stopped that approach. Java was a language I had learnt while studying, but using it would mean I would only program for Android. Also off limits for me, since I use an iPhone myself. I also found the hybrid framework Phonegap, which allows you to use HTML, CSS and Javascript to create a cross-platform app. The good thing about this is that it\u2019s fairly easy to learn, and you have a lot of the native mobile features available.\n\nPhonegap was something I tested for a while, but I never released any apps using it. I also came to the realization that C# is the programming language I am most comfortable with, and what I want to use professionally. During all this time I\u2019d heard of Xamarin, as a cross-platform development tool, so I decided to give it a try. The trial\/free edition was quite limited, in terms of size of the application, so I were not able to see the complete possibilities, however I saw enough to decided that I wanted to give it a go. Seeing as you have to pay for the license (either subscription every month, or a one-time fee) both for Android and iOS, I decided to start with iOS development. I am using the indie developer license, so I don\u2019t have the integration with Visual Studio, but I feel that Xamarin Studio is enough for now. After all I\u2019m currently just working on my Mac Mini anyway.\n\nMy plan is to submit my first app to Apples App store at 1st of March, and if it gets good feedback I will purchase a license for Android and start with the Android version of the app. You will have to wait until the app is released to know what it is!\n\nWriting this post I have deliberately chosen not to discuss all advantages or disadvantages of the different ways to develop apps, and that is simply because that discussion could go on and on. There are plenty of other blogs and sites out there that brings up that discussion, just do a quick google search. However, if anyone have some comments regarding this, please let me know! I am not stuck on Xamarin, although at the moment it is my preferred choice.\n\n\n","html":"<p>I mentioned in an earlier post that I have chosen to use Xamarin for cross-platform development. In this post I will write a bit why I chose Xamarin.<br \/>\n<!--more--><\/p>\n<p>My way towards app development started with the introduction of Windows 8. With the store Microsoft presented (and the lack of apps for it) I saw an opportunity to create some apps for the Windows platform. The first (and only one) app I created was a remote controller for Onkyo receivers, specially created for the Microsoft Surface. This was programmed using C# and XAML. Moving on I found that I still were using an iPhone myself. Seeing as I still have some ideas for apps I personally want to use, I saw the need to change programming platform. <\/p>\n<p>Quite a few technologies exist for app development, and you need to consider if you want to program for one specific OS or for several. You could choose Objective C or Swift for iOS and mac, C#\/XAML or HTML\/Javascript for Windows 8.1\/Windows Phone or Java for Android. Or you could go for a more generic solution by creating a responsive web site, or use a hybrid framework. Of course there are advantages and disadvantages for all, and it really comes down to what type of app you want to create. <\/p>\n<p>I looked into Objective C for iOS, however I found that I really didn&#8217;t want to learn a new language at the time, so I stopped that approach. Java was a language I had learnt while studying, but using it would mean I would only program for Android. Also off limits for me, since I use an iPhone myself. I also found the hybrid framework Phonegap, which allows you to use HTML, CSS and Javascript to create a cross-platform app. The good thing about this is that it&#8217;s fairly easy to learn, and you have a lot of the native mobile features available.  <\/p>\n<p>Phonegap was something I tested for a while, but I never released any apps using it. I also came to the realization that C# is the programming language I am most comfortable with, and what I want to use professionally. During all this time I&#8217;d heard of Xamarin, as a cross-platform development tool, so I decided to give it a try. The trial\/free edition was quite limited, in terms of size of the application, so I were not able to see the complete possibilities, however I saw enough to decided that I wanted to give it a go. Seeing as you have to pay for the license (either subscription every month, or a one-time fee) both for Android and iOS, I decided to start with iOS development. I am using the indie developer license, so I don&#8217;t have the integration with Visual Studio, but I feel that Xamarin Studio is enough for now. After all I&#8217;m currently just working on my Mac Mini anyway.  <\/p>\n<p>My plan is to submit my first app to Apples App store at 1st of March, and if it gets good feedback I will purchase a license for Android and start with the Android version of the app. You will have to wait until the app is released to know what it is! <\/p>\n<p>Writing this post I have deliberately chosen not to discuss all advantages or disadvantages of the different ways to develop apps, and that is simply because that discussion could go on and on. There are plenty of other blogs and sites out there that brings up that discussion, just do a quick google search. However, if anyone have some comments regarding this, please let me know! I am not stuck on Xamarin, although at the moment it is my preferred choice. <\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/02\/xamarin-logo.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 06 Feb 2015 19:12:07 +0000","created_by":1,"updated_at":"Tue, 07 Apr 2015 20:46:35 +0000","updated_by":1,"published_at":"Fri, 06 Feb 2015 19:12:07 +0000","published_by":1},{"id":282,"title":"Finishing a course on cryptography","slug":"finishing-course-cryptography","markdown":"\nLike I mentioned in my post, [my goals for 2015](http:\/\/leiflarsen.org\/2014\/goals-2015 \"My goals for 2015\"), I was starting this year with a course on Coursera. The course is now reaching its end, and I want to tell you a bit about it. The course is a six-week course on cryptography, hosted on Coursera, and led by Dan Boneh, a professor at Stanford University. Dan Boneh is a professor in computer science and electrical engineering and his main research focus is applied cryptography and computer security.\n\nThe course covers a variety of topics, starting with some history of cryptography. Onwards we have been going through stream ciphers, block ciphers, message integrity, collision resistance, authenticated encryption, basic key exchange and then public key encryption at last. Through the course, we have seen how to calculate the probability an attacker has to decrypt a cipher text on different algorithms, amongst other things. Many statistical calculations is being used, so if you want to take the course, it is wise to freshen up those skills beforehand. At the end, the course material uses number theory. Dan Boneh covers this in a module; however, I would recommend reading up on this before the course, as the module feels a bit rushed.\n\nAlong with the lectures of the course, there were \u201chomework\u201d. These were assignments, which you need to complete if you want a diploma. The questions are related to the modules you have each week, and consist of multiple-choice questions. To get the diploma you need to score an average of 70% on all the assignments, as well as the final exam (which I have to finish this week). You have three weeks to complete each assignment. You can finish them after this deadline, however you will only get 50% of the maximum score.\n\nAlong with the assignments, there are programming assignments as well. These are tasks which you need to complete, in whatever language you want. That could be to decrypt a certain message for instance. I intended to do these, however as the weeks flew by I saw that I did not have the time. I have however written the tasks down, so when I have time I will do them.\n\nNew modules is released every week, and the course is meant to be taken in six weeks (seven if you count the final exam as well). During the first or second week, Dan Boneh mentioned that people with a full time job could spend two weeks on each module, and I could see why. The course description states that you should set aside around 5-8 hours a week for the course, and I would say you would need that, or even more. Doing this with a full time job and other projects on the side as well was tough. If I were to take the course, again I would probably spend two weeks each module. It takes some time to catch the concepts, and it requires work. But I managed to finish, so I\u2019m happy with that!\n\nMoving on from this there is a Cryptography 2, which is the follow up course by Dan Boneh. I will not take that course, as it just do not fit into my schedule. I have however started reading a book called \u201cThe Code Book: The secret history of codes and code-breaking\u201d by Simon Singh. A former colleague recommended me this book, and it is supposed to give a good insight into cryptography. I may write a review of this in a later post, when I have finished the book.\n\nIn these days of privacy and surveillance, what are your experience with cryptography?\n\n\n","html":"<p>Like I mentioned in my post, <a href=\"http:\/\/leiflarsen.org\/2014\/goals-2015\" title=\"My goals for 2015\" target=\"_blank\">my goals for 2015<\/a>, I was starting this year with a course on Coursera. The course is now reaching its end, and I want to tell you a bit about it. The course is a six-week course on cryptography, hosted on Coursera, and led by Dan Boneh, a professor at Stanford University. Dan Boneh is a professor in computer science and electrical engineering and his main research focus is applied cryptography and computer security.<br \/>\n<!--more--><\/p>\n<p>The course covers a variety of topics, starting with some history of cryptography. Onwards we have been going through stream ciphers, block ciphers, message integrity, collision resistance, authenticated encryption, basic key exchange and then public key encryption at last. Through the course, we have seen how to calculate the probability an attacker has to decrypt a cipher text on different algorithms, amongst other things. Many statistical calculations is being used, so if you want to take the course, it is wise to freshen up those skills beforehand. At the end, the course material uses number theory. Dan Boneh covers this in a module; however, I would recommend reading up on this before the course, as the module feels a bit rushed.<\/p>\n<p>Along with the lectures of the course, there were &#8220;homework&#8221;. These were assignments, which you need to complete if you want a diploma. The questions are related to the modules you have each week, and consist of multiple-choice questions. To get the diploma you need to score an average of 70% on all the assignments, as well as the final exam (which I have to finish this week). You have three weeks to complete each assignment. You can finish them after this deadline, however you will only get 50% of the maximum score.<\/p>\n<p>Along with the assignments, there are programming assignments as well. These are tasks which you need to complete, in whatever language you want. That could be to decrypt a certain message for instance. I intended to do these, however as the weeks flew by I saw that I did not have the time. I have however written the tasks down, so when I have time I will do them.<\/p>\n<p>New modules is released every week, and the course is meant to be taken in six weeks (seven if you count the final exam as well). During the first or second week, Dan Boneh mentioned that people with a full time job could spend two weeks on each module, and I could see why. The course description states that you should set aside around 5-8 hours a week for the course, and I would say you would need that, or even more. Doing this with a full time job and other projects on the side as well was tough. If I were to take the course, again I would probably spend two weeks each module. It takes some time to catch the concepts, and it requires work. But I managed to finish, so I&#8217;m happy with that!<\/p>\n<p>Moving on from this there is a Cryptography 2, which is the follow up course by Dan Boneh. I will not take that course, as it just do not fit into my schedule. I have however started reading a book called &#8220;The Code Book: The secret history of codes and code-breaking&#8221; by Simon Singh. A former colleague recommended me this book, and it is supposed to give a good insight into cryptography. I may write a review of this in a later post, when I have finished the book.<\/p>\n<p>In these days of privacy and surveillance, what are your experience with cryptography?<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 16 Feb 2015 22:00:22 +0000","created_by":1,"updated_at":"Tue, 07 Apr 2015 20:46:12 +0000","updated_by":1,"published_at":"Mon, 16 Feb 2015 22:00:22 +0000","published_by":1},{"id":287,"title":"Localization in Xamarin","slug":"localization-in-xamarin","markdown":"\nGoogling for this subject, localization in Xamarin, I really couldn\u2019t find anything that really explained how to do it. Also Xamarin does not have any guides on how to do this, but there are a few posts in the forum in this regard. So this is my contribution to the world; a short write-up on how to translate your app to any language, the easy way.\n\nFirst I need to mention that there are different ways this is done for iOS, Android and Windows Phone. While reading on this topic I noticed that there is a way to do this with Xamarin Forms, however since I haven\u2019t used that yet, this post will focus on localization for iOS in Xamarin.\n\nFor now I assume you already have a project in Xamarin open. The first thing you want to do is to create a new folder in the \u201cResources\u201d folder. This new folder should be named XX.lproj, where XX is the two-letter language code of the language you want to translate (a list of all the language codes can be found [here](http:\/\/www.loc.gov\/standards\/iso639-2\/php\/code_list.php \"Language codes\")). So if you want a Norwegian translation, you would need to create a folder called \u201cnb.lproj\u201d.\n\nNow you need to create the translation file itself. In the newly created folder create a new file called \u201cLocalizable.strings\u201d. I chose to create this file as an empty text file (I tried to create it as a resource file, which failed). This is the file where you will map keys and translations. The format should be the following:\n\n\"1st key\" = \"1st translation\"; \"2nd key\" = \"2nd translation\";\n\nTo actually use this in the code, you can then do the following:\n\n Console.WriteLine(NSBundle.MainBundle.LocalizedString(\"1st key\", \"Any comment if needed\"));\n\nNote that the second parameter in the method above is a comment, I guess so you can know what that translations is for? Anybody with some insights on that?\n\nAnyway, it is also possible to make this a bit easier, by creating an extension method. That could look like this:\n\n public static string translate(this string translate) { return NSBundle.MainBundle.LocalizedString (translate, \"\", \"\"); }\n\nWhich would mean you could translate anything like this:\n\n Console.WriteLine(\"2nd key\".translate());\n\nPretty neat. I guess developers use localization to a various degree, but it took me some time to figure out how to do it properly and hopefully this saves you that time!\n\n\n","html":"<p>Googling for this subject, localization in Xamarin, I really couldn&#8217;t find anything that really explained how to do it. Also Xamarin does not have any guides on how to do this, but there are a few posts in the forum in this regard. So this is my contribution to the world; a short write-up on how to translate your app to any language, the easy way.<br \/>\n<!--more--><\/p>\n<p>First I need to mention that there are different ways this is done for iOS, Android and Windows Phone. While reading on this topic I noticed that there is a way to do this with Xamarin Forms, however since I haven&#8217;t used that yet, this post will focus on localization for iOS in Xamarin.<\/p>\n<p>For now I assume you already have a project in Xamarin open. The first thing you want to do is to create a new folder in the &#8220;Resources&#8221; folder. This new folder should be named XX.lproj, where XX is the two-letter language code of the language you want to translate (a list of all the language codes can be found <a href=\"http:\/\/www.loc.gov\/standards\/iso639-2\/php\/code_list.php\" title=\"Language codes\" target=\"_blank\">here<\/a>). So if you want a Norwegian translation, you would need to create a folder called &#8220;nb.lproj&#8221;.<\/p>\n<p>Now you need to create the translation file itself. In the newly created folder create a new file called &#8220;Localizable.strings&#8221;. I chose to create this file as an empty text file (I tried to create it as a resource file, which failed). This is the file where you will map keys and translations. The format should be the following:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">&quot;1st key&quot; = &quot;1st translation&quot;;\r\n&quot;2nd key&quot; = &quot;2nd translation&quot;;<\/pre>\n<p>To actually use this in the code, you can then do the following:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nConsole.WriteLine(NSBundle.MainBundle.LocalizedString(&quot;1st key&quot;, &quot;Any comment if needed&quot;));\r\n<\/pre>\n<p>Note that the second parameter in the method above is a comment, I guess so you can know what that translations is for? Anybody with some insights on that?<\/p>\n<p>Anyway, it is also possible to make this a bit easier, by creating an extension method. That could look like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\npublic static string translate(this string translate)\r\n{\r\n    return NSBundle.MainBundle.LocalizedString (translate, &quot;&quot;, &quot;&quot;);\r\n}\r\n<\/pre>\n<p>Which would mean you could translate anything like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nConsole.WriteLine(&quot;2nd key&quot;.translate());\r\n<\/pre>\n<p>Pretty neat. I guess developers use localization to a various degree, but it took me some time to figure out how to do it properly and hopefully this saves you that time!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 15 Mar 2015 16:20:22 +0000","created_by":1,"updated_at":"Tue, 07 Apr 2015 20:46:00 +0000","updated_by":1,"published_at":"Sun, 15 Mar 2015 16:20:22 +0000","published_by":1},{"id":299,"title":"Released my first iOS app","slug":"released-my-first-ios-app","markdown":"\nThis Friday I released my first iOS app! It\u2019s called \u201cParker gratis\u201d (\u201cPark for free\u201d), and it is an app for the Norwegian market for now.\n\n<figure class=\"wp-caption alignnone\" id=\"attachment_300\" style=\"width: 169px\">[![Parker gratis main screen](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/03\/4.7-inch-iPhone-6-Screenshot-1-169x300.jpg?fit=169%2C300)](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/03\/4.7-inch-iPhone-6-Screenshot-1.jpg)<figcaption class=\"wp-caption-text\">The entry page of the app Parker gratis<\/figcaption><\/figure>\n\nA friend of me came up with the idea for the app. We were talking one day when he said that it would be nice to have an app where you could locate free parking spots nearby your location. I liked the thought of the idea, and decided to go on to create the app. I did some research on the app store, and found that there were some apps like this, but not for the Norwegian market.\n\nWhen creating the app I decided to keep it fairly simple to use. In my opinion it\u2019s important to let it be very easy for users to add new parking spots, as that will be the only way to collect data and make the use of it grow. When you start the app you get a page with a map on, with your location. You will also see free parking locations nearby, within a given distance. To add a new parking spot at your position, you just have to click the add symbol, and give the location a name and set the type of parking spot, and click submit. Other users may then verify the spot or report it, based on if it actually is free or not.\n\nIf you are using the Norwegian app store and want to try the app, you can find it here:  \n[Parker gratis](https:\/\/itunes.apple.com\/us\/app\/parker-gratis\/id977820708?ls=1&mt=8 \"Parker gratis\")\n\nWhen programming this app I used Xamarin and C#. This is so that I can easily create an Android and Windows Phone version of the app as well. For now it\u2019s just for iOS, but I will start on the Android version soon.\n\nI may eventually also release it for other markets as well, depending on the traction it gets in Norway.\n\nHave you released any apps for any app store? Or are you working on any apps soon to be released? Let me know!\n\n\n","html":"<p>This Friday I released my first iOS app! It&#8217;s called &#8220;Parker gratis&#8221; (&#8220;Park for free&#8221;), and it is an app for the Norwegian market for now. <\/p>\n<p><figure id=\"attachment_300\" style=\"width: 169px\" class=\"wp-caption alignnone\"><a href=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/03\/4.7-inch-iPhone-6-Screenshot-1.jpg\" rel=\"lightbox[299]\"><img src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/03\/4.7-inch-iPhone-6-Screenshot-1-169x300.jpg?fit=169%2C300\" alt=\"Parker gratis main screen\" class=\"size-medium wp-image-300\" data-recalc-dims=\"1\" \/><\/a><figcaption class=\"wp-caption-text\">The entry page of the app Parker gratis<\/figcaption><\/figure><br \/>\n<!--more--><\/p>\n<p>A friend of me came up with the idea for the app. We were talking one day when he said that it would be nice to have an app where you could locate free parking spots nearby your location. I liked the thought of the idea, and decided to go on to create the app. I did some research on the app store, and found that there were some apps like this, but not for the Norwegian market.<\/p>\n<p>When creating the app I decided to keep it fairly simple to use. In my opinion it&#8217;s important to let it be very easy for users to add new parking spots, as that will be the only way to collect data and make the use of it grow. When you start the app you get a page with a map on, with your location. You will also see free parking locations nearby, within a given distance. To add a new parking spot at your position, you just have to click the add symbol, and give the location a name and set the type of parking spot, and click submit. Other users may then verify the spot or report it, based on if it actually is free or not. <\/p>\n<p>If you are using the Norwegian app store and want to try the app, you can find it here:<br \/>\n<a href=\"https:\/\/itunes.apple.com\/us\/app\/parker-gratis\/id977820708?ls=1&#038;mt=8\" title=\"Parker gratis\" target=\"_blank\">Parker gratis<\/a><\/p>\n<p>When programming this app I used Xamarin and C#. This is so that I can easily create an Android and Windows Phone version of the app as well. For now it&#8217;s just for iOS, but I will start on the Android version soon. <\/p>\n<p>I may eventually also release it for other markets as well, depending on the traction it gets in Norway.<\/p>\n<p>Have you released any apps for any app store? Or are you working on any apps soon to be released? Let me know!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/03\/Parkergratis1024.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 29 Mar 2015 11:59:01 +0000","created_by":1,"updated_at":"Tue, 07 Apr 2015 20:44:58 +0000","updated_by":1,"published_at":"Sun, 29 Mar 2015 11:59:01 +0000","published_by":1},{"id":304,"title":"Tools I use","slug":"tools-use","markdown":"\nTools I use to improve my work flow (trello, onenote, etc)\n\n\n","html":"<p>Tools I use to improve my work flow (trello, onenote, etc)<\/p>\n","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 31 Mar 2015 09:53:40 +0000","created_by":1,"updated_at":"Tue, 31 Mar 2015 09:53:40 +0000","updated_by":1,"published_at":"","published_by":1},{"id":323,"title":"A small update","slug":"a-small-update","markdown":"\nIt\u2019s been a while since I\u2019ve written anything here, so I thought I\u2019d just share a short update. I find myself struggling to find the time to blog, while going to work, the gym, programming and so on. On top of that the sun is showing up, and the weather is to good not to be outside.\n\nMy first app in the app store (\u201c[Parker Gratis](http:\/\/leiflarsen.org\/2015\/released-my-first-ios-app \"Released my first iOS app\")\u201c) has now been released a little over a month! I decided not to advertise to much about it, seeing as I had an update that I wanted to get in before the masses started to download it. When the update was approved I published a link to the app on Facebook, and the number of downloads doubled within a day! So far there have been a few entries of parking locations, but I see that the interest increases. I also got a question on when the Android version comes out, so that is my current working project. Who knew the Android emulator could cause so much trouble? More on that later.\n\nI am also working on a tutorial on how to take advantage of the built in MapKit for iOS in Xamarin. Most of the tutorial code is done, but it\u2019s still quite a bit of writing left to do. Working my way through the topics, I see that I may benefit of splitting the tutorial into two parts. Hopefully I will finish it soon, so others can benefit from my experience!\n\nWhile working away I am trying to organize my days, so that I can maximize the usage of the hours we have available, and in that case, does anyone have any advice?\n\n\n","html":"<p>It&#8217;s been a while since I&#8217;ve written anything here, so I thought I&#8217;d just share a short update. I find myself struggling to find the time to blog, while going to work, the gym, programming and so on. On top of that the sun is showing up, and the weather is to good not to be outside.<\/p>\n<p>My first app in the app store (&#8220;<a href=\"http:\/\/leiflarsen.org\/2015\/released-my-first-ios-app\" title=\"Released my first iOS app\">Parker Gratis<\/a>&#8220;) has now been released a little over a month! I decided not to advertise to much about it, seeing as I had an update that I wanted to get in before the masses started to download it. When the update was approved I published a link to the app on Facebook, and the number of downloads doubled within a day! So far there have been a few entries of parking locations, but I see that the interest increases. I also got a question on when the Android version comes out, so that is my current working project. Who knew the Android emulator could cause so much trouble? More on that later.<\/p>\n<p>I am also working on a tutorial on how to take advantage of the built in MapKit for iOS in Xamarin. Most of the tutorial code is done, but it&#8217;s still quite a bit of writing left to do. Working my way through the topics, I see that I may benefit of splitting the tutorial into two parts. Hopefully I will finish it soon, so others can benefit from my experience!<\/p>\n<p>While working away I am trying to organize my days, so that I can maximize the usage of the hours we have available, and in that case, does anyone have any advice?<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 20 Apr 2015 18:47:23 +0000","created_by":1,"updated_at":"Mon, 20 Apr 2015 18:47:23 +0000","updated_by":1,"published_at":"Mon, 20 Apr 2015 18:47:23 +0000","published_by":1},{"id":284,"title":"Xamarin tutorial - iOS MapKit Part 1","slug":"xamarin-tutorial-ios-mapkit-part-1","markdown":"\nLately I have been working a great amount with iOS MapKit in Xamarin, to finish my first iOS app. Going through the work I found several good resources out there on how to do this, however; common for all of them is that they have been written for earlier versions of iOS than iOS 8. This has caused several issues to pop up during development, but through some googling I have been able to make it work. Because of this I decided to write a short tutorial describing how you could go on to use iOS MapKit for an app, created with Xamarin.\n\nTo keep this tutorial readable I have decided to split into several posts, where this is the first post. In this part I will walk you through inital setup and creation of the map. The next part will go into details in regards to annotations and the last post of this series I will go into some basic search functionality.  \n  \n**Note!** The way I am using the tools available may or may not be the best, and I am encouraging you to provide feedback if you see any possible improvements.\n\nA lot of tutorials just dive straight into code, however I want to show off how the final output is, so here you can see how the final app will look:  \n<figure class=\"wp-caption alignnone\" id=\"attachment_331\" style=\"width: 169px\">[![iOS Simulator with the finished app result.](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/04\/iOS-Simulator-Screen-Shot-26.-apr.-2015-19.32.06-169x300.png?fit=169%2C300)](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/04\/iOS-Simulator-Screen-Shot-26.-apr.-2015-19.32.06.png)<figcaption class=\"wp-caption-text\">iOS Simulator with the finished app result.<\/figcaption><\/figure>  \n As you may see this is a simple app, with a map, your current location and some clickable annotations in the area around you.\n\nAlso I have made all the code available on [GitHub](https:\/\/github.com\/leif-larsen\/Xamarin-iOS-Map-Tutorial \"iOS MapKit Tutorial\").\n\nThe first thing you want to do is to start a new Xamarin iOS project. For the purpose of this tutorial I have created an empty project, to start without any unnecessary files. The project structure should look something like this:  \n<figure class=\"wp-caption alignnone\" id=\"attachment_296\" style=\"width: 241px\">[![Xamarin iOS project structure](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/03\/Skjermbilde-2015-03-21-kl.-17.18.47-241x300.png?fit=241%2C300)](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/03\/Skjermbilde-2015-03-21-kl.-17.18.47.png)<figcaption class=\"wp-caption-text\">Project structure iOS empty project<\/figcaption><\/figure>\n\nOpen the Appdelegate.cs file. This is where the window is instantiated, when the app is ready, and where you set up the initial view and navigation controller. Appdelegate.cs is not to big, and from the example code it should be fairly easy to see what\u2019s going on. Basically we create a window, a navigation controller and a view controller (I will come back to this one in a bit). The one thing I do want to point out is the following lines:\n\n \/\/ Create a CLLocationManager object _locationManager = new CLLocationManager (); \/\/ Check the iOS version if (UIDevice.CurrentDevice.CheckSystemVersion (8,0)) _locationManager.RequestWhenInUseAuthorization ();\n\nThe \u201cRequestWhenInUseAuthorization\u201d is a new function in iOS 8.0 and above, which you need to execute if you want to use the phones location. It prompts the user for permission to use the location services of the phone. If you won\u2019t be releasing the app for anything below iOS 8.0, then you don\u2019t need the if check, however it is important to have it there if you intend to release the app for earlier versions of iOS. Another thing which goes along with this is in the info.plist file. With that file open you should go to the \u201cSource\u201d tab, and add a new line (I am now assuming you\u2019re using Xamarin Studio). \u201cNSLocationWhenInUseUsageDescription\u201d should be the name of the line and it should be a string. In the value field you can enter a text which will show up in the prompt for permission to use the location services. With this in place we can move on to the view controller.\n\nLet\u2019s create a class called **MapViewController.** In the example code I used the **DialogViewController** template, but you can use other templates as well. If you look at the example project, you see that I have some properties declared at the start of the file. I need to point out one of them, this one:\n\nprotected string annotationIdentifier = \"AnnotationIdentifier\";\n\nThat string is needed for the customization of annotations, which I will get back to in the next part.\n\nThe constructor is quite small, it just calls a few methods to initialize the map, generate a list of locations for our annotations and adding the annotations. Lets dive into the initialization of the map. The code looks like this:\n\n \/\/ Initialize map and user location private void initializeMap() { \/\/ Create a new MKMapView and add it to the view _mapView = new MKMapView (View.Bounds); _mapView.AutoresizingMask = UIViewAutoresizing.FlexibleDimensions; View.AddSubview (_mapView); \/\/ Show the users location _mapView.ShowsUserLocation = true; \/\/ Add an event handler for when the user moves and the location updates, if needed. \/\/ This will cause the map to jump to users location everytime it moves, even if the map is panned somewhere else \/*_mapView.DidUpdateUserLocation += (sender, e) => { if(_mapView.UserLocation != null) { CLLocationCoordinate2D coords = _mapView.UserLocation.Coordinate; MKCoordinateSpan span = new MKCoordinateSpan(kmToLatitudeDegrees(5), kmToLongitudeDegrees(5, coords.Latitude)); _mapView.Region = new MKCoordinateRegion(coords, span); } };*\/ \/\/ If the user denies location permission, or the devices GPS\/location is unavailable if (!_mapView.UserLocationVisible) { CLLocationCoordinate2D coords = new CLLocationCoordinate2D (37.4057900, -122.0781260); \/\/ Set default coordinates to someplace close to Google HQ MKCoordinateSpan span = new MKCoordinateSpan(kmToLatitudeDegrees(5), kmToLongitudeDegrees(5, coords.Latitude)); _mapView.Region = new MKCoordinateRegion (coords, span); } \/\/ Creates and add a button to center on current location var imageCurrentLocation = UIImage.FromBundle (\"images\/currentlocation.png\"); imageCurrentLocation.ImageWithRenderingMode (UIImageRenderingMode.Automatic); _btnCurrentLocation = new UIButton () { TintColor = UIColor.Black }; _btnCurrentLocation.SetImage (imageCurrentLocation, UIControlState.Normal); _btnCurrentLocation.Frame = new RectangleF ((float)View.Frame.Width - 60, (float)View.Frame.Height - 120, (float)imageCurrentLocation.Size.Width, (float)imageCurrentLocation.Size.Height); _btnCurrentLocation.TouchUpInside += (sender, e) => { _mapView.SetCenterCoordinate(_mapView.UserLocation.Location.Coordinate, true); }; View.AddSubview (_btnCurrentLocation); \/\/ Add delegate for annotations to be able to customize the annotation _mapView.GetViewForAnnotation = GetViewForAnnotation; } \/\/ end initializeMap\n\nLets see whats going on here. First we create the map object and place it in the view. In this example I set the size of the map to be the size of the view, so basically full screen. Next we say that we want to show the location of the user. Along with this we have some fallback code as well. In case the user denies the application to view the location, or the device doesn\u2019t have GPS available, we need to set some coordinates as default. We also specify a region to show, which is calculated around the default coordinates.\n\nWe create a button for \u201cmy location\u201d functionality, so that the user can center the map back to his position if he have moved the map somewhere else. In this example I use a custom button and add an image to the button. The button is them placed in the bottom right corner of the view. We will need to tie the button to an event handler, which will center the map to the location of the user. At the end we add a delegate for annotations, so that we\u2019re able to create custom annotations.\n\nThat concludes this part of the tutorial. Hopefully you learnt something from this post, and I hope to see you return for the next part!\n\n\n","html":"<p>Lately I have been working a great amount with iOS MapKit in Xamarin, to finish my first iOS app. Going through the work I found several good resources out there on how to do this, however; common for all of them is that they have been written for earlier versions of iOS than iOS 8. This has caused several issues to pop up during development, but through some googling I have been able to make it work. Because of this I decided to write a short tutorial describing how you could go on to use iOS MapKit for an app, created with Xamarin. <\/p>\n<p>To keep this tutorial readable I have decided to split into several posts, where this is the first post. In this part I will walk you through inital setup and creation of the map. The next part will go into details in regards to annotations and the last post of this series I will go into some basic search functionality.<br \/>\n<!--more--><br \/>\n<strong>Note!<\/strong> The way I am using the tools available may or may not be the best, and I am encouraging you to provide feedback if you see any possible improvements.<\/p>\n<p>A lot of tutorials just dive straight into code, however I want to show off how the final output is, so here you can see how the final app will look:<br \/>\n<figure id=\"attachment_331\" style=\"width: 169px\" class=\"wp-caption alignnone\"><a href=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/04\/iOS-Simulator-Screen-Shot-26.-apr.-2015-19.32.06.png\" rel=\"lightbox[284]\"><img src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/04\/iOS-Simulator-Screen-Shot-26.-apr.-2015-19.32.06-169x300.png?fit=169%2C300\" alt=\"iOS Simulator with the finished app result.\" class=\"size-medium wp-image-331\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/04\/iOS-Simulator-Screen-Shot-26.-apr.-2015-19.32.06.png?resize=169%2C300 169w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/04\/iOS-Simulator-Screen-Shot-26.-apr.-2015-19.32.06.png?resize=577%2C1024 577w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/04\/iOS-Simulator-Screen-Shot-26.-apr.-2015-19.32.06.png?w=640 640w\" sizes=\"(max-width: 169px) 100vw, 169px\" data-recalc-dims=\"1\" \/><\/a><figcaption class=\"wp-caption-text\">iOS Simulator with the finished app result.<\/figcaption><\/figure><br \/>\nAs you may see this is a simple app, with a map, your current location and some clickable annotations in the area around you.<\/p>\n<p>Also I have made all the code available on <a href=\"https:\/\/github.com\/leif-larsen\/Xamarin-iOS-Map-Tutorial\" title=\"iOS MapKit Tutorial\" target=\"_blank\">GitHub<\/a>.<\/p>\n<p>The first thing you want to do is to start a new Xamarin iOS project. For the purpose of this tutorial I have created an empty project, to start without any unnecessary files. The project structure should look something like this:<br \/>\n<figure id=\"attachment_296\" style=\"width: 241px\" class=\"wp-caption alignnone\"><a href=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/03\/Skjermbilde-2015-03-21-kl.-17.18.47.png\" rel=\"lightbox[284]\"><img src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/03\/Skjermbilde-2015-03-21-kl.-17.18.47-241x300.png?fit=241%2C300\" alt=\"Xamarin iOS project structure\" class=\"size-medium wp-image-296\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/03\/Skjermbilde-2015-03-21-kl.-17.18.47.png?resize=241%2C300 241w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/03\/Skjermbilde-2015-03-21-kl.-17.18.47.png?w=301 301w\" sizes=\"(max-width: 241px) 100vw, 241px\" data-recalc-dims=\"1\" \/><\/a><figcaption class=\"wp-caption-text\">Project structure iOS empty project<\/figcaption><\/figure><\/p>\n<p>Open the Appdelegate.cs file. This is where the window is instantiated, when the app is ready, and where you set up the initial view and navigation controller. Appdelegate.cs is not to big, and from the example code it should be fairly easy to see what&#8217;s going on. Basically we create a window, a navigation controller and a view controller (I will come back to this one in a bit). The one thing I do want to point out is the following lines:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n\/\/ Create a CLLocationManager object\r\n_locationManager = new CLLocationManager ();\r\n\r\n\/\/ Check the iOS version\r\nif (UIDevice.CurrentDevice.CheckSystemVersion (8,0))\r\n   _locationManager.RequestWhenInUseAuthorization ();\r\n<\/pre>\n<p>The &#8220;RequestWhenInUseAuthorization&#8221; is a new function in iOS 8.0 and above, which you need to execute if you want to use the phones location. It prompts the user for permission to use the location services of the phone. If you won&#8217;t be releasing the app for anything below iOS 8.0, then you don&#8217;t need the if check, however it is important to have it there if you intend to release the app for earlier versions of iOS. Another thing which goes along with this is in the info.plist file. With that file open you should go to the &#8220;Source&#8221; tab, and add a new line (I am now assuming you&#8217;re using Xamarin Studio). &#8220;NSLocationWhenInUseUsageDescription&#8221; should be the name of the line and it should be a string. In the value field you can enter a text which will show up in the prompt for permission to use the location services. With this in place we can move on to the view controller.<\/p>\n<p>Let&#8217;s create a class called <strong>MapViewController.<\/strong> In the example code I used the <strong>DialogViewController<\/strong> template, but you can use other templates as well. If you look at the example project, you see that I have some properties declared at the start of the file. I need to point out one of them, this one:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">protected string annotationIdentifier = &quot;AnnotationIdentifier&quot;;<\/pre>\n<p>That string is needed for the customization of annotations, which I will get back to in the next part. <\/p>\n<p>The constructor is quite small, it just calls a few methods to initialize the map, generate a list of locations for our annotations and adding the annotations. Lets dive into the initialization of the map. The code looks like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n\/\/ Initialize map and user location\r\nprivate void initializeMap() \r\n{\r\n   \/\/ Create a new MKMapView and add it to the view\r\n   _mapView = new MKMapView (View.Bounds);\r\n   _mapView.AutoresizingMask = UIViewAutoresizing.FlexibleDimensions;\r\n   View.AddSubview (_mapView);\r\n\r\n   \/\/ Show the users location\r\n   _mapView.ShowsUserLocation = true;\r\n\r\n   \/\/ Add an event handler for when the user moves and the location updates, if needed. \r\n   \/\/ This will cause the map to jump to users location everytime it moves, even if the map is panned somewhere else\r\n   \/*_mapView.DidUpdateUserLocation += (sender, e) =&gt; {\r\n      if(_mapView.UserLocation != null) {\r\n         CLLocationCoordinate2D coords = _mapView.UserLocation.Coordinate;\r\n         MKCoordinateSpan span = new MKCoordinateSpan(kmToLatitudeDegrees(5), kmToLongitudeDegrees(5, coords.Latitude));\r\n         _mapView.Region = new MKCoordinateRegion(coords, span);\r\n      }\r\n   };*\/\r\n\r\n   \/\/ If the user denies location permission, or the devices GPS\/location is unavailable\r\n   if (!_mapView.UserLocationVisible) {\r\n      CLLocationCoordinate2D coords = new CLLocationCoordinate2D (37.4057900, -122.0781260); \/\/ Set default coordinates to someplace close to Google HQ\r\n      MKCoordinateSpan span = new MKCoordinateSpan(kmToLatitudeDegrees(5), kmToLongitudeDegrees(5, coords.Latitude));\r\n      _mapView.Region = new MKCoordinateRegion (coords, span);\r\n   }\r\n\r\n   \/\/ Creates and add a button to center on current location\r\n   var imageCurrentLocation = UIImage.FromBundle (&quot;images\/currentlocation.png&quot;);\r\n   imageCurrentLocation.ImageWithRenderingMode (UIImageRenderingMode.Automatic);\r\n\r\n   _btnCurrentLocation = new UIButton () { TintColor = UIColor.Black };\r\n   _btnCurrentLocation.SetImage (imageCurrentLocation, UIControlState.Normal);\r\n   _btnCurrentLocation.Frame = new RectangleF ((float)View.Frame.Width - 60, (float)View.Frame.Height - 120, (float)imageCurrentLocation.Size.Width, (float)imageCurrentLocation.Size.Height);\r\n\r\n   _btnCurrentLocation.TouchUpInside += (sender, e) =&gt; {\r\n      _mapView.SetCenterCoordinate(_mapView.UserLocation.Location.Coordinate, true);\r\n   };\r\n   View.AddSubview (_btnCurrentLocation);\r\n\r\n   \/\/ Add delegate for annotations to be able to customize the annotation\r\n   _mapView.GetViewForAnnotation = GetViewForAnnotation;\r\n} \/\/ end initializeMap\r\n<\/pre>\n<p>Lets see whats going on here. First we create the map object and place it in the view. In this example I set the size of the map to be the size of the view, so basically full screen. Next we say that we want to show the location of the user. Along with this we have some fallback code as well. In case the user denies the application to view the location, or the device doesn&#8217;t have GPS available, we need to set some coordinates as default. We also specify a region to show, which is calculated around the default coordinates. <\/p>\n<p>We create a button for &#8220;my location&#8221; functionality, so that the user can center the map back to his position if he have moved the map somewhere else. In this example I use a custom button and add an image to the button. The button is them placed in the bottom right corner of the view. We will need to tie the button to an event handler, which will center the map to the location of the user. At the end we add a delegate for annotations, so that we&#8217;re able to create custom annotations.<\/p>\n<p>That concludes this part of the tutorial. Hopefully you learnt something from this post, and I hope to see you return for the next part!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 27 Apr 2015 19:50:49 +0000","created_by":1,"updated_at":"Sun, 26 Apr 2015 18:37:37 +0000","updated_by":1,"published_at":"Mon, 27 Apr 2015 19:50:49 +0000","published_by":1},{"id":327,"title":"Xamarin tutorial &ndash; iOS MapKit Part 2","slug":"xamarin-tutorial-ios-mapkit-part-2","markdown":"\nThis is the second post, in the three part tutorial, on using the iOS MapKit in a Xamarin iOS project. In the [previous post](http:\/\/leiflarsen.org\/2015\/xamarin-tutorial-ios-mapkit-part-1) we looked at the initial setup of the project, as well as basic generation of a map view. In this part we will go through the parts needed for annotations, and we\u2019re going to look at how to create customized annotations.\n\nThe source code is still available at [GitHub](https:\/\/github.com\/leif-larsen\/Xamarin-iOS-Map-Tutorial).\n\nLet\u2019s dive right in.\n\nWe ended the last post by creating a delegate to be able to create custom annotations. The next thing we need to do is create a class for the data we want our annotation items to have. I have called this class **DataModel**. This class is fairly simple, and it just have some properties that we need (title, latitude and longitude). Furhter on we need a class for our custom annotations. Lets call this **AnnotationModel**, and let it inherit from the **MKAnnotation** class. This class have three properties that we need to override, **Title**, **Subtitle** and **Coordinate**. New in the later releases of Xamarin is that the **Coordinate** property only have a getter assosicated with it, and normally you need to use the **SetCoordinate** method to set it. My experience is however that this doesn\u2019t work (I may have gone about it the wrong way though), so a little workaround is in place. Create another property called **Coords** (same type as **Coordinate**, **CLLocationCoordinate2D**). This is the property we set in the constructor, and when someone calls the \u201cCoordinate\u201d property, we return the \u201cCoords\u201d property.  \nThis is how it looks:\n\npublic class AnnotationModel : MKAnnotation { private string _title; private string _subtitle; public AnnotationModel (CLLocationCoordinate2D coordinate, string title, string subtitle = \"\") { this.Coords = coordinate; _title = title; _subtitle = subtitle; } public override string Title { get { return _title; } } public override string Subtitle { get { return _subtitle; } } public CLLocationCoordinate2D Coords; public override CLLocationCoordinate2D Coordinate { get { return this.Coords; } } }\n\nWith these two classes in places it\u2019s time to create a list with some example data and add annotations to the map. This is how it is done:\n\n\/\/ Create a list for annotations private List<datamodel> createAnnotationLocations() { List<datamodel> dataList = new List<datamodel> () { new DataModel (\"Google HQ\", 37.4224760, -122.0842500), new DataModel (\"Taco Bell\", 37.4082550, -122.0776200), new DataModel (\"Google MTV\", 37.3974740, -122.0848690) }; return dataList; } \/\/ end createAnnotationLocations \/\/ Add all annotations to map private void addAnnotations() { foreach (var annotationLocation in _dataList) { var annotation = new AnnotationModel (new CLLocationCoordinate2D (annotationLocation.Latitude, annotationLocation.Longitude), annotationLocation.Title); _mapView.AddAnnotation (annotation); } } \/\/ end addAnnotations\n\nBoth methods are being called from the constructor in our view controller. In the first method we create a list of type **DataModel**, which contains a few entries which will be used for our annotations. The second method is the one that actually adds the annotations to the map. Basically we just loop through the datalist and create a new Annotation object for each item. This will then be added to the map.\n\nThe big secret to customizing your annotations lays in the following method:\n\n\/\/ Customize the annotation view MKAnnotationView GetViewForAnnotation(MKMapView mapView, IMKAnnotation annotation) { MKAnnotationView annotationView = mapView.DequeueReusableAnnotation (annotationIdentifier); \/\/ Set current location and location of annotation CLLocationCoordinate2D currentLocation = mapView.UserLocation.Coordinate; CLLocationCoordinate2D annotationLocation = annotation.Coordinate; \/\/ We don't want a special annotation for the user location if (currentLocation.Latitude == annotationLocation.Latitude && currentLocation.Longitude == annotationLocation.Longitude) return null; if (annotationView == null) annotationView = new MKPinAnnotationView (annotation, annotationIdentifier); else annotationView.Annotation = annotation; annotationView.CanShowCallout = true; (annotationView as MKPinAnnotationView).AnimatesDrop = false; \/\/ Set to true if you want to animate the pin dropping (annotationView as MKPinAnnotationView).PinColor = MKPinAnnotationColor.Red; annotationView.SetSelected (true, false); _annotationDetailButton = UIButton.FromType (UIButtonType.DetailDisclosure); _annotationDetailButton.TouchUpInside += (sender, e) => { new UIAlertView(\"Yay!\", \"You successfully clicked the detail button!\", null, \"OK\", null).Show(); }; annotationView.RightCalloutAccessoryView = _annotationDetailButton; \/\/ Annotation icon may be specified like this, in case you want it. \/\/ annotationView.LeftCalloutAccessoryView = new UIImageView(UIImage.FromBundle(\"example.png\")); return annotationView; } \/\/ end GetViewForAnnotation\n\nNow, if you remember from part 1 of this tutorial, we added a delegate to our **MapView** object. The method above is the method assigned to that delegate. Quite a bit is happening in this method, so lets break it down. The first line we execute is to allow annotation views that are no longer on the screen to be reused, by the annotations on the screen. This is done for perfomance reasons. As you can see we\u2019re now using the annotation identifier, we defined in part one, to identify which annotation views we should reuse. You can see a few lines down, that when we create a new annotation view, we send the annotation identifier as a second parameter, thus giving it an identity.\n\nMoving on we assign the current location of the user, and the location of the given annotation. This is done so we can check whether or not the annotation is the user or not. We usually want to keep the location of the user as a blue dot, and not customize it. Moving on we create an annotation view if it doesn\u2019t already exist, and then we set some properties, which is the customization we\u2019re after. In this example you can see that we say the annotations can show call outs, it should not animate when being placed and the color should be red. We also add a UIButton, which is the button on the right side of the call out. Here we just show an alert when you click it, but you could go on to open a new window, navigate to that position etc. I have also included an example of how you could add a customized icon to the call out but I left it in comments for now.\n\nAnd that is basically it. With all this in place you should be the stage where you have a map, and some customized annotations in place. When you select one of them a call out will show, and if you click the button on it, you will get an alert.\n\nThe next, and final, post in this series will focus on search functionality, to see how we can search for a certain place and move the map to that position.\n\n\n","html":"<p>This is the second post, in the three part tutorial, on using the iOS MapKit in a Xamarin iOS project. In the <a href=\"http:\/\/leiflarsen.org\/2015\/xamarin-tutorial-ios-mapkit-part-1\" target=\"_blank\">previous post<\/a> we looked at the initial setup of the project, as well as basic generation of a map view. In this part we will go through the parts needed for annotations, and we&#8217;re going to look at how to create customized annotations.<\/p>\n<p>The source code is still available at <a href=\"https:\/\/github.com\/leif-larsen\/Xamarin-iOS-Map-Tutorial\" target=\"_blank\">GitHub<\/a>.<\/p>\n<p><!--more-->Let&#8217;s dive right in.\n<p>We ended the last post by creating a delegate to be able to create custom annotations. The next thing we need to do is create a class for the data we want our annotation items to have. I have called this class <strong>DataModel<\/strong>. This class is fairly simple, and it just have some properties that we need (title, latitude and longitude). Furhter on we need a class for our custom annotations. Lets call this <strong>AnnotationModel<\/strong>, and let it inherit from the <strong>MKAnnotation<\/strong> class. This class have three properties that we need to override, <strong>Title<\/strong>, <strong>Subtitle<\/strong> and <strong>Coordinate<\/strong>. New in the later releases of Xamarin is that the <strong>Coordinate<\/strong> property only have a getter assosicated with it, and normally you need to use the <strong>SetCoordinate<\/strong> method to set it. My experience is however that this doesn&#8217;t work (I may have gone about it the wrong way though), so a little workaround is in place. Create another property called <strong>Coords<\/strong> (same type as <strong>Coordinate<\/strong>, <strong>CLLocationCoordinate2D<\/strong>). This is the property we set in the constructor, and when someone calls the &#8220;Coordinate&#8221; property, we return the &#8220;Coords&#8221; property.<br \/>This is how it looks:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">public class AnnotationModel : MKAnnotation\r\n{\r\n\tprivate string _title;\r\n\tprivate string _subtitle;\r\n\r\n\tpublic AnnotationModel (CLLocationCoordinate2D coordinate, string title, string subtitle = &quot;&quot;)\r\n\t{\r\n\t\tthis.Coords = coordinate;\r\n\t\t_title = title;\r\n\t\t_subtitle = subtitle;\r\n\t}\r\n\r\n\tpublic override string Title { get { return _title; } }\r\n\tpublic override string Subtitle { get { return _subtitle; } }\r\n\r\n\tpublic CLLocationCoordinate2D Coords;\r\n\tpublic override CLLocationCoordinate2D Coordinate { get { return this.Coords; } }\r\n}\r\n<\/pre>\n<p>With these two classes in places it&#8217;s time to create a list with some example data and add annotations to the map. This is how it is done:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\/\/ Create a list for annotations\r\nprivate List&lt;datamodel&gt; createAnnotationLocations()\r\n{\r\n\tList&lt;datamodel&gt; dataList = new List&lt;datamodel&gt; () {\r\n\t\tnew DataModel (&quot;Google HQ&quot;, 37.4224760, -122.0842500),\r\n\t\tnew DataModel (&quot;Taco Bell&quot;, 37.4082550, -122.0776200),\r\n\t\tnew DataModel (&quot;Google MTV&quot;, 37.3974740, -122.0848690)\r\n\t};\r\n\r\n\treturn dataList;\r\n} \/\/ end createAnnotationLocations\r\n\r\n\/\/ Add all annotations to map\r\nprivate void addAnnotations()\r\n{\r\n\tforeach (var annotationLocation in _dataList) {\r\n\t\tvar annotation = new AnnotationModel (new CLLocationCoordinate2D (annotationLocation.Latitude, annotationLocation.Longitude), annotationLocation.Title);\r\n\t\t_mapView.AddAnnotation (annotation);\r\n\t}\r\n} \/\/ end addAnnotations\r\n<\/pre>\n<p>Both methods are being called from the constructor in our view controller. In the first method we create a list of type <strong>DataModel<\/strong>, which contains a few entries which will be used for our annotations. The second method is the one that actually adds the annotations to the map. Basically we just loop through the datalist and create a new Annotation object for each item. This will then be added to the map.<\/p>\n<p>The big secret to customizing your annotations lays in the following method:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\/\/ Customize the annotation view\r\nMKAnnotationView GetViewForAnnotation(MKMapView mapView, IMKAnnotation annotation)\r\n{\r\n\tMKAnnotationView annotationView = mapView.DequeueReusableAnnotation (annotationIdentifier);\r\n\r\n\t\/\/ Set current location and location of annotation\r\n\tCLLocationCoordinate2D currentLocation = mapView.UserLocation.Coordinate;\r\n\tCLLocationCoordinate2D annotationLocation = annotation.Coordinate;\r\n\r\n\t\/\/ We don&#039;t want a special annotation for the user location\r\n\tif (currentLocation.Latitude == annotationLocation.Latitude &amp;amp;&amp;amp; currentLocation.Longitude == annotationLocation.Longitude)\r\n\t\treturn null;\r\n\r\n\tif (annotationView == null)\r\n\t\tannotationView = new MKPinAnnotationView (annotation, annotationIdentifier);\r\n\telse\r\n\t\tannotationView.Annotation = annotation;\r\n\r\n\tannotationView.CanShowCallout = true;\r\n\t(annotationView as MKPinAnnotationView).AnimatesDrop = false; \/\/ Set to true if you want to animate the pin dropping\r\n\t(annotationView as MKPinAnnotationView).PinColor = MKPinAnnotationColor.Red;\r\n\tannotationView.SetSelected (true, false);\r\n\r\n\t_annotationDetailButton = UIButton.FromType (UIButtonType.DetailDisclosure);\r\n\t_annotationDetailButton.TouchUpInside += (sender, e) =&amp;gt; {\r\n\t\tnew UIAlertView(&quot;Yay!&quot;, &quot;You successfully clicked the detail button!&quot;, null, &quot;OK&quot;, null).Show();\r\n\t};\r\n\r\n\tannotationView.RightCalloutAccessoryView = _annotationDetailButton;\r\n\r\n\t\/\/ Annotation icon may be specified like this, in case you want it.\r\n\t\/\/ annotationView.LeftCalloutAccessoryView = new UIImageView(UIImage.FromBundle(&quot;example.png&quot;));\r\n\r\n\treturn annotationView;\r\n} \/\/ end GetViewForAnnotation\r\n<\/pre>\n<p>Now, if you remember from part 1 of this tutorial, we added a delegate to our <strong>MapView<\/strong> object. The method above is the method assigned to that delegate. Quite a bit is happening in this method, so lets break it down. The first line we execute is to allow annotation views that are no longer on the screen to be reused, by the annotations on the screen. This is done for perfomance reasons. As you can see we&#8217;re now using the annotation identifier, we defined in part one, to identify which annotation views we should reuse. You can see a few lines down, that when we create a new annotation view, we send the annotation identifier as a second parameter, thus giving it an identity.<\/p>\n<p>Moving on we assign the current location of the user, and the location of the given annotation. This is done so we can check whether or not the annotation is the user or not. We usually want to keep the location of the user as a blue dot, and not customize it. Moving on we create an annotation view if it doesn&#8217;t already exist, and then we set some properties, which is the customization we&#8217;re after. In this example you can see that we say the annotations can show call outs, it should not animate when being placed and the color should be red. We also add a UIButton, which is the button on the right side of the call out. Here we just show an alert when you click it, but you could go on to open a new window, navigate to that position etc. I have also included an example of how you could add a customized icon to the call out but I left it in comments for now.<\/p>\n<p>And that is basically it. With all this in place you should be the stage where you have a map, and some customized annotations in place. When you select one of them a call out will show, and if you click the button on it, you will get an alert.<\/p>\n<p>The next, and final, post in this series will focus on search functionality, to see how we can search for a certain place and move the map to that position.<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/04\/iOS-Simulator-Screen-Shot-26.-apr.-2015-19.32.06.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Wed, 06 May 2015 20:30:20 +0000","created_by":1,"updated_at":"Wed, 06 May 2015 07:04:42 +0000","updated_by":1,"published_at":"Wed, 06 May 2015 20:30:20 +0000","published_by":1},{"id":318,"title":"Xamarin Android Player","slug":"xamarin-android-player","markdown":"\nThe Xamarin Android Player is an Android emulator, created by Xamarin. Currently it\u2019s in early stages, and it\u2019s a preview version that is available for those with a Xamarin Android trials or subscription.\n\n[![Xamarin Android Player](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/05\/Xamarin-Android-Player_thumb.png?resize=652%2C564 \"Xamarin Android Player\")](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/05\/Xamarin-Android-Player.png)\n\nXamarin writes the following on the player:\n\n> Xamarin Android Player has deep integration with Visual Studio and Xamarin Studio and a native user interface on both Mac & Windows. Running Android on an x86 virtual machine using hardware accelerated virtualization and OpenGL, Xamarin Android Player is significantly faster than the stock Android Emulator.\n\nI came across this tool when I started to work with a map application for Android. When using Xamarin Android components to use Google Maps (Google Play Services), I had issues when trying to test the app using the original Android emulator. Turns out I where missing Google Play Services, which needed to be installed. I didn\u2019t find any good ways of doing it on the Android emulator. With Xamarin Android Emulator, however, you just have to download the right packages, and use drag and drop, from the host machine to the player, to install it. Very nice!\n\nXamarin Android Player does not include many features, yet, seeing as it is only a preview. As of today, they have the opportunity to simulate the GPS and battery, and soon they will add the option to use your web camera as the front and back camera. In addition they don\u2019t have a ton of different devices to choose between. They do have a few different API levels and screen sizes available, where I do believe they just added a device with Android 5.0. For my use, it has been enough, as I\u2019ve had the features and API levels I needed, and also it integrates with Xamarin Studio, so there is no need for any additional setup.\n\nIf you want to try Xamarin Android Player, you can find the download links at the official page [Xamarin](https:\/\/xamarin.com\/android-player \"Xamarin Android Player\") site.\n\n\n","html":"<p>The Xamarin Android Player is an Android emulator, created by Xamarin. Currently it\u2019s in early stages, and it\u2019s a preview version that is available for those with a Xamarin Android trials or subscription.<\/p>\n<p><a href=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/05\/Xamarin-Android-Player.png\" rel=\"lightbox[318]\"><img title=\"Xamarin Android Player\" style=\"border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; border-left: 0px; display: inline; padding-right: 0px\" border=\"0\" alt=\"Xamarin Android Player\" src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/05\/Xamarin-Android-Player_thumb.png?resize=652%2C564\"  data-recalc-dims=\"1\"><\/a><\/p>\n<p>Xamarin writes the following on the player:<\/p>\n<blockquote><p>Xamarin Android Player has deep integration with Visual Studio and Xamarin Studio and a native user interface on both Mac &amp; Windows. Running Android on an x86 virtual machine using hardware accelerated virtualization and OpenGL, Xamarin Android Player is significantly faster than the stock Android Emulator.<\/p>\n<\/blockquote>\n<p>I came across this tool when I started to work with a map application for Android. When using Xamarin Android components to use Google Maps (Google Play Services), I had issues when trying to test the app using the original Android emulator. Turns out I where missing Google Play Services, which needed to be installed. I didn\u2019t find any good ways of doing it on the Android emulator. With Xamarin Android Emulator, however, you just have to download the right packages, and use drag and drop, from the host machine to the player, to install it. Very nice!<\/p>\n<p>Xamarin Android Player does not include many features, yet, seeing as it is only a preview. As of today, they have the opportunity to simulate the GPS and battery, and soon they will add the option to use your web camera as the front and back camera. In addition they don\u2019t have a ton of different devices to choose between. They do have a few different API levels and screen sizes available, where I do believe they just added a device with Android 5.0. For my use, it has been enough, as I\u2019ve had the features and API levels I needed, and also it integrates with Xamarin Studio, so there is no need for any additional setup.<\/p>\n<p>If you want to try Xamarin Android Player, you can find the download links at the official page <a title=\"Xamarin Android Player\" href=\"https:\/\/xamarin.com\/android-player\" target=\"_blank\">Xamarin<\/a> site.<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/05\/Xamarin-Android-Player_thumb.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 10 May 2015 17:30:07 +0000","created_by":1,"updated_at":"Thu, 07 May 2015 10:07:48 +0000","updated_by":1,"published_at":"Sun, 10 May 2015 17:30:07 +0000","published_by":1},{"id":362,"title":"Microsoft Surface 3 Review","slug":"microsoft-surface-3-review","markdown":"\nThis is the end of my third week with my brand new Surface 3, so it\u2019s time to give a short review of it. Before I get into the review itself, I think its wise to describe what I use the Surface for, so the terms of my review is clear.\n\nThe primary need for me is to have a tablet, which I can use to read and watch movies while traveling, as well as do some blogging and the occasional work at home. My SO have had an iPad for a long time, and naturally I tried it, just to see that it did not fit my needs. When the first generation Surface reached the market I were quick to buy one, with Windows 8 RT. This was OK for reading and watching movies. However it was not as good as I had hoped, a bit slow at times, and also I did not like the fact that you couldn\u2019t install third party applications (outside the Windows Store). With that information lets move on to my review of the Surface 3.\n\nOpening the package it arrived in revealed what seemed to be a solid tablet. With the type cover attached it weighs in at 887g, which is ok for me. It doesn\u2019t feel too heavy, nor does it feel too light. The three point kickstand is a nice improvement from the first generation, which I have really missed. With three different settings I am able to work comfortably on the daily commute to work, in the couch at home or wherever I want. It also includes a 4th, secret setting, however I don\u2019t intend to test that.   \n<iframe allowfullscreen=\"\" frameborder=\"0\" height=\"613\" src=\"https:\/\/www.youtube.com\/embed\/eA-9BPXhJdY?feature=oembed\" width=\"1090\"><\/iframe>\n\nAs I am not intending to do any heavy work on the Surface, I choose the cheaper version. It is delivered with 2GB memory, 64GB storage capacity and an Intel Atom x7 Z8700, 1.6 GHz processor. The screen size is 10.8\u201d, with a 3:2 ratio, Full HD resolution. The screen appears sharp and crisp, which I can\u2019t say applies to the first generation. Reading, writing and watching movies is as good as expected.\n\nThe Surface 3 boots up rather quickly, and the first time setup is as quick as you would expect with the Windows 8.1 eco system. I am very glad it is delivered with the full version of Windows and not the RT edition. This is a huge advantage, as you have the possibility to install software outside the Windows Store. For me it means I can use Google Chrome as my browser, and some development tools I am using elsewhere.\n\nAs for negatives I have yet to find any huge ones. The only thing I specifically want to mention is the price. I believe the price could have been a bit cheaper, and I guess it could reach even more people cutting the prices a bit. Then again, it\u2019s not too expensive, after all I were willing to buy it.\n\nAll in all I am happy so far. I believe the Surface 3 is a good choice if you want a tablet with Windows, and don\u2019t need all the power in the Surface Pro 3.\n\nHave you tried the Surface 3? Are you happy with it?\n\n\n","html":"<p>This is the end of my third week with my brand new Surface 3, so it\u2019s time to give a short review of it. Before I get into the review itself, I think its wise to describe what I use the Surface for, so the terms of my review is clear. <\/p>\n<p>The primary need for me is to have a tablet, which I can use to read and watch movies while traveling, as well as do some blogging and the occasional work at home. My SO have had an iPad for a long time, and naturally I tried it, just to see that it did not fit my needs. When the first generation Surface reached the market I were quick to buy one, with Windows 8 RT. This was OK for reading and watching movies. However it was not as good as I had hoped, a bit slow at times, and also I did not like the fact that you couldn\u2019t install third party applications (outside the Windows Store). With that information lets move on to my review of the Surface 3.<\/p>\n<p> <!--more--><\/p>\n<p>Opening the package it arrived in revealed what seemed to be a solid tablet. With the type cover attached it weighs in at 887g, which is ok for me. It doesn\u2019t feel too heavy, nor does it feel too light. The three point kickstand is a nice improvement from the first generation, which I have really missed. With three different settings I am able to work comfortably on the daily commute to work, in the couch at home or wherever I want. It also includes a 4th, secret setting, however I don\u2019t intend to test that. <br \/><iframe width=\"1090\" height=\"613\" src=\"https:\/\/www.youtube.com\/embed\/eA-9BPXhJdY?feature=oembed\" frameborder=\"0\" allowfullscreen><\/iframe> <\/p>\n<p>As I am not intending to do any heavy work on the Surface, I choose the cheaper version. It is delivered with 2GB memory, 64GB storage capacity and an Intel Atom x7 Z8700, 1.6 GHz processor. The screen size is 10.8\u201d, with a 3:2 ratio, Full HD resolution. The screen appears sharp and crisp, which I can\u2019t say applies to the first generation. Reading, writing and watching movies is as good as expected.<\/p>\n<p>The Surface 3 boots up rather quickly, and the first time setup is as quick as you would expect with the Windows 8.1 eco system. I am very glad it is delivered with the full version of Windows and not the RT edition. This is a huge advantage, as you have the possibility to install software outside the Windows Store. For me it means I can use Google Chrome as my browser, and some development tools I am using elsewhere. <\/p>\n<p>As for negatives I have yet to find any huge ones. The only thing I specifically want to mention is the price. I believe the price could have been a bit cheaper, and I guess it could reach even more people cutting the prices a bit. Then again, it\u2019s not too expensive, after all I were willing to buy it. <\/p>\n<p>All in all I am happy so far. I believe the Surface 3 is a good choice if you want a tablet with Windows, and don\u2019t need all the power in the Surface Pro 3. <\/p>\n<p>Have you tried the Surface 3? Are you happy with it?<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 21 May 2015 21:05:28 +0000","created_by":1,"updated_at":"Mon, 25 May 2015 20:48:44 +0000","updated_by":1,"published_at":"Thu, 21 May 2015 21:05:28 +0000","published_by":1},{"id":349,"title":"Xamarin tutorial - iOS MapKit Part 3","slug":"xamarin-tutorial-ios-mapkit-part-3","markdown":"\nThis is the third and final post, in the three-part tutorial, on using the iOS MapKit in a Xamarin iOS project. In the [first post](http:\/\/leiflarsen.org\/2015\/xamarin-tutorial-ios-mapkit-part-1) we looked at the initial setup of the project, as well as basic generation of a map view. The [previous post](http:\/\/leiflarsen.org\/2015\/xamarin-tutorial-ios-mapkit-part-2) took a look at annotations and how to create custom annotations. In this final post we will look at search functionality using **MKLocalSearch**.\n\nThe source code can still be found at [GitHub](https:\/\/github.com\/leif-larsen\/Xamarin-iOS-Map-Tutorial).  \n  \n To let our app be able to do a search we need to do a few things. First, we\u2019re going to add two new classes, a search delegate and a result view. The search delegate will execute the search itself. The result view is in charge of showing the results, as well as deciding what to do when a result item have been selected. Further on we need to add the search bar to the app, and hook it up with a search controller.\n\nAs you can see, from the source code, I have added the two new classes. I have called the search delegate **SearchDelegate** and the result view **SearchSource**.\n\nThe **SearchDelegate **inherits **UISearchDisplayDelegate**, and we need to implement the **ShouldReloadForSearchString** method. Let\u2019s take a look at what it does.\n\n public override bool ShouldReloadForSearchString(UISearchDisplayController controller, string forSearchString) { var searchRequest = new MKLocalSearchRequest (); searchRequest.NaturalLanguageQuery = forSearchString; var localSearch = new MKLocalSearch (searchRequest); localSearch.Start (delegate (MKLocalSearchResponse response, NSError error) { if(response != null && error == null) { Console.WriteLine (response); ((SearchSource)controller.SearchResultsSource).mapItems = response.MapItems.ToList(); controller.SearchResultsTableView.ReloadData(); } else { Console.WriteLine (error); } }); return false; }\n\nThis method starts by creating a new object of a local search request. Then we pass on our search string to the **NaturalLanguageQuery**. This search request is then passed on to the constructor of the local search object we create. We use this object to start the search, and pass on a completion handler. This is where we get our search results, and decide what to do with them. As you can see from our example we simply output the response (or error if there is any), and then we add this to the result table. At the end, we reload this result table, so the end-user can see the actual results.\n\nThe **SearchSource** class should be ok to understand. It inherits the **UITableViewSource** and it just tells the app what the contents of the table cells should be. The one method I want to point out is the following.\n\n public override void RowSelected(UITableView tableView, NSIndexPath indexPath) { _searchController.SetActive (false, true); CLLocationCoordinate2D coords = mapItems [indexPath.Row].Placemark.Location.Coordinate; _mapView.Map.SetCenterCoordinate (coords, false); _mapView.Map.SetRegion (new MKCoordinateRegion (coords, new MKCoordinateSpan (_mapView.kmToLatitudeDegrees (2.5), _mapView.kmToLongitudeDegrees (2.5, coords.Latitude))), true); }\n\nThis method decides what happens when a user selects a search result item. The first line hides the search interface, while the next line gets the location of the selected item. Moving on you\u2019ll see that we call the **MapViewController** and the Map property (which I will explain in a bit) to center the map around the selected item. Optionally we could add a pin at that location, just to show the user exactly where it is, however I\u2019ll leave it to you to figure out how to do that.\n\nFinally we need to make sure the user actually can use the search functionality and to do this we need to make certain modifications to our **MapViewController**.\n\nFirst we want to introduce three new properties.\n\n private UISearchBar _searchBar; private UISearchDisplayController _searchController; public MKMapView Map { get { return _mapView; } }\n\nThese are the search bar, search display controller and a public property for the **MKMapView**, which is used to center the map from the search result item selected.  \n**NOTE! As I was reading up on the API for iOS, I noticed that UISearchDisplayController is deprecated as of iOS 8, however it still works. I still recommend looking into the alternative, UISearchController.**\n\nIn the constructor you need to enable search, and disable auto hiding of the search bar. This is because we\u2019re using MonoTouch.Dialog, and I experienced all sorts of strange behavior if those two lines were excluded.\n\nThe code to add the search bar looks like this:\n\n _searchBar = new UISearchBar (new RectangleF(0, 0, (float)View.Frame.Width, 50)) { Placeholder = \"Enter search text\", AutocorrectionType = UITextAutocorrectionType.No, TintColor = UIColor.Black }; _searchBar.SearchBarStyle = UISearchBarStyle.Default; _searchController = new UISearchDisplayController (_searchBar, this); _searchController.Delegate = new SearchDelegate (); _searchController.SearchResultsSource = new SearchSource (_searchController, this); View.AddSubview (_searchBar);\n\nWe create a new object of the **UISearchBar** type, and specify the frame of it. We also specify a few parameters as well. Then we set the style to be default. We then go on to create the search display controller, and set its delegate and search result source to the classes we created earlier.\n\nWith all that in place, the result should look like this:  \n<figure class=\"wp-caption alignleft\" id=\"attachment_375\" style=\"width: 169px\">[![Search bar added to Map view](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/05\/iOS-Simulator-Screen-Shot-30.-mai-2015-11.33.14-169x300.png?fit=169%2C300)](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/05\/iOS-Simulator-Screen-Shot-30.-mai-2015-11.33.14.png)<figcaption class=\"wp-caption-text\">Search bar added to Map view<\/figcaption><\/figure>\n\nAnd that concludes this tutorial on the iOS MapKit with Xamarin. Hope you have learnt something, and are able to use some of this for your ideas. Seeing as this is my first tutorial series I would really appreciate some feedback on the format. Ideas for other tutorials is also appreciated!\n\n\n","html":"<p>This is the third and final post, in the three-part tutorial, on using the iOS MapKit in a Xamarin iOS project. In the <a href=\"http:\/\/leiflarsen.org\/2015\/xamarin-tutorial-ios-mapkit-part-1\" target=\"_blank\">first post<\/a> we looked at the initial setup of the project, as well as basic generation of a map view. The <a href=\"http:\/\/leiflarsen.org\/2015\/xamarin-tutorial-ios-mapkit-part-2\" target=\"_blank\">previous post<\/a> took a look at annotations and how to create custom annotations. In this final post we will look at search functionality using <strong>MKLocalSearch<\/strong>.<\/p>\n<p>The source code can still be found at <a href=\"https:\/\/github.com\/leif-larsen\/Xamarin-iOS-Map-Tutorial\" target=\"_blank\">GitHub<\/a>.<br \/>\n<!--more--><br \/>\nTo let our app be able to do a search we need to do a few things. First, we\u2019re going to add two new classes, a search delegate and a result view. The search delegate will execute the search itself. The result view is in charge of showing the results, as well as deciding what to do when a result item have been selected. Further on we need to add the search bar to the app, and hook it up with a search controller.<\/p>\n<p>As you can see, from the source code, I have added the two new classes. I have called the search delegate <strong>SearchDelegate<\/strong> and the result view <strong>SearchSource<\/strong>. <\/p>\n<p>The <strong>SearchDelegate <\/strong>inherits <strong>UISearchDisplayDelegate<\/strong>, and we need to implement the <strong>ShouldReloadForSearchString<\/strong> method. Let&#8217;s take a look at what it does.<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\npublic override bool ShouldReloadForSearchString(UISearchDisplayController controller, string forSearchString)\r\n{\r\n\tvar searchRequest = new MKLocalSearchRequest ();\r\n\tsearchRequest.NaturalLanguageQuery = forSearchString;\r\n\r\n\tvar localSearch = new MKLocalSearch (searchRequest);\r\n\tlocalSearch.Start (delegate (MKLocalSearchResponse response, NSError error) {\r\n\t\tif(response != null &amp;&amp; error == null) {\r\n\t\t\tConsole.WriteLine (response);\r\n\t\t\t((SearchSource)controller.SearchResultsSource).mapItems = response.MapItems.ToList();\r\n\t\t\tcontroller.SearchResultsTableView.ReloadData();\r\n\t\t} else {\r\n\t\t\tConsole.WriteLine (error);\r\n\t\t}\r\n\t});\r\n\r\n\treturn false;\r\n}\r\n<\/pre>\n<p>This method starts by creating a new object of a local search request. Then we pass on our search string to the <strong>NaturalLanguageQuery<\/strong>. This search request is then passed on to the constructor of the local search object we create. We use this object to start the search, and pass on a completion handler. This is where we get our search results, and decide what to do with them. As you can see from our example we simply output the response (or error if there is any), and then we add this to the result table. At the end, we reload this result table, so the end-user can see the actual results.<\/p>\n<p>The <strong>SearchSource<\/strong> class should be ok to understand. It inherits the <strong>UITableViewSource<\/strong> and it just tells the app what the contents of the table cells should be. The one method I want to point out is the following.<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\npublic override void RowSelected(UITableView tableView, NSIndexPath indexPath)\r\n{\r\n\t_searchController.SetActive (false, true);\r\n\r\n\tCLLocationCoordinate2D coords = mapItems [indexPath.Row].Placemark.Location.Coordinate;\r\n\r\n\t_mapView.Map.SetCenterCoordinate (coords, false);\r\n\t_mapView.Map.SetRegion (new MKCoordinateRegion (coords, new MKCoordinateSpan (_mapView.kmToLatitudeDegrees (2.5), _mapView.kmToLongitudeDegrees (2.5, coords.Latitude))), true);\r\n}\r\n<\/pre>\n<p>This method decides what happens when a user selects a search result item. The first line hides the search interface, while the next line gets the location of the selected item. Moving on you&#8217;ll see that we call the <strong>MapViewController<\/strong> and the Map property (which I will explain in a bit) to center the map around the selected item. Optionally we could add a pin at that location, just to show the user exactly where it is, however I&#8217;ll leave it to you to figure out how to do that.<\/p>\n<p>Finally we need to make sure the user actually can use the search functionality and to do this we need to make certain modifications to our <strong>MapViewController<\/strong>.<\/p>\n<p>First we want to introduce three new properties.<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nprivate UISearchBar _searchBar;\r\nprivate UISearchDisplayController _searchController;\r\npublic MKMapView Map { get { return _mapView; } }\r\n<\/pre>\n<p>These are the search bar, search display controller and a public property for the <strong>MKMapView<\/strong>, which is used to center the map from the search result item selected.<br \/>\n<strong>NOTE! As I was reading up on the API for iOS, I noticed that UISearchDisplayController is deprecated as of iOS 8, however it still works. I still recommend looking into the alternative, UISearchController.<\/strong><\/p>\n<p>In the constructor you need to enable search, and disable auto hiding of the search bar. This is because we&#8217;re using MonoTouch.Dialog, and I experienced all sorts of strange behavior if those two lines were excluded.<\/p>\n<p>The code to add the search bar looks like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n_searchBar = new UISearchBar (new RectangleF(0, 0, (float)View.Frame.Width, 50)) {\r\n\tPlaceholder = &quot;Enter search text&quot;,\r\n\tAutocorrectionType = UITextAutocorrectionType.No,\r\n\tTintColor = UIColor.Black\r\n};\r\n\r\n_searchBar.SearchBarStyle = UISearchBarStyle.Default;\r\n_searchController = new UISearchDisplayController (_searchBar, this);\r\n_searchController.Delegate = new SearchDelegate ();\r\n_searchController.SearchResultsSource = new SearchSource (_searchController, this);\r\n\r\nView.AddSubview (_searchBar);\r\n<\/pre>\n<p>We create a new object of the <strong>UISearchBar<\/strong> type, and specify the frame of it. We also specify a few parameters as well. Then we set the style to be default. We then go on to create the search display controller, and set its delegate and search result source to the classes we created earlier. <\/p>\n<p>With all that in place, the result should look like this:<br \/>\n<figure id=\"attachment_375\" style=\"width: 169px\" class=\"wp-caption alignleft\"><a href=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/05\/iOS-Simulator-Screen-Shot-30.-mai-2015-11.33.14.png\" rel=\"lightbox[349]\"><img src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/05\/iOS-Simulator-Screen-Shot-30.-mai-2015-11.33.14-169x300.png?fit=169%2C300\" alt=\"Search bar added to Map view\" class=\"size-medium wp-image-375\" srcset=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/05\/iOS-Simulator-Screen-Shot-30.-mai-2015-11.33.14.png?resize=169%2C300 169w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/05\/iOS-Simulator-Screen-Shot-30.-mai-2015-11.33.14.png?resize=577%2C1024 577w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/05\/iOS-Simulator-Screen-Shot-30.-mai-2015-11.33.14.png?w=640 640w\" sizes=\"(max-width: 169px) 100vw, 169px\" data-recalc-dims=\"1\" \/><\/a><figcaption class=\"wp-caption-text\">Search bar added to Map view<\/figcaption><\/figure><\/p>\n<p>And that concludes this tutorial on the iOS MapKit with Xamarin. Hope you have learnt something, and are able to use some of this for your ideas. Seeing as this is my first tutorial series I would really appreciate some feedback on the format. Ideas for other tutorials is also appreciated! <\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 31 May 2015 20:00:39 +0000","created_by":1,"updated_at":"Sat, 30 May 2015 20:37:01 +0000","updated_by":1,"published_at":"Sun, 31 May 2015 20:00:39 +0000","published_by":1},{"id":381,"title":"Busy June","slug":"busy-june","markdown":"\nThe month of June was quite busy for me. My SO and I came across an apartment we really liked in late May, and decided to bid on it. Fortunately, we got it, but that meant we had to sell the one we lived in. We were told that it would be best to sell it before the vacation started, so that meant preparing it for sale. This meant packing and storing most of our stuff away. This took a lot of time, and I think we were working almost all the time, first going to our jobs, then home to pack and move boxes and furniture.\n\nThe apartment was sold the day after our first public viewing, and the next day we were handed the keys to our new place, so then we had to move everything to the new apartment. We managed to move a whole lot in two days. After those two days, we travelled to Corfu, for a relaxing week of vacation. I dare to say it was well deserved. We spent most of the week relaxing by the pool, but we did also try scuba diving, which was quite fun!\n\nAnyway, within the month of June we bought a new apartment, packed and moved most of our stuff, and sold our old apartment. Now that we got most sorted out, we need to organize our new place. This will off course be done over time as we settle in, but it means I am now ready to continue on my personal projects. In my next post I will tell you a bit about my next planned project, hopefully it will be an exciting one!\n\n\n","html":"<p>The month of June was quite busy for me. My SO and I came across an apartment we really liked in late May, and decided to bid on it. Fortunately, we got it, but that meant we had to sell the one we lived in. We were told that it would be best to sell it before the vacation started, so that meant preparing it for sale. This meant packing and storing most of our stuff away. This took a lot of time, and I think we were working almost all the time, first going to our jobs, then home to pack and move boxes and furniture. <\/p>\n<p>The apartment was sold the day after our first public viewing, and the next day we were handed the keys to our new place, so then we had to move everything to the new apartment. We managed to move a whole lot in two days. After those two days, we travelled to Corfu, for a relaxing week of vacation. I dare to say it was well deserved. We spent most of the week relaxing by the pool, but we did also try scuba diving, which was quite fun!<\/p>\n<p>Anyway, within the month of June we bought a new apartment, packed and moved most of our stuff, and sold our old apartment. Now that we got most sorted out, we need to organize our new place. This will off course be done over time as we settle in, but it means I am now ready to continue on my personal projects. In my next post I will tell you a bit about my next planned project, hopefully it will be an exciting one!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 06 Jul 2015 20:10:45 +0000","created_by":1,"updated_at":"Mon, 06 Jul 2015 20:10:45 +0000","updated_by":1,"published_at":"Mon, 06 Jul 2015 20:10:45 +0000","published_by":1},{"id":383,"title":"My next project(s)","slug":"my-next-project","markdown":"\nThe last month, or so, has been quite hectic, but now that we have finally settled in, in our new apartment, I have time to start on my next project(s). I have several things lined up, and hopefully I\u2019m able to set aside enough time to complete each project within reasonably time. It\u2019s worth mentioning that these are all personal projects, not projects done at my job.\n\nI will tell you a little bit about each project, and naturally I will give updates during development. I have not prioritized this, but the projects I have planned is the following:\n\n3. A new cross-platform app\n4. A project involving IoT\n5. Increasing my skills as a developer\nThe top priority now is none of the above. Before I go on to work on those, I need to finish the Android version of [Parker Gratis](http:\/\/parkergratis.no). I am aiming to do that within a week\u2019s time. After that, I plan to do some marketing for it, to increase the user volume.\n\nOn to the list above.\n\n**A new cross-platform app**\n\nThis is an idea I\u2019ve had a few years, however I have not done any work on it for several reasons. Now I feel I have the skillset needed, as well as the right tools to develop it. The app will be an informational app to find the nearest vet from where you are. This can come in handy in case you are on a vacation with your pets, and the pet gets ill or injured. I guess the biggest part of the job is to gather all the data needed, and as a start, I will only include Norwegian vets. The app itself should be simple, and intuitive to the user, and hopefully it won\u2019t take that long to develop.\n\n**A project involving IoT**\n\n<figure class=\"wp-caption alignleft\" id=\"attachment_395\" style=\"width: 788px\">[![IoT illustration](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/07\/network-782707_1280-1024x666.png?fit=788%2C513)](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/07\/network-782707_1280.png)<figcaption class=\"wp-caption-text\">IoT illustration<\/figcaption><\/figure>  \n IoT (Internet of Things) is a subject that have had my interest for a while. Seeing as I haven\u2019t found any use for it, I haven\u2019t worked with it though. Now that we have moved to a new apartment, I have seen an opportunity to use it for home automation. Our new apartment have been refurbished recently, and as a part of that, the previous owner installed wireless lights. My first thought was to use some sort of transmitter to control the lights by a webapp (or mobile app) in our local network, and from there new ideas came to my head.\n\nFor now I have the following list of stuff I want to automate:\n\n14. Monitor lights in all the rooms, to check whether or not they are on.\n15. Controlling the lights in the rooms where they are wireless.\n16. Humidity monitoring in the basement.\n17. Temperature monitoring in all rooms\n18. Monitoring the mailbox to check if we have mail or not.\n19. Monitor on the fridge, so we get warnings if the door has been open for a longer period of time.\nLaying around I have a starter kit from [Particle](http:\/\/particle.io), namely the Particle Core. I have been playing around with it lately to see its capabilities, and I believe I can do everything I want with it. So over the next months I will buy in equipment I need and work on this. It will be an exciting project, which will be a bit different than other projects I work on.\n\nIf you happen to have ideas to other parts I can automate in my home do share!\n\n**Increasing my skills as a developer**\n\nOne can argue that I will be doing this by working on the projects, mentioned above, and I agree. I do however want to do some more specific to increase my skills. In particular I have started doing coding katas, which you can read more on at [codekata.com](http:\/\/codekata.com\/). My goal by doing this is to become an even better problem solver. I aim to solve different katas in different ways, so I can see possible solutions to the same problem.\n\nAre you doing code katas? Why\/why not?\n\n\n","html":"<p>The last month, or so, has been quite hectic, but now that we have finally settled in, in our new apartment, I have time to start on my next project(s). I have several things lined up, and hopefully I&#8217;m able to set aside enough time to complete each project within reasonably time. It\u2019s worth mentioning that these are all personal projects, not projects done at my job.<\/p>\n<p>I will tell you a little bit about each project, and naturally I will give updates during development. I have not prioritized this, but the projects I have planned is the following:<\/p>\n<li>A new cross-platform app<\/li>\n<li>A project involving IoT<\/li>\n<li>Increasing my skills as a developer<\/li>\n<p><!--more--><\/p>\n<p>The top priority now is none of the above. Before I go on to work on those, I need to finish the Android version of <a href=\"http:\/\/parkergratis.no\" target=\"_blank\">Parker Gratis<\/a>. I am aiming to do that within a week&#8217;s time. After that, I plan to do some marketing for it, to increase the user volume.<\/p>\n<p>On to the list above.<\/p>\n<p><strong>A new cross-platform app<\/strong><\/p>\n<p>This is an idea I\u2019ve had a few years, however I have not done any work on it for several reasons. Now I feel I have the skillset needed, as well as the right tools to develop it. The app will be an informational app to find the nearest vet from where you are. This can come in handy in case you are on a vacation with your pets, and the pet gets ill or injured. I guess the biggest part of the job is to gather all the data needed, and as a start, I will only include Norwegian vets. The app itself should be simple, and intuitive to the user, and hopefully it won\u2019t take that long to develop.<\/p>\n<p><strong>A project involving IoT<\/strong><\/p>\n<p><figure id=\"attachment_395\" style=\"width: 788px\" class=\"wp-caption alignleft\"><a href=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/07\/network-782707_1280.png\" rel=\"lightbox[383]\"><img src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/07\/network-782707_1280-1024x666.png?fit=788%2C513\" alt=\"IoT illustration\" class=\"size-large wp-image-395\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/07\/network-782707_1280.png?resize=300%2C195 300w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/07\/network-782707_1280.png?resize=1024%2C666 1024w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/07\/network-782707_1280.png?resize=788%2C512 788w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/07\/network-782707_1280.png?w=1280 1280w\" sizes=\"(max-width: 788px) 100vw, 788px\" data-recalc-dims=\"1\" \/><\/a><figcaption class=\"wp-caption-text\">IoT illustration<\/figcaption><\/figure><br \/>\nIoT (Internet of Things) is a subject that have had my interest for a while. Seeing as I haven\u2019t found any use for it, I haven\u2019t worked with it though. Now that we have moved to a new apartment, I have seen an opportunity to use it for home automation. Our new apartment have been refurbished recently, and as a part of that, the previous owner installed wireless lights. My first thought was to use some sort of transmitter to control the lights by a webapp (or mobile app) in our local network, and from there new ideas came to my head.<\/p>\n<p>For now I have the following list of stuff I want to automate:<\/p>\n<li>Monitor lights in all the rooms, to check whether or not they are on.<\/li>\n<li>Controlling the lights in the rooms where they are wireless.<\/li>\n<li>Humidity monitoring in the basement.<\/li>\n<li>Temperature monitoring in all rooms<\/li>\n<li>Monitoring the mailbox to check if we have mail or not.<\/li>\n<li>Monitor on the fridge, so we get warnings if the door has been open for a longer period of time.<\/li>\n<p>Laying around I have a starter kit from <a href=\"http:\/\/particle.io\" target=\"_blank\">Particle<\/a>, namely the Particle Core. I have been playing around with it lately to see its capabilities, and I believe I can do everything I want with it. So over the next months I will buy in equipment I need and work on this. It will be an exciting project, which will be a bit different than other projects I work on.<\/p>\n<p>If you happen to have ideas to other parts I can automate in my home do share!<\/p>\n<p><strong>Increasing my skills as a developer<\/strong><\/p>\n<p>One can argue that I will be doing this by working on the projects, mentioned above, and I agree. I do however want to do some more specific to increase my skills. In particular I have started doing coding katas, which you can read more on at <a href=\"http:\/\/codekata.com\/\" target=\"_blank\">codekata.com<\/a>. My goal by doing this is to become an even better problem solver. I aim to solve different katas in different ways, so I can see possible solutions to the same problem.<\/p>\n<p>Are you doing code katas? Why\/why not?<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/07\/mgyPge6.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 17 Jul 2015 17:00:01 +0000","created_by":1,"updated_at":"Mon, 20 Jul 2015 10:04:07 +0000","updated_by":1,"published_at":"Fri, 17 Jul 2015 17:00:01 +0000","published_by":1},{"id":406,"title":"A first look into the world of Raspberry Pi","slug":"first-look-world-raspberry-pi","markdown":"\nA few days ago I went to a local electronic store and bought myself a Raspberry Pi 2 Model B. I\u2019ve read a bit about Windows 10 IoT Core, so I decided I wanted to try that, specifically for my home automation project I am slowly easing into.  \n  \n The Pi comes in a small box, that looks like this:  \n<figure class=\"wp-caption aligncenter\" id=\"attachment_412\" style=\"width: 300px\">[![Raspberry Pi Box](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiBox-300x225.jpg?fit=300%2C225)](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiBox.jpg)<figcaption class=\"wp-caption-text\">Raspberry Pi Box<\/figcaption><\/figure>\n\nAnd the Pi itself looks like this:  \n<figure class=\"wp-caption aligncenter\" id=\"attachment_413\" style=\"width: 300px\">[![Raspberry Pi 2 Model B](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiProfile-300x225.jpg?fit=300%2C225)](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiProfile.jpg)<figcaption class=\"wp-caption-text\">Raspberry Pi 2 Model B<\/figcaption><\/figure>\n\nTo be able to install Windows 10 IoT you need a class 10 micro SD card. It needs to be at least 8 GB big.\n\nThe installation process is fairly simple. I spent some extra time, since I decided to install Windows 10 on my Mac Mini, using Bootcamp. More on that in another post. Anyway, to prepare my computer for development for Raspberry Pi, I followed [a guide from Microsoft](http:\/\/ms-iot.github.io\/content\/en-US\/win10\/SetupPCRPI.htm). The also have a [great guide](http:\/\/ms-iot.github.io\/content\/en-US\/win10\/SetupRPI.htm) on how to install Windows 10 IoT on the Raspberry Pi itself. The guide on how to [setup Powershell](http:\/\/ms-iot.github.io\/content\/en-US\/win10\/samples\/PowerShell.htm) for remote administration was also quite useful to me.\n\nAll in all I find that Microsoft have done a great job documenting the process, to get developers quickly up and running. The next step after installation is naturally to do some development. Microsoft shows off an example called Blinky, which is basically a LED blinking app. As I didn\u2019t have the hardware required for that, I decided to make it simple, and just create a \u201cHello World\u201d app. Mainly just to see that I were able to deploy an app to the Pi, and to see that it started properly. It didn\u2019t.\n\nTurned out that since I had left the Pi running almost a day, the remote debugger had timed out, and stopped working. To fix this all I had to do was to restart the Pi. After a quick reboot, I were able to deploy the test app.\n\nI am looking forward to play around the Raspberry Pie more, as I have a lot of ideas. I have already ordered some parts from [The Pi Hut](http:\/\/thepihut.com\/), so there is exciting times ahead!\n\nWhat\u2019s your experience with Raspberry Pi? Are you using it with Windows 10 IoT or some other OS?\n\n\n","html":"<p>A few days ago I went to a local electronic store and bought myself a Raspberry Pi 2 Model B. I&#8217;ve read a bit about Windows 10 IoT Core, so I decided I wanted to try that, specifically for my home automation project I am slowly easing into.<br \/>\n<!--more--><br \/>\nThe Pi comes in a small box, that looks like this:<br \/>\n<figure id=\"attachment_412\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiBox.jpg\" rel=\"lightbox[406]\"><img src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiBox-300x225.jpg?fit=300%2C225\" alt=\"Raspberry Pi Box\" class=\"size-medium wp-image-412\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiBox.jpg?resize=300%2C225 300w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiBox.jpg?resize=1024%2C768 1024w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiBox.jpg?resize=788%2C591 788w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><figcaption class=\"wp-caption-text\">Raspberry Pi Box<\/figcaption><\/figure><\/p>\n<p>And the Pi itself looks like this:<br \/>\n<figure id=\"attachment_413\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><a href=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiProfile.jpg\" rel=\"lightbox[406]\"><img src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiProfile-300x225.jpg?fit=300%2C225\" alt=\"Raspberry Pi 2 Model B\" class=\"size-medium wp-image-413\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiProfile.jpg?resize=300%2C225 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiProfile.jpg?resize=1024%2C768 1024w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPiProfile.jpg?resize=788%2C591 788w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><figcaption class=\"wp-caption-text\">Raspberry Pi 2 Model B<\/figcaption><\/figure><\/p>\n<p>To be able to install Windows 10 IoT you need a class 10 micro SD card. It needs to be at least 8 GB big.<\/p>\n<p>The installation process is fairly simple. I spent some extra time, since I decided to install Windows 10 on my Mac Mini, using Bootcamp. More on that in another post. Anyway, to prepare my computer for development for Raspberry Pi, I followed <a href=\"http:\/\/ms-iot.github.io\/content\/en-US\/win10\/SetupPCRPI.htm\" target=\"_blank\">a guide from Microsoft<\/a>. The also have a <a href=\"http:\/\/ms-iot.github.io\/content\/en-US\/win10\/SetupRPI.htm\" target=\"_blank\">great guide<\/a> on how to install Windows 10 IoT on the Raspberry Pi itself. The guide on how to <a href=\"http:\/\/ms-iot.github.io\/content\/en-US\/win10\/samples\/PowerShell.htm\" target=\"_blank\">setup Powershell<\/a> for remote administration was also quite useful to me.<\/p>\n<p>All in all I find that Microsoft have done a great job documenting the process, to get developers quickly up and running. The next step after installation is naturally to do some development. Microsoft shows off an example called Blinky, which is basically a LED blinking app. As I didn&#8217;t have the hardware required for that, I decided to make it simple, and just create a &#8220;Hello World&#8221; app. Mainly just to see that I were able to deploy an app to the Pi, and to see that it started properly. It didn&#8217;t. <\/p>\n<p>Turned out that since I had left the Pi running almost a day, the remote debugger had timed out, and stopped working. To fix this all I had to do was  to restart the Pi. After a quick reboot, I were able to deploy the test app. <\/p>\n<p>I am looking forward to play around the Raspberry Pie more, as I have a lot of ideas. I have already ordered some parts from <a href=\"http:\/\/thepihut.com\/\" target=\"_blank\">The Pi Hut<\/a>, so there is exciting times ahead!<\/p>\n<p>What&#8217;s your experience with Raspberry Pi? Are you using it with Windows 10 IoT or some other OS?<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/08\/RaspberryPi-e1441046787773.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 31 Aug 2015 20:10:22 +0000","created_by":1,"updated_at":"Mon, 31 Aug 2015 20:13:12 +0000","updated_by":1,"published_at":"Mon, 31 Aug 2015 20:10:22 +0000","published_by":1},{"id":418,"title":"Securing your Wordpress installation","slug":"securing-your-wordpress-installation","markdown":"\nI am using WordPress as my blog platform, as I find it to have all the features I need. As I have seen some increase in traffic over the past few months, I have also seen an increase in the number of brute-force attempts (if you want to know what a brute-force attack is, you can read up on it at [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Brute-force_attack)). As a result, I thought I share a few tips on how you could be securing your WordPress installation.\n\n**Backup**\n\nThe first, and maybe most important thing to do is to have a working backup system. I am using a plugin called \u201c[WordPress Backup to Dropbox](https:\/\/wordpress.org\/plugins\/wordpress-backup-to-dropbox\/)\u201c, which connects to your dropbox account, and generates a backup of all your files and the database. You set it up so it creates a backup periodically. It is quite easy to setup, and the provided installation guide gets you up and running in no time. Just make sure you have enough available space on your dropbox account!  \n You can find a list of other backup plugins at [wpbeginner](http:\/\/www.wpbeginner.com\/plugins\/7-best-wordpress-backup-plugins-compared-pros-and-cons\/), although I cannot say how any of those works.\n\n**WordPress security**\n\nA tool I use for security is [Wordfence](https:\/\/wordpress.org\/plugins\/wordfence\/). This is a great tool, which provides you with blocking features, login security, security scanning, WordPress firewall, monitoring, caching and several more. It comes with a free edition, as well as a premium edition. For my use, the free edition is enough, but I am considering upgrading, as I see several premium features I would like to try.\n\nAmongst the stuff I have set it up to, is to give me security reports. So if someone tries to log on to my site, but fails, I will be notified. In addition when upgrades is available for plugins or WordPress I get notified.\n\nThere are a lot of settings for this plugin, so I won\u2019t go into detail on them. I highly recommend trying Wordfence to see all the possibilities.\n\n**Securing WP-Admin**\n\nAnother step to secure your WordPress installation is to put your administration files (usually the folder called WP-Admin) under password protection. This means creating a .htaccess file, with a corresponding .htpasswd file. This can be done manually, or if your web host use CPanel, you could use the features of CPanel to do it. There are several guides online, on how you do this, so I won\u2019t go into much details on this. I\u2019ve used the guide from [wpbeginner](http:\/\/www.wpbeginner.com\/wp-tutorials\/how-to-password-protect-your-wordpress-admin-wp-admin-directory\/) with success. This guide also describes some errors that may occur while setting this up.\n\nWhile we\u2019re talking about password protection, it might also be an idea to password protect the wp-login page. This is the page that loads when you need to login in to the administration panel, and it is located outside the WP-Admin folder. I did not really see a decrease in the number of brute-force attempts until I put password protection of this file. From the WordPress codex I added the following lines to the .htaccess file under the WordPress root folder.\n\n # Stop Apache from serving .ht* files <Files ~ \"^\\.ht\"> Order allow,deny Deny from all <\/Files> # Protect wp-login <Files wp-login.php> AuthUserFile ~\/.htpasswd AuthName \"Private access\" AuthType Basic require user mysecretuser <\/Files>\n\nReplace AuthUserFile with the correct filepath for your .htpasswd file.\n\n**IP whitelist**\n\nThe last step in securing your WordPress installation might be a disadvantage. It involves creating a whitelist of IP addresses that are allowed to access your administration panel. In my case I only have a couple of places I access my WordPress, so it\u2019s ok for me. Others may access the administration panel from new locations every day, which will mean they would need to update their .htaccess often. Others again may have dynamic IP from their ISP, so this could be a disadvantage in that case.\n\nTo create the IP whitelist you need to edit the .htaccess file, located in the WP-Admin folder. In this file you should add the following snippet:\n\n <LIMIT GET> order deny,allow deny from all # whitelist Syed's IP address allow from xx.xx.xx.xxx # whitelist David's IP address allow from xx.xx.xx.xxx # whitelist Amanda's IP address allow from xx.xx.xx.xxx # whitelist Muhammad's IP address allow from xx.xx.xx.xxx # whitelist Work IP address allow from xx.xx.xx.xxx <\/LIMIT>\n\nIt should be fairly easy to see what needs to be changed there.\n\nSo thats my few cents on how to secure your WordPress installation. Feel free to share any other stuff I haven\u2019t mentioned. More resources on the subject can be found at the WordPress Codex, and wpbeginner, which I have linked to several times through the article.\n\n\n","html":"<p>I am using WordPress as my blog platform, as I find it to have all the features I need. As I have seen some increase in traffic over the past few months, I have also seen an increase in the number of brute-force attempts (if you want to know what a brute-force attack is, you can read up on it at <a href=\"https:\/\/en.wikipedia.org\/wiki\/Brute-force_attack\">Wikipedia<\/a>). As a result, I thought I share a few tips on how you could be securing your WordPress installation.<br \/>\n<!--more--><\/p>\n<p><strong>Backup<\/strong><\/p>\n<p>The first, and maybe most important thing to do is to have a working backup system. I am using a plugin called &#8220;<a href=\"https:\/\/wordpress.org\/plugins\/wordpress-backup-to-dropbox\/\">WordPress Backup to Dropbox<\/a>&#8220;, which connects to your dropbox account, and generates a backup of all your files and the database. You set it up so it creates a backup periodically. It is quite easy to setup, and the provided installation guide gets you up and running in no time. Just make sure you have enough available space on your dropbox account!<br \/>\nYou can find a list of other backup plugins at <a href=\"http:\/\/www.wpbeginner.com\/plugins\/7-best-wordpress-backup-plugins-compared-pros-and-cons\/\">wpbeginner<\/a>, although I cannot say how any of those works.<\/p>\n<p><strong>WordPress security<\/strong><\/p>\n<p>A tool I use for security is <a href=\"https:\/\/wordpress.org\/plugins\/wordfence\/\">Wordfence<\/a>. This is a great tool, which provides you with blocking features, login security, security scanning, WordPress firewall, monitoring, caching and several more. It comes with a free edition, as well as a premium edition. For my use, the free edition is enough, but I am considering upgrading, as I see several premium features I would like to try.<\/p>\n<p>Amongst the stuff I have set it up to, is to give me security reports. So if someone tries to log on to my site, but fails, I will be notified. In addition when upgrades is available for plugins or WordPress I get notified.<\/p>\n<p>There are a lot of settings for this plugin, so I won&#8217;t go into detail on them. I highly recommend trying Wordfence to see all the possibilities.<\/p>\n<p><strong>Securing WP-Admin<\/strong><\/p>\n<p>Another step to secure your WordPress installation is to put your administration files (usually the folder called WP-Admin) under password protection. This means creating a .htaccess file, with a corresponding .htpasswd file. This can be done manually, or if your web host use CPanel, you could use the features of CPanel to do it. There are several guides online, on how you do this, so I won\u2019t go into much details on this. I\u2019ve used the guide from <a href=\"http:\/\/www.wpbeginner.com\/wp-tutorials\/how-to-password-protect-your-wordpress-admin-wp-admin-directory\/\">wpbeginner<\/a> with success. This guide also describes some errors that may occur while setting this up.<\/p>\n<p>While we\u2019re talking about password protection, it might also be an idea to password protect the wp-login page. This is the page that loads when you need to login in to the administration panel, and it is located outside the WP-Admin folder. I did not really see a decrease in the number of brute-force attempts until I put password protection of this file. From the WordPress codex I added the following lines to the .htaccess file under the WordPress root folder.<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n# Stop Apache from serving .ht* files\r\n&lt;Files ~ &quot;^\\.ht&quot;&gt;\r\nOrder allow,deny\r\nDeny from all\r\n&lt;\/Files&gt;\r\n\r\n# Protect wp-login\r\n&lt;Files wp-login.php&gt;\r\nAuthUserFile ~\/.htpasswd\r\nAuthName &quot;Private access&quot;\r\nAuthType Basic\r\nrequire user mysecretuser\r\n&lt;\/Files&gt;<\/pre>\n<p>Replace AuthUserFile with the correct filepath for your .htpasswd file.<\/p>\n<p><strong>IP whitelist<\/strong><\/p>\n<p>The last step in securing your WordPress installation might be a disadvantage. It involves creating a whitelist of IP addresses that are allowed to access your administration panel. In my case I only have a couple of places I access my WordPress, so it\u2019s ok for me. Others may access the administration panel from new locations every day, which will mean they would need to update their .htaccess often. Others again may have dynamic IP from their ISP, so this could be a disadvantage in that case. <\/p>\n<p>To create the IP whitelist you need to edit the .htaccess file, located in the WP-Admin folder. In this file you should add the following snippet:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n&lt;LIMIT GET&gt;\r\norder deny,allow\r\ndeny from all\r\n# whitelist Syed&#039;s IP address\r\nallow from xx.xx.xx.xxx\r\n# whitelist David&#039;s IP address\r\nallow from xx.xx.xx.xxx\r\n# whitelist Amanda&#039;s IP address\r\nallow from xx.xx.xx.xxx\r\n# whitelist Muhammad&#039;s IP address\r\nallow from xx.xx.xx.xxx\r\n# whitelist Work IP address\r\nallow from xx.xx.xx.xxx\r\n&lt;\/LIMIT&gt; \r\n<\/pre>\n<p>It should be fairly easy to see what needs to be changed there.<\/p>\n<p>So thats my few cents on how to secure your WordPress installation. Feel free to share any other stuff I haven\u2019t mentioned. More resources on the subject can be found at the WordPress Codex, and wpbeginner, which I have linked to several times through the article.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 21 Sep 2015 19:00:52 +0000","created_by":1,"updated_at":"Mon, 21 Sep 2015 10:57:00 +0000","updated_by":1,"published_at":"Mon, 21 Sep 2015 19:00:52 +0000","published_by":1},{"id":431,"title":"E-mail course on blogging","slug":"course-on-blogging","markdown":"\nAfter a while, where I have been struggling to write, I realized I needed to do something to keep this blog up. Maybe it has been the lack of interaction, or maybe not seeing a decent amount of traffic. I started to look for sources, as to how I could improve my blogging skills, and hopefully reach more people.\n\nSome time ago I came across a guy named John Sonmez, which runs the blog [Simple Programmer](http:\/\/simpleprogrammer.com\/?__s=cjqzh5jpeopvrnpk5b4e&utm_campaign=lesson-5-do-you-know-how-to-get-traffic-for-your-blog&utm_medium=email&utm_source=how-to-create-a-blog-that-boosts-your-career-course). I have been reading his blog for some time, but it was just recently I noticed he has an e-mail course on blogging, for free.\n\nI am not really a fan of e-mail courses. However the course had gotten good reviews, and as his blog is well written I gave the course a shot. It is a three-week course, where you are sent two lectures each week. That means you have time to finish the assignments in each lecture.\n\nThe course covers basic topics, as how to set up a blog, choosing a subject for the blog and coming up with ideas for topics. It also gives some guidance on how to get traffic, and market your blog and yourself.\n\nIf you\u2019re considering starting (or like me, you have a blog and want to improve) I recommend trying this course. You can find it at [devcareerboost.com](http:\/\/devcareerboost.com\/blog-course\/?__s=cjqzh5jpeopvrnpk5b4e&utm_campaign=lesson-5-do-you-know-how-to-get-traffic-for-your-blog&utm_medium=email&utm_source=how-to-create-a-blog-that-boosts-your-career-course). It\u2019s free!\n\n\n","html":"<p>After a while, where I have been struggling to write, I realized I needed to do something to keep this blog up. Maybe it has been the lack of interaction, or maybe not seeing a decent amount of traffic. I started to look for sources, as to how I could improve my blogging skills, and hopefully reach more people.<\/p>\n<p><!--more--><\/p>\n<p>Some time ago I came across a guy named John Sonmez, which runs the blog <a href=\"http:\/\/simpleprogrammer.com\/?__s=cjqzh5jpeopvrnpk5b4e&#038;utm_campaign=lesson-5-do-you-know-how-to-get-traffic-for-your-blog&#038;utm_medium=email&#038;utm_source=how-to-create-a-blog-that-boosts-your-career-course\">Simple Programmer<\/a>. I have been reading his blog for some time, but it was just recently I noticed he has an e-mail course on blogging, for free.<\/p>\n<p>I am not really a fan of e-mail courses. However the course had gotten good reviews, and as his blog is well written I gave the course a shot. It is a three-week course, where you are sent two lectures each week. That means you have time to finish the assignments in each lecture. <\/p>\n<p>The course covers basic topics, as how to set up a blog, choosing a subject for the blog and coming up with ideas for topics. It also gives some guidance on how to get traffic, and market your blog and yourself.<\/p>\n<p>If you&#8217;re considering starting (or like me, you have a blog and want to improve) I recommend trying this course. You can find it at <a href=\"http:\/\/devcareerboost.com\/blog-course\/?__s=cjqzh5jpeopvrnpk5b4e&#038;utm_campaign=lesson-5-do-you-know-how-to-get-traffic-for-your-blog&#038;utm_medium=email&#038;utm_source=how-to-create-a-blog-that-boosts-your-career-course\">devcareerboost.com<\/a>. It&#8217;s free!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 29 Sep 2015 21:10:27 +0000","created_by":1,"updated_at":"Tue, 29 Sep 2015 21:10:27 +0000","updated_by":1,"published_at":"Tue, 29 Sep 2015 21:10:27 +0000","published_by":1},{"id":436,"title":"Cloud based back end service","slug":"cloud-based-back-end-service","markdown":"\nWhen working with mobile applications (or applications in general) there is often a need to store and retrieve data. For informational apps you could simply have a local database, with all data present. However when developing apps for smart phones (and tablets) you need to consider the size of the app. You don\u2019t want to store a lot of data, when the user might need only a subset of it. Naturally this is dependent on how much data you have to store, but for this post I\u2019ll focus on apps that stores a greater amount of data. I\u2019ll talk a bit about storing data in the cloud, my go-to back end service ([Parse](http:\/\/www.parse.com)) and I\u2019ll mention some of the other, big competitors in this field.\n\nCloud based storage has grown a lot over the last years, and more and more apps and services take advantage of the technology. One of the big advantages with cloud based storing is that data is easily available everywhere. By this I mean both in terms of location (everywhere where you can connect to the internet), and also in terms of different platforms. An app can be created for smart phones, tablets, desktop, web etc., and the data is available on all platforms. By using cross platform development you also get the added benefit of developing access to data once.\n\nOne of the biggest drawbacks of cloud storage is that you don\u2019t have the complete control over your data (unless you setup your own cloud service). This can be a problem, specially if you develop enterprise level applications, but also if you store a lot of personal data. I guess it all depends on whether or not you trust the service provider. They spend a lot of time convincing customers that they are safe, and I believe that if you use a serious provider that it is ok. Do spend some time considering this though when choosing a cloud service provider.\n\nCloud based back end services does not only provide storage. Several offers possibilities to schedule recurring tasks, using targeted push notifications and also add app analytics. Using a cloud based service it is simple to scale if you need to. I don\u2019t have much experience using the cloud, but I used it for my app [Parker Gratis](http:\/\/www.parkergratis.no), where users can add entries, and fetch data based on location. For this I used Parse, which I will also be using for my next app.\n\nParse have three main areas they focus on, which is Core, Push and Analytics.\n\nCore is where you store and retrieve data. This is where you schedule background jobs and where you can manage your global app settings with Config.\n\nWith Push you can increase user engagement (at least that\u2019s their selling point!), by sending push notifications across devices and platforms.\n\nAnalytics is a great feature, where you can track events or data points in your app in real time. This is brilliant to understand how users interact with your app, and to analyze crashes.\n\nParse sets out to minimize the time you use for infrastructure work, and maximize the time you spend on user experience. They have SDKs for a wide variety of languages, and they have starter projects in cases where you start a new project. I have leveraged these possibilities to create cross platform applications using Xamarin with C# and .NET, and also web based application using HTML and JavaScript. Other languages include PHP, Objective-C, Swift and Java. A new SDK they recently added, which is highly relevant today, is for IoT using Embedded C. The pricing model is also fair. You have a certain limit for free, and when\/if the need to upscale comes you pay for what you need, on a monthly basis.\n\n**Note! I have no affiliation to Parse, I just like their service.**\n\nThere are plenty of other cloud services on the market as well. Another I have tried is [Microsoft Azure](http:\/\/www.azure.com). They offer many products on the side of storage and analytics. Amongst others I want to mention virtual machines, CDN (Content Delivery Network), media services and load balancing. Another big one is [Google Cloud Platform](https:\/\/cloud.google.com\/), which also seems to have some nice features as well. The last I want to mention is [Amazon Web Services](https:\/\/aws.amazon.com\/), which I think was quite early with cloud based services. They offer many products, and might be worth looking into.\n\nThere\u2019s a lot I haven\u2019t covered in regards to cloud services, but I hope this can spark an interest. Possibly you are already using cloud services, in which case I would like to know more on how you use it. And please do share other providers if you know of any.\n\n\n","html":"<p>When working with mobile applications (or applications in general) there is often a need to store and retrieve data. For informational apps you could simply have a local database, with all data present. However when developing apps for smart phones (and tablets) you need to consider the size of the app. You don&#8217;t want to store a lot of data, when the user might need only a subset of it. Naturally this is dependent on how much data you have to store, but for this post I&#8217;ll focus on apps that stores a greater amount of data. I&#8217;ll talk a bit about storing data in the cloud, my go-to back end service (<a href=\"http:\/\/www.parse.com\" target=\"_blank\">Parse<\/a>) and I&#8217;ll mention some of the other, big competitors in this field.<\/p>\n<p><!--more--><\/p>\n<p>Cloud based storage has grown a lot over the last years, and more and more apps and services take advantage of the technology. One of the big advantages with cloud based storing is that data is easily available everywhere. By this I mean both in terms of location (everywhere where you can connect to the internet), and also in terms of different platforms. An app can be created for smart phones, tablets, desktop, web etc., and the data is available on all platforms. By using cross platform development you also get the added benefit of developing access to data once.<\/p>\n<p>One of the biggest drawbacks of cloud storage is that you don&#8217;t have the complete control over your data (unless you setup your own cloud service). This can be a problem, specially if you develop enterprise level applications, but also if you store a lot of personal data. I guess it all depends on whether or not you trust the service provider. They spend a lot of time convincing customers that they are safe, and I believe that if you use a serious provider that it is ok. Do spend some time considering this though when choosing a cloud service provider.<\/p>\n<p>Cloud based back end services does not only provide storage. Several offers possibilities to schedule recurring tasks, using targeted push notifications and also add app analytics. Using a cloud based service it is simple to scale if you need to. I don&#8217;t have much experience using the cloud, but I used it for my app <a href=\"http:\/\/www.parkergratis.no\" target=\"_blank\">Parker Gratis<\/a>, where users can add entries, and fetch data based on location. For this I used Parse, which I will also be using for my next app.<\/p>\n<p>Parse have three main areas they focus on, which is Core, Push and Analytics.<\/p>\n<p>Core is where you store and retrieve data. This is where you schedule background jobs and where you can manage your global app settings with Config. <\/p>\n<p>With Push you can increase user engagement (at least that&#8217;s their selling point!), by sending push notifications across devices and platforms. <\/p>\n<p>Analytics is a great feature, where you can track events or data points in your app in real time. This is brilliant to understand how users interact with your app, and to analyze crashes.<\/p>\n<p>Parse sets out to minimize the time you use for infrastructure work, and maximize the time you spend on user experience. They have SDKs for a wide variety of languages, and they have starter projects in cases where you start a new project. I have leveraged these possibilities to create cross platform applications using Xamarin with C# and .NET, and also web based application using HTML and JavaScript. Other languages include PHP, Objective-C, Swift and Java. A new SDK they recently added, which is highly relevant today, is for IoT using Embedded C. The pricing model is also fair. You have a certain limit for free, and when\/if the need to upscale comes you pay for what you need, on a monthly basis.<\/p>\n<p><strong>Note! I have no affiliation to Parse, I just like their service.<\/strong><\/p>\n<p>There are plenty of other cloud services on the market as well. Another I have tried is <a href=\"http:\/\/www.azure.com\" target=\"_blank\">Microsoft Azure<\/a>. They offer many products on the side of storage and analytics. Amongst others I want to mention virtual machines, CDN (Content Delivery Network), media services and load balancing. Another big one is <a href=\"https:\/\/cloud.google.com\/\" target=\"_blank\">Google Cloud Platform<\/a>, which also seems to have some nice features as well. The last I want to mention is <a href=\"https:\/\/aws.amazon.com\/\" target=\"_blank\">Amazon Web Services<\/a>, which I think was quite early with cloud based services. They offer many products, and might be worth looking into.<\/p>\n<p>There&#8217;s a lot I haven&#8217;t covered in regards to cloud services, but I hope this can spark an interest. Possibly you are already using cloud services, in which case I would like to know more on how you use it. And please do share other providers if you know of any.<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/10\/cloud-computing-11299605484syQ.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 05 Oct 2015 20:15:24 +0000","created_by":1,"updated_at":"Mon, 05 Oct 2015 20:23:05 +0000","updated_by":1,"published_at":"Mon, 05 Oct 2015 20:15:24 +0000","published_by":1},{"id":452,"title":"XMLRPC and Windows Live Writer","slug":"xmlrpc-and-windows-live-writer","markdown":"\nAt the time of writing this blog post, I am flying home from London. Me and my SO have visited London at least once a year the last few years, so it has become a tradition. This year we had a shorter weekend trip, primarily to go see Hamlet. It was fun trying something new, as we haven\u2019t seen a theater play before, but that is not why I\u2019m writing this post.\n\nWhen I\u2019m not at my primary computer, and can use the browser to blog, I like to use Windows Live Writer. I find it to be a great tool, with some nice features, and it is also easy to setup with a WordPress blog. When WordPress was updated, a few updates ago, Windows Live Writer stopped working. More precisely, I were not able to connect to my blog, not able to load any blog posts and not able to save offline drafts to my blog.\n\nWindows Live Writer was complaining about not finding or not being able to access xmlrpc.php. This is a file that makes it possible to blog remotely (which is what we do when using a tool such as Windows Live Writer). I did some research on this, but there wasn\u2019t too much regarding this. At first, all I could find was guides stating that remote blogging could be enable from the WordPress settings, however recent updates from WordPress had that turned on by default, with no options to turn it off.\n\nFurther investigation led me to a forum post (on the WordPress support forum) describing this exact issue, with a possible solution. The solution is quite easy, you just have to rename the file in question (xmlrpc.php), perhaps by adding a pre- or postfix to it, and then update the address in Windows Live Writer (or other blog tools you might be using). So for instance you could call it \u201cwp-xmlrpc.php\u201d, and update the settings with that name, which should work.\n\nI should mention that this solution worked for me, however I am hosting my blog at a web host, and not at WordPress.com, so I am not sure whether this is an issue there and if so, if this is a fix that is possible. One explanation on why I could be seeing this issue is that my web host might be blocking xmlrpc.php, since there has been a lot of brute force attacks on that file in general. I might have to ask my web host ![Smilefjes](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/10\/wlEmoticon-smile.png?w=1090)\n\nAnyway, some considerations should be taken when using remote blogging, and renaming this file. As Wordfence describes in [this](https:\/\/www.wordfence.com\/blog\/2015\/10\/should-you-disable-xml-rpc-on-wordpress\/) blog post, there have been a lot of brute force attacks aiming for this file lately, and as such, you should take action to make sure your [WordPress installation is secure](http:\/\/leiflarsen.org\/2015\/securing-your-wordpress-installation).\n\n\n","html":"<p>At the time of writing this blog post, I am flying home from London. Me and my SO have visited London at least once a year the last few years, so it has become a tradition. This year we had a shorter weekend trip, primarily to go see Hamlet. It was fun trying something new, as we haven\u2019t seen a theater play before, but that is not why I\u2019m writing this post.<\/p>\n<p>When I\u2019m not at my primary computer, and can use the browser to blog, I like to use Windows Live Writer. I find it to be a great tool, with some nice features, and it is also easy to setup with a WordPress blog. When WordPress was updated, a few updates ago, Windows Live Writer stopped working. More precisely, I were not able to connect to my blog, not able to load any blog posts and not able to save offline drafts to my blog. <\/p>\n<p><!--more--><\/p>\n<p>Windows Live Writer was complaining about not finding or not being able to access xmlrpc.php. This is a file that makes it possible to blog remotely (which is what we do when using a tool such as Windows Live Writer). I did some research on this, but there wasn\u2019t too much regarding this. At first, all I could find was guides stating that remote blogging could be enable from the WordPress settings, however recent updates from WordPress had that turned on by default, with no options to turn it off. <\/p>\n<p>Further investigation led me to a forum post (on the WordPress support forum) describing this exact issue, with a possible solution. The solution is quite easy, you just have to rename the file in question (xmlrpc.php), perhaps by adding a pre- or postfix to it, and then update the address in Windows Live Writer (or other blog tools you might be using). So for instance you could call it \u201cwp-xmlrpc.php\u201d, and update the settings with that name, which should work. <\/p>\n<p>I should mention that this solution worked for me, however I am hosting my blog at a web host, and not at WordPress.com, so I am not sure whether this is an issue there and if so, if this is a fix that is possible. One explanation on why I could be seeing this issue is that my web host might be blocking xmlrpc.php, since there has been a lot of brute force attacks on that file in general. I might have to ask my web host <img class=\"wlEmoticon wlEmoticon-smile\" style=\"border-top-style: none; border-left-style: none; border-bottom-style: none; border-right-style: none\" alt=\"Smilefjes\" src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/10\/wlEmoticon-smile.png?w=1090\" data-recalc-dims=\"1\"><\/p>\n<p>Anyway, some considerations should be taken when using remote blogging, and renaming this file. As Wordfence describes in <a href=\"https:\/\/www.wordfence.com\/blog\/2015\/10\/should-you-disable-xml-rpc-on-wordpress\/\" target=\"_blank\">this<\/a> blog post, there have been a lot of brute force attacks aiming for this file lately, and as such, you should take action to make sure your <a href=\"http:\/\/leiflarsen.org\/2015\/securing-your-wordpress-installation\" target=\"_blank\">WordPress installation is secure<\/a>. <\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 19 Oct 2015 18:42:29 +0000","created_by":1,"updated_at":"Mon, 19 Oct 2015 18:53:15 +0000","updated_by":1,"published_at":"Mon, 19 Oct 2015 18:42:29 +0000","published_by":1},{"id":464,"title":"Essential .NET 4.5 with C#","slug":"essential-net-4-5-with-c","markdown":"\nLast week I attended a course, called \u201cEssential .NET 4.5 with C#\u201d, in London. The course was hosted by [Developmentor](https:\/\/www.develop.com\/) (currently in the process of joining [Global Knowledge](http:\/\/www.globalknowledge.com\/)), and the course instructor was Ron Sumida.\n\nThe course is aimed at people who is starting with C# and .Net, after a year or so, of experience with Java or C++. I don\u2019t have that experience, but I have been working with .Net at my job for the last half year, and before that a few months on my own time. I still thought the course seemed right for me, as I am self-taught in the world of .Net, and I was not disappointed.\n\nEssential .NET 4.5 with C# covers all the topics any .Net developer should know. One thing I liked in particular was that it didn\u2019t just show how to do different things, but it went under the hood. We got to see how different features worked beneath the cover, which helps understanding why you would use such and such, as well as decide on what to use when. Seeing as I have worked with .Net I found myself realizing why certain aspects of code I have worked with is written in certain ways.\n\nLike I mentioned we covered a lot of topics. Some of the topics I found interesting was about threading, delegates & events, linq and reflection. These were the ones I needed to understand better, and I can definitely say I\u2019m better equipped to work with these features now (although like with everything else it needs practice). The first module we covered were \u201cArchitecture\u201d, which covered the internals of .Net and C#. Basically how to compile, how to reference libraries, how the compiler works etc. On the last day we choose to go off topic the last few hours. Three of the participants had to leave, and the rest of us decided to see some of the basics of AngularJS. Although not something I had planned to look into, it did trigger some interest, so I might have to learn some more of it.\n\nIn total the course lasted 5 days, so it was a lot to cover. There was also supposed to be lab assignments in between all the modules, however for a lot of the topics we just didn\u2019t have time to do them all in class. We were only 5 people physically in class, and one remote from USA (and I\u2019m really glad I was not in his shoes, attending the course at 3 AM his time). I found this to be rather nice, as we all got to ask questions we had and we had several good discussions, both in class and in the breaks.\n\nRon Sumida was great as an instructor, you could tell he was passionate about teaching and the technology. He is really experienced, and knows what he\u2019s talking about, as you can read from Developmentors instructor page:\n\n> Dr. Sumida is one of the first instructors at DevelopMentor, and has been working with Microsoft technologies for 20 years. He began his Windows software development career doing user interface programming in the Win16 API on Windows 3.1, continued through the Win32 era working with both user interfaces and operating system services, and then spent five years working with COM. For the last 10 years, he has been working exclusively with .NET related technologies.\n\nAll in all I\u2019m quite happy with the course, and I am really glad I got to attend it. If you are in a position where you have worked some with .Net (or Java\/C++), and need some more formal training, I can recommend this course!\n\n\n","html":"<p>Last week I attended a course, called &#8220;Essential .NET 4.5 with C#&#8221;, in London. The course was hosted by <a href=\"https:\/\/www.develop.com\/\" target=\"_blank\">Developmentor<\/a> (currently in the process of joining <a href=\"http:\/\/www.globalknowledge.com\/\" target=\"_blank\">Global Knowledge<\/a>), and the course instructor was Ron Sumida. <\/p>\n<p><!--more--><\/p>\n<p>The course is aimed at people who is starting with C# and .Net, after a year or so, of experience with Java or C++. I don&#8217;t have that experience, but I have been working with .Net at my job for the last half year, and before that a few months on my own time. I still thought the course seemed right for me, as I am self-taught in the world of .Net, and I was not disappointed. <\/p>\n<p>Essential .NET 4.5 with C# covers all the topics any .Net developer should know. One thing I liked in particular was that it didn&#8217;t just show how to do different things, but it went under the hood. We got to see how different features worked beneath the cover, which helps understanding why you would use such and such, as well as decide on what to use when. Seeing as I have worked with .Net I found myself realizing why certain aspects of code I have worked with is written in certain ways. <\/p>\n<p>Like I mentioned we covered a lot of topics. Some of the topics I found interesting was about threading, delegates &#038; events, linq and reflection. These were the ones I needed to understand better, and I can definitely say I&#8217;m better equipped to work with these features now (although like with everything else it needs practice). The first module we covered were &#8220;Architecture&#8221;, which covered the internals of .Net and C#. Basically how to compile, how to reference libraries, how the compiler works etc. On the last day we choose to go off topic the last few hours. Three of the participants had to leave, and the rest of us decided to see some of the basics of AngularJS. Although not something I had planned to look into, it did trigger some interest, so I might have to learn some more of it.<\/p>\n<p>In total the course lasted 5 days, so it was a lot to cover. There was also supposed to be lab assignments in between all the modules, however for a lot of the topics we just didn&#8217;t have time to do them all in class. We were only 5 people physically in class, and one remote from USA (and I&#8217;m really glad I was not in his shoes, attending the course at 3 AM his time). I found this to be rather nice, as we all got to ask questions we had and we had several good discussions, both in class and in the breaks.<\/p>\n<p>Ron Sumida was great as an instructor, you could tell he was passionate about teaching and the technology. He is really experienced, and knows what he&#8217;s talking about, as you can read from Developmentors instructor page:<\/p>\n<blockquote><p>Dr. Sumida is one of the first instructors at DevelopMentor, and has been working with Microsoft technologies for 20 years. He began his Windows software development career doing user interface programming in the Win16 API on Windows 3.1, continued through the Win32 era working with both user interfaces and operating system services, and then spent five years working with COM. For the last 10 years, he has been working exclusively with .NET related technologies.\n<\/p><\/blockquote>\n<p>All in all I&#8217;m quite happy with the course, and I am really glad I got to attend it. If you are in a position where you have worked some with .Net (or Java\/C++), and need some more formal training, I can recommend this course!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/11\/Microsoft_.NET_Framework_v4.5_logo.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 09 Nov 2015 20:27:33 +0000","created_by":1,"updated_at":"Mon, 09 Nov 2015 20:28:12 +0000","updated_by":1,"published_at":"Mon, 09 Nov 2015 20:27:33 +0000","published_by":1},{"id":473,"title":"Time management and productivity tools","slug":"time-management-and-productivity-tools","markdown":"\nAs anyone probably can relate to, time is valuable. There is only 24 hours in a day, and in that time you need to sleep, eat, work, etc. Over the years I have tried several different tools to optimize the way I spend every day, and to make my everyday life as productive as possible. What works for me might not work for you, but I want to share some of the tools I use, and talk a bit about how I make sure I get the most out of every day.\n\nA typical day for me starts at around 6 (except weekends, where I do need about two hours more of sleep). I get ready for work and have some breakfast while reading the latest news. At around 7 I leave for the train commute to work, where I read books. The commute is where I manage to fit in most of the reading I do, in total about one hour each day. After 8 hours of work, I\u2019m back home around 17.00. Seeing as I need 7-8 hours of sleep, there is about 5-6 hours left of the day, where I can work on my personal projects.\n\nThat is not the whole truth though. I have a girlfriend I like to spend time with, a couple of times a week I go to the gym (two more times in the weekend, which I don\u2019t account for here), so in reality it is more like 2-3 hours of time left to work with my own projects. For quite a while I struggled to finish tasks, however a few months back I came across a blog post mentioning the Pomodoro technique. Basically this is a technique where you list your tasks, then you choose one and work for it for 25 minutes. When the time is up, you take a 5-minute break, and then continue (either with a new task if you finished the previous one, or the same one if you\u2019re not finished). This technique has made my life much easier, as I manage to stay focused on one task until its done. You can read more on the Pomodoro technique on [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Pomodoro_Technique).\n\nA tool I have found that takes advantage of the Pomodoro technique is one called [KanbanFlow](http:\/\/kanbanflow.com). Kanban is basically a scheduling method, and the way I use it is as follows. I have created a board with columns for each weekday, as well as today, next week, completed and later. At the end of a week I spend some time planning the next week, where I will fill in tasks for each day, and set an estimated time to complete each task. Each day I will put tasks from the current day into the \u201ctoday\u201d column, and naturally when I finish a task I move it to the \u201ccompleted\u201d column. If I come up with new tasks which can be done next week, I guess you can see where they are placed. Tasks I don\u2019t need to complete the current or next week I place in the \u201clater\u201d column. How does all this relate to the Pomodoro technique?\n\nWell, I have 4 color codes; 1 Pomodoro, 2 Pomodoro, 3 Pomodoro and > 3 Pomodoro, where 1 Pomodoro is 25 minutes, 2 is 50 minutes etc. I try to estimate the time it will take to finish a task, in terms of pomodoros. KanbanFlow have a nice timer function, which defaults to 25 minutes, so you can choose a task and start the timer. This way you also have control over how long time you spent on all tasks, which is benefitial in several ways. One thing I have learned all the time I\u2019ve used this is that I need to improve my estimation skills. So far I\u2019m not to worried about this, since I know I will improve with more experience. I got the idea to use this way of planning my week by John Sonmez, from [Simple Programmer](http:\/\/simpleprogrammer.com\/2014\/10\/09\/plan-week\/).\n\nI have other productivity tools I use as well. I think the most important tool I have is [Evernote](http:\/\/evernote.com). I use Evernote to take notes of any idea I might have, and I use the browser plugin to note web sites I need to remember later. I also keep track of tasks I haven\u2019t put into KanbanFlow yet, mostly bigger tasks I haven\u2019t split up into smaller pieces yet. Another tool for notes is [WorkFlowy](http:\/\/workflowy.com), which I use to keep track of books in my reading list, as well as blog topics I have planned. For these kind of lists I find WorkFlowy to be better than Evernote, as it is very simplistic.\n\nPreviously I used Trello, mostly in the same way I use KanbanFlow, but I really didn\u2019t manage to use it effectively enough. Also, in my opinion, KanbanFlow is a tad bit better, due to the fact that it naturally works so great with the Pomodoro technique. I have also used OneNote for note taking, but again, I feel Evernote have some features that makes it better. There is several other tools I have tried, but the ones I\u2019m using now is the ones I have gotten most out of.\n\nNow I\u2019m interested in learning more on how you manage your days? What kind of tools is essential to you daily life?\n\n\n","html":"<p>As anyone probably can relate to, time is valuable. There is only 24 hours in a day, and in that time you need to sleep, eat, work, etc. Over the years I have tried several different tools to optimize the way I spend every day, and to make my everyday life as productive as possible. What works for me might not work for you, but I want to share some of the tools I use, and talk a bit about how I make sure I get the most out of every day.<\/p>\n<p><!--more--><\/p>\n<p>A typical day for me starts at around 6 (except weekends, where I do need about two hours more of sleep). I get ready for work and have some breakfast while reading the latest news. At around 7 I leave for the train commute to work, where I read books. The commute is where I manage to fit in most of the reading I do, in total about one hour each day. After 8 hours of work, I&#8217;m back home around 17.00. Seeing as I need 7-8 hours of sleep, there is about 5-6 hours left of the day, where I can work on my personal projects. <\/p>\n<p>That is not the whole truth though. I have a girlfriend I like to spend time with, a couple of times a week I go to the gym (two more times in the weekend, which I don&#8217;t account for here), so in reality it is more like 2-3 hours of time left to work with my own projects. For quite a while I struggled to finish tasks, however a few months back I came across a blog post mentioning the Pomodoro technique. Basically this is a technique where you list your tasks, then you choose one and work for it for 25 minutes. When the time is up, you take a 5-minute break, and then continue (either with a new task if you finished the previous one, or the same one if you&#8217;re not finished). This technique has made my life much easier, as I manage to stay focused on one task until its done. You can read more on the Pomodoro technique on <a href=\"https:\/\/en.wikipedia.org\/wiki\/Pomodoro_Technique\" target=\"_blank\">Wikipedia<\/a>.<\/p>\n<p>A tool I have found that takes advantage of the Pomodoro technique is one called <a href=\"http:\/\/kanbanflow.com\" target=\"_blank\">KanbanFlow<\/a>. Kanban is basically a scheduling method, and the way I use it is as follows. I have created a board with columns for each weekday, as well as today, next week, completed and later. At the end of a week I spend some time planning the next week, where I will fill in tasks for each day, and set an estimated time to complete each task. Each day I will put tasks from the current day into the &#8220;today&#8221; column, and naturally when I finish a task I move it to the &#8220;completed&#8221; column. If I come up with new tasks which can be done next week, I guess you can see where they are placed. Tasks I don&#8217;t need to complete the current or next week I place in the &#8220;later&#8221; column. How does all this relate to the Pomodoro technique? <\/p>\n<p>Well, I have 4 color codes; 1 Pomodoro, 2 Pomodoro, 3 Pomodoro and > 3 Pomodoro, where 1 Pomodoro is 25 minutes, 2 is 50 minutes etc. I try to estimate the time it will take to finish a task, in terms of pomodoros. KanbanFlow have a nice timer function, which defaults to 25 minutes, so you can choose a task and start the timer. This way you also have control over how long time you spent on all tasks, which is benefitial in several ways. One thing I have learned all the time I&#8217;ve used this is that I need to improve my estimation skills. So far I&#8217;m not to worried about this, since I know I will improve with more experience. I got the idea to use this way of planning my week by John Sonmez, from <a href=\"http:\/\/simpleprogrammer.com\/2014\/10\/09\/plan-week\/\" target=\"_blank\">Simple Programmer<\/a>.<\/p>\n<p>I have other productivity tools I use as well. I think the most important tool I have is <a href=\"http:\/\/evernote.com\" target=\"_blank\">Evernote<\/a>. I use Evernote to take notes of any idea I might have, and I use the browser plugin to note web sites I need to remember later. I also keep track of tasks I haven&#8217;t put into KanbanFlow yet, mostly bigger tasks I haven&#8217;t split up into smaller pieces yet. Another tool for notes is <a href=\"http:\/\/workflowy.com\" target=\"_blank\">WorkFlowy<\/a>, which I use to keep track of books in my reading list, as well as blog topics I have planned. For these kind of lists I find WorkFlowy to be better than Evernote, as it is very simplistic. <\/p>\n<p>Previously I used Trello, mostly in the same way I use KanbanFlow, but I really didn&#8217;t manage to use it effectively enough. Also, in my opinion, KanbanFlow is a tad bit better, due to the fact that it naturally works so great with the Pomodoro technique. I have also used OneNote for note taking, but again, I feel Evernote have some features that makes it better. There is several other tools I have tried, but the ones I&#8217;m using now is the ones I have gotten most out of.<\/p>\n<p>Now I&#8217;m interested in learning more on how you manage your days? What kind of tools is essential to you daily life?<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/11\/negativespace-25.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 16 Nov 2015 20:57:51 +0000","created_by":1,"updated_at":"Mon, 16 Nov 2015 20:57:51 +0000","updated_by":1,"published_at":"Mon, 16 Nov 2015 20:57:51 +0000","published_by":1},{"id":470,"title":"Advent Calendar","slug":"advent-calendar","markdown":"\nThis year I have decided to create my own advent calendar on the blog. I see this an opportunity to explore some new programming languages, and as such my advent calendar will be called \u201c24 days of Hello World\u201d. I will post a simple \u201cHello World\u201d in a new language every day.\n\nIn addition to some code example, I will write a bit on the compilers, some advantages and disadvantages, and also typical uses of the particular language. I will not name any of the languages now, as that will take away some of the surprise.\n\nTune in from tomorrow, for the first day of advent!\n\n\n","html":"<p>This year I have decided to create my own advent calendar on the blog. I see this an opportunity to explore some new programming languages, and as such my advent calendar will be called &#8220;24 days of Hello World&#8221;. I will post a simple &#8220;Hello World&#8221; in a new language every day. <\/p>\n<p>In addition to some code example, I will write a bit on the compilers, some advantages and disadvantages, and also typical uses of the particular language. I will not name any of the languages now, as that will take away some of the surprise.<\/p>\n<p>Tune in from tomorrow, for the first day of advent!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 30 Nov 2015 18:00:11 +0000","created_by":1,"updated_at":"Sat, 14 Nov 2015 12:27:44 +0000","updated_by":1,"published_at":"Mon, 30 Nov 2015 18:00:11 +0000","published_by":1},{"id":486,"title":"24 Days of Hello World - C#","slug":"24-days-of-hello-world-c","markdown":"\nToday marks the first day of the advent of 2015, and it\u2019s time to open the first hatch of the calendar, 24 Days of Hello World. In this first post I will show of my primary language of choice, C#.\n\nA quick note on my setup. For all the posts in this series I will be run each particular \u201cHello World\u201d from a Windows 10 machine. The baseline is a clean machine, with Notepad++ installed, as well as Mozilla Firefox, not much more (except the usual stuff that comes with Windows).\n\n**History**  \n C# first appeared in 2000. Anders Hejlsberg is the principal designer and lead architect at Microsoft, and have told that flaws in other major programming languages drove the fundamentals of the Common Language Runtime, which in turn drove the design of C#.\n\nFrom the start C# was quite similar to Java, but over the years the two have evolved to become less similar. From C# 2.0, released in 2005, generics was introduced, and C# added major features to accommodate functional-style programming. This resulted in LINQ, lambda expressions, extension methods and anonymous types, released with C# 3.0. A great advantage with this is that programmers may use [closure](https:\/\/en.wikipedia.org\/wiki\/Closure_(computer_programming)) when needed in their applications.\n\nA new version of C# has typically been released every few years, typically with a major feature each time, and several minor features. With 4.0 dynamic binding was introduced, asynchronous methods was introduced in 5.0, and in the recently released 6.0 version there is compiler-as-a-service, exception filters and several other news.\n\n**Typical uses**  \n It is hard to narrow down some specifics in terms of typical uses, as C# is widely used. Everything from desktop applications, ASP.NET applications, games and mobile applications is possible to create using C#. Once you know it, and know of some of the tools to use, only your imagination limits you.\n\n**Example Hello World**  \n This is the simplest form of Hello World with C#. For C# programming I have installed Visual Studio 2015, thus using Microsofts implementation of the standard. Another option is to use Mono, an open-source solution, but I will not be covering that here. Event though I have Visual Studio installed, it is mostly to have the compiler available. Since this is supposed to be as simple as possible, I wrote this using Notepad++, and compiled it using the Developer Command Prompt for VS2015.\n\n using System; public class Hello World() { public static void Main() { Console.WriteLine(\"Hello, World!\"); } }\n\nSave this into a file called \u201cHelloWorld.cs\u201d and compile that with the following command:\n\ncsc HelloWorld.cs\n\nGiven that the previous command succeeded, you should be able to run the following:\n\nHelloWorld.exe\n\nWhich should print out \u201cHello, World!\u201d to the console.\n\nSo that was a short piece on C#. You can find more information on C#, and how to get started, [from Microsofts MSDN](https:\/\/msdn.microsoft.com\/en-us\/library\/a72418yk.aspx).\n\nCome back tomorrow to read the next hatch in 24 Days of Hello World!\n\n\n","html":"<p>Today marks the first day of the advent of 2015, and it&#8217;s time to open the first hatch of the calendar, 24 Days of Hello World. In this first post I will show of my primary language of choice, C#.<\/p>\n<p>A quick note on my setup. For all the posts in this series I will be run each particular &#8220;Hello World&#8221; from a Windows 10 machine. The baseline is a clean machine, with Notepad++ installed, as well as Mozilla Firefox, not much more (except the usual stuff that comes with Windows).<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><br \/>\nC# first appeared in 2000. Anders Hejlsberg is the principal designer and lead architect at Microsoft, and have told that flaws in other major programming languages drove the fundamentals of the Common Language Runtime, which in turn drove the design of C#. <\/p>\n<p>From the start C# was quite similar to Java, but over the years the two have evolved to become less similar. From C# 2.0, released in 2005, generics was introduced, and C# added major features to accommodate functional-style programming. This resulted in LINQ, lambda expressions, extension methods and anonymous types, released with C# 3.0. A great advantage with this is that programmers may use <a href=\"https:\/\/en.wikipedia.org\/wiki\/Closure_(computer_programming)\" target=\"_blank\">closure<\/a> when needed in their applications. <\/p>\n<p>A new version of C# has typically been released every few years, typically with a major feature each time, and several minor features. With 4.0 dynamic binding was introduced, asynchronous methods was introduced in 5.0, and in the recently released 6.0 version there is compiler-as-a-service, exception filters and several other news.<\/p>\n<p><strong>Typical uses<\/strong><br \/>\nIt is hard to narrow down some specifics in terms of typical uses, as C# is widely used. Everything from desktop applications, ASP.NET applications, games and mobile applications is possible to create using C#. Once you know it, and know of some of the tools to use, only your imagination limits you.<\/p>\n<p><strong>Example Hello World<\/strong><br \/>\nThis is the simplest form of Hello World with C#. For C# programming I have installed Visual Studio 2015, thus using Microsofts implementation of the standard. Another option is to use Mono, an open-source solution, but I will not be covering that here. Event though I have Visual Studio installed, it is mostly to have the compiler available. Since this is supposed to be as simple as possible, I wrote this using Notepad++, and compiled it using the Developer Command Prompt for VS2015.<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nusing System;\r\n\r\npublic class Hello World()\r\n{\r\n   public static void Main()\r\n   {\r\n      Console.WriteLine(&quot;Hello, World!&quot;);\r\n   }\r\n}\r\n<\/pre>\n<p>Save this into a file called &#8220;HelloWorld.cs&#8221; and compile that with the following command:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">csc HelloWorld.cs<\/pre>\n<p>Given that the previous command succeeded, you should be able to run the following:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">HelloWorld.exe<\/pre>\n<p>Which should print out &#8220;Hello, World!&#8221; to the console.<\/p>\n<p>So that was a short piece on C#. You can find more information on C#, and how to get started, <a href=\"https:\/\/msdn.microsoft.com\/en-us\/library\/a72418yk.aspx\" target=\"_blank\">from Microsofts MSDN<\/a>.<\/p>\n<p>Come back tomorrow to read the next hatch in 24 Days of Hello World!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/11\/C_Sharp_wordmark.svg_.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 01 Dec 2015 18:00:51 +0000","created_by":1,"updated_at":"Tue, 01 Dec 2015 06:33:53 +0000","updated_by":1,"published_at":"Tue, 01 Dec 2015 18:00:51 +0000","published_by":1},{"id":497,"title":"24 Days of Hello World - Java","slug":"24-days-hello-world-java","markdown":"\nFor this second day of 24 Days of Hello World it is natural to follow up the previous one, with a language mentioned \u2013 Java. Java is the language that is taught in many computer engineering\/science classes here in Norway, and like C#, is widely used all around the world. One of the great benefits with Java is that it follows the \u201cwrite once, run anywhere\u201d philosophy. This basically means that it is supported on any platform (given that they support Java).\n\n**History**\n\nJava was developed by James Gosling, and released in 1995. It was a core component in Sun Microsystems\u2019 Java platform. It is higher-level than C and C++, but it derives much of it syntax from these languages. Major browsers incorporated the ability to run Java applets, and so Java became very popular.\n\nFrom version 2 multiple configurations were introduced, so one could use Java with different platforms. These were for server environments, mobile environments, called Java EE and Java ME respectively, as well as the desktop version, called Java SE.\n\nEvery few years major releases of Java have been made, the last one being Java 8. As of 2015 this is the only one supported.\n\nAt first Java was released as a proprietary language, but in 2007 it was released under the [GNU General Public License](https:\/\/en.wikipedia.org\/wiki\/GNU_General_Public_License).\n\n**Typical uses**\n\nJava is typical used in Android apps, server apps at financial services industry, web applications (it is specially big in e-commerce), software tools (such as Eclipse, Netbeans IDE), trading applications, big data technologies and scientific applications.\n\nAs you can tell there is a wide variety of applications that takes advantage of Java, so it is definitely not a language to throw under the bus.\n\n**Example Hello World**\n\nFor the example I am again on Windows 10, using Notepad++. You need to install Java SE Development Kit (can be found [here](http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/jdk8-downloads-2133151.html), choose the applicable version for your system). This includes the Java Runtime Engine (libraries, Java Virtual Machine and other components to run a Java application), as well as developer components, such as compiler and debugger necessary to create applications.\n\nWhen it is installed, you want to make sure that the correct entries have been added to the PATH variable. Open a command line (as administrator) and input the following:\n\n path\n\nThis should list all the paths in the PATH variable. On my system the correct Java path was not originally available, so I had to manually add it. Find the path of the Java installation (in my case it was C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\bin), and add this to the path by entering the following into the command prompt:\n\n set path=%path%;PATH_TO_JAVA_SDK\n\nRun the path command again to verify that it\u2019s actually there.\n\nNext we want to write our Hello World application. That can be done like this:\n\n public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } }\n\nSave that into a file called \u201cHelloWorld.java\u201d and run the following to compile it:\n\n javac HelloWorld.java\n\nFollowed by\n\n java HelloWorld\n\nWhich should run the application (given there was no error during compilation), and output \u201cHello, World!\u201d.\n\nSo that is Java in a nutshell. Come back tomorrow for the next hatch in 24 Days of Hello World!\n\n\n","html":"<p>For this second day of 24 Days of Hello World it is natural to follow up the previous one, with a language mentioned &#8211; Java. Java is the language that is taught in many computer engineering\/science classes here in Norway, and like C#, is widely used all around the world. One of the great benefits with Java is that it follows the &#8220;write once, run anywhere&#8221; philosophy. This basically means that it is supported on any platform (given that they support Java).<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>Java was developed by James Gosling, and released in 1995. It was a core component in Sun Microsystems&#8217; Java platform. It is higher-level than C and C++, but it derives much of it syntax from these languages. Major browsers incorporated the ability to run Java applets, and so Java became very popular. <\/p>\n<p>From version 2 multiple configurations were introduced, so one could use Java with different platforms. These were for server environments, mobile environments, called Java EE and Java ME respectively, as well as the desktop version, called Java SE.<\/p>\n<p>Every few years major releases of Java have been made, the last one being Java 8. As of 2015 this is the only one supported.<\/p>\n<p>At first Java was released as a proprietary language, but in 2007 it was released under the <a href=\"https:\/\/en.wikipedia.org\/wiki\/GNU_General_Public_License\" target=\"_blank\">GNU General Public License<\/a>. <\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Java is typical used in Android apps, server apps at financial services industry, web applications (it is specially big in e-commerce), software tools (such as Eclipse, Netbeans IDE), trading applications, big data technologies and scientific applications.<\/p>\n<p>As you can tell there is a wide variety of applications that takes advantage of Java, so it is definitely not a language to throw under the bus. <\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>For the example I am again on Windows 10, using Notepad++. You need to install Java SE Development Kit (can be found <a href=\"http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/jdk8-downloads-2133151.html\" target=\"_blank\">here<\/a>, choose the applicable version for your system). This includes the Java Runtime Engine (libraries, Java Virtual Machine and other components to run a Java application), as well as developer components, such as compiler and debugger necessary to create applications.<\/p>\n<p>When it is installed, you want to make sure that the correct entries have been added to the PATH variable. Open a command line (as administrator) and input the following:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\npath\r\n<\/pre>\n<p>This should list all the paths in the PATH variable. On my system the correct Java path was not originally available, so I had to manually add it. Find the path of the Java installation (in my case it was C:\\Program Files (x86)\\Java\\jdk1.7.0_55\\bin), and add this to the path by entering the following into the command prompt:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nset path=%path%;PATH_TO_JAVA_SDK\r\n<\/pre>\n<p>Run the path command again to verify that it&#8217;s actually there.<\/p>\n<p>Next we want to write our Hello World application. That can be done like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\npublic class HelloWorld\r\n{\r\n   public static void main(String[] args)\r\n   {\r\n      System.out.println(&quot;Hello, World!&quot;);\r\n   }\r\n}\r\n<\/pre>\n<p>Save that into a file called &#8220;HelloWorld.java&#8221; and run the following to compile it:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\njavac HelloWorld.java\r\n<\/pre>\n<p>Followed by <\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\njava HelloWorld\r\n<\/pre>\n<p>Which should run the application (given there was no error during compilation), and output &#8220;Hello, World!&#8221;.<\/p>\n<p>So that is Java in a nutshell. Come back tomorrow for the next hatch in 24 Days of Hello World!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/Java.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Wed, 02 Dec 2015 18:00:02 +0000","created_by":1,"updated_at":"Tue, 01 Dec 2015 20:30:58 +0000","updated_by":1,"published_at":"Wed, 02 Dec 2015 18:00:02 +0000","published_by":1},{"id":509,"title":"24 Days of Hello World - Ruby","slug":"24-days-hello-world-ruby","markdown":"\nDay three of the advent calendar, 24 Days of Hello World. Today marks the first day of discussing a language I have not used before, so this is an exciting one! If you didn\u2019t understand so from the title, the language is Ruby.\n\nRuby is one of those languages I\u2019ve always wanted to take a deeper look at, but never had time or reasons to do so. I believe all I\u2019ve tried is the interactive ruby part, so I have never even looked at writing a class using Ruby. Hopefully I will get some time to explore it more at a later stage. Anyway, lets jump right in.\n\n**History**\n\nRuby is a general-purpose language, designed and developed by Yukihiro \u201cMatz\u201d Matsumoto. It was influenced by Perl, Smalltalk, Eiffel, Ada and Lisp. According to Matz he was interested in an object-oriented scripting language, but he didn\u2019t like Perl or Python. Therefore he decided to create his own language.\n\nThe first version was released late December in 1995, with the version number being 0.95. Features present in this version included object-oriented design, inheritance, mixins, iterators, closures, exception handling and garbage collection. Ruby first got some traction in Japan, and by 2000 it was more popular than Python. By 2002 its popularity in the rest of the world was increasing. By then version 1.6 was released.\n\nIn 2003 Ruby 1.8 was released, and it wasn\u2019t before 2013 before it was retired. In the meantime 1.9 had been released, which introduced significant changes, such as block local variables, per-string character encodings, new socket API. 1.8 was only partially compatible, which required many popular third-party gems to be rewritten.\n\nVersion 2.0 was released in 2013, and introduced method keyword arguments, a new method for extending a class, new API for lazy evaluation of Enumerables. This version is fully backward compatible with 1.9.3, with only 5 minor incompatibilities. The latest version of Ruby was released in late 2014, version 2.2. This includes bugfixes, library updates and removal of deprecated APIs.\n\n**Typical uses**\n\nLike I mentioned Ruby was designed as a general-purpose scripting language, and it supports a number of applications. You can find it used in web applications and servers, picture recognition engines, threaded database servers and low-level system utilities.\n\nThere are several reasons why Ruby is so popular and widely used. The syntax can be claimed to be simple and elegant, there is a complete standard library, and there is plenty of community based code, support and toolchains. The popular web framework Rails (Ruby on Rails) is also a part of the reason. Twitter used this framework from its very beginning until 2011.\n\n**Example Hello World**\n\nTo use Ruby you need to compile the source code, or do as I did, use the installer. You can find the installer for Windows [here](http:\/\/rubyinstaller.org\/downloads\/). I installed the latest version, 2.2.3. A quick note on the installation, I selected the option to have ruby be added to the path, so I don\u2019t have to worry about it later. Installation should be fairly quick, and to confirm it is properly installed, you can run the following command:\n\n ruby -v\n\nWhich should output the version number.\n\nNow over to the code part. Seeing as Ruby was made to be object oriented, I am going to use that way to solve this. There is an option to run the \u201cInteractive Ruby\u201d shell and output \u201cHello, World!\u201d that way, but it kind of defeats the purpose for this post.\n\nCreate a new file, and call it HelloWorld.rb. Make it look like this:\n\n class HelloWorld def sayHi puts \"Hello, World!\" end end hello = HelloWorld.new() hello.sayHi\n\nSave the file, and run the following commands, in a command prompt:\n\n ruby HelloWorld.rb\n\nAs always, this should output \u201cHello, World!\u201d.\n\nAs you can see from the example code, the syntax is more lenient than the previous languages we\u2019ve looked into. If I were to start with Ruby, I would definitely have some trouble getting used to this. I can however see that it may be quicker to write when you are used to the syntax. Maybe someone can shed some light at this?\n\nThat\u2019s it for this time, check back tomorrow for the next language in 24 Days of Hello World!\n\n\n","html":"<p>Day three of the advent calendar, 24 Days of Hello World. Today marks the first day of discussing a language I have not used before, so this is an exciting one! If you didn&#8217;t understand so from the title, the language is Ruby.<\/p>\n<p>Ruby is one of those languages I&#8217;ve always wanted to take a deeper look at, but never had time or reasons to do so. I believe all I&#8217;ve tried is the interactive ruby part, so I have never even looked at writing a class using Ruby. Hopefully I will get some time to explore it more at a later stage. Anyway, lets jump right in.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>Ruby is a general-purpose language, designed and developed by Yukihiro &#8220;Matz&#8221; Matsumoto. It was influenced by Perl, Smalltalk, Eiffel, Ada and Lisp. According to Matz he was interested in an object-oriented scripting language, but he didn&#8217;t like Perl or Python. Therefore he decided to create his own language. <\/p>\n<p>The first version was released late December in 1995, with the version number being 0.95. Features present in this version included object-oriented design, inheritance, mixins, iterators, closures, exception handling and garbage collection. Ruby first got some traction in Japan, and by 2000 it was more popular than Python. By 2002 its popularity in the rest of the world was increasing. By then version 1.6 was released. <\/p>\n<p>In 2003 Ruby 1.8 was released, and it wasn&#8217;t before 2013 before it was retired. In the meantime 1.9 had been released, which introduced significant changes, such as block local variables, per-string character encodings, new socket API. 1.8 was only partially compatible, which required many popular third-party gems to be rewritten.<\/p>\n<p>Version 2.0 was released in 2013, and introduced method keyword arguments, a new method for extending a class, new API for lazy evaluation of Enumerables. This version is fully backward compatible with 1.9.3, with only 5 minor incompatibilities. The latest version of Ruby was released in late 2014, version 2.2. This includes bugfixes, library updates and removal of deprecated APIs. <\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Like I mentioned Ruby was designed as a general-purpose scripting language, and it supports a number of applications. You can find it used in web applications and servers, picture recognition engines, threaded database servers and low-level system utilities. <\/p>\n<p>There are several reasons why Ruby is so popular and widely used. The syntax can be claimed to be simple and elegant, there is a complete standard library, and there is plenty of community based code, support and toolchains. The popular web framework Rails (Ruby on Rails) is also a part of the reason. Twitter used this framework from its very beginning until 2011.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>To use Ruby you need to compile the source code, or do as I did, use the installer. You can find the installer for Windows <a href=\"http:\/\/rubyinstaller.org\/downloads\/\" target=\"_blank\">here<\/a>. I installed the latest version, 2.2.3. A quick note on the installation, I selected the option to have ruby be added to the path, so I don&#8217;t have to worry about it later. Installation should be fairly quick, and to confirm it is properly installed, you can run the following command:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nruby -v\r\n<\/pre>\n<p>Which should output the version number. <\/p>\n<p>Now over to the code part. Seeing as Ruby was made to be object oriented, I am going to use that way to solve this. There is an option to run the &#8220;Interactive Ruby&#8221; shell and output &#8220;Hello, World!&#8221; that way, but it kind of defeats the purpose for this post.<\/p>\n<p>Create a new file, and call it HelloWorld.rb. Make it look like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nclass HelloWorld\r\n   def sayHi\r\n      puts &quot;Hello, World!&quot;\r\n   end\r\nend\r\n\r\nhello = HelloWorld.new()\r\nhello.sayHi\r\n<\/pre>\n<p>Save the file, and run the following commands, in a command prompt:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nruby HelloWorld.rb\r\n<\/pre>\n<p>As always, this should output &#8220;Hello, World!&#8221;. <\/p>\n<p>As you can see from the example code, the syntax is more lenient than the previous languages we&#8217;ve looked into. If I were to start with Ruby, I would definitely have some trouble getting used to this. I can however see that it may be quicker to write when you are used to the syntax. Maybe someone can shed some light at this?<\/p>\n<p>That&#8217;s it for this time, check back tomorrow for the next language in 24 Days of Hello World!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/ruby.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 03 Dec 2015 18:00:08 +0000","created_by":1,"updated_at":"Wed, 02 Dec 2015 20:00:18 +0000","updated_by":1,"published_at":"Thu, 03 Dec 2015 18:00:08 +0000","published_by":1},{"id":517,"title":"24 Days of Hello World - Erlang","slug":"24-days-of-hello-world-erlang","markdown":"\nIn this next post, in the 24 Days of Hello World series, I will look into a language that is older than me, Erlang. Erlang is a general-purpose language used to build massively scalable soft real-time systems.\n\nAs opposed to most languages language-level features for creating and managing processes, with the aim to simplify concurrent programming, is provided in Erlang. It removes the need of explicit locks by using message passing instead of shared variables.\n\n**History**\n\nThe history of Erlang starts back in 1986, when the first version was developed by Joe Armstrong, Robert Virding and Mike Williams. It was originally written as a proprietary language for Ericsson, but in 1998 it was released as open source.\n\nIt was designed to improve development of telephony applications. The initial version was influenced by a language called PLEX, and implemented in Prolog. Symmetric multiprocessing support was added to the runtime system in 2006.\n\n**Typical uses**\n\nAs stated in the intro, Erlang is used to build massively scalable soft real-time systems. Typical uses includes telecom, banking, e-commerce, computer telephony and instant messaging. These are systems were high availability is required, and supported by Erlang with its built-in concurrency, distribution and fault tolerance.\n\nA few places it is in use:\n\n10. Facebook \u2013 Used to power the backend of the chat service\n11. WhatsApp \u2013 Their messaging systems is built with Erlang\n12. Klarna \u2013 Electronic payment systems\n13. T-Mobile \u2013 Used for advanced call control services\nThe list could go on and on, as quite a number of companies uses Erlang. And as you can see, some big companies is included.\n\n**Example Hello World**\n\nSo to get into the example code. Again you will need to download either the source code, or the [installer](http:\/\/www.erlang.org\/download.html). I used the correct Windows installer, and installed it using default settings. The installation process takes some time to get through, but when its done you can verify that it worked by opening \u201cErlang\u201d from your start menu. This should open an application with a command prompt window.\n\nLets jump to the code:\n\n % hello world program -module(helloworld). -export([start\/0]). start() -> io:fwrite(\"Hello, World!\\n).\n\nSave that in a file called \u201chelloworld.erl\u201d. Note! The compiler (or language itself, I haven\u2019t really looked into it) is case sensitive, so be careful to name everything as its done above. I got some errors trying this for the first time.\n\nOpen a command prompt, and verify that the bin folder of Erlang is in the path. Browse to the location of the .erl file, and run the following command:\n\n erlc helloworld.erl\n\nFollowed by:\n\n erl -noshell -s helloworld start -s init stop\n\nThis should print out \u201cHello, World!\u201d as expected.\n\nMy first impression is that this is something totally different than what I\u2019ve seen before. Based on the usage described, it does seem like something it would be wise to at least consider to learn. Syntax wise, although new to me, it seems to be ok to understand what\u2019s going on. And even if it is a general-purpose language, I like the idea that has been designed for real-time systems, with requirements in regards to high availability.\n\nDo you have any experience with Erlang? Care to share?\n\nTomorrow will marked the 5th post in this series, and I sure hope you\u2019ll check back for that as well!\n\n\n","html":"<p>In this next post, in the 24 Days of Hello World series, I will look into a language that is older than me, Erlang. Erlang is a general-purpose language used to build massively scalable soft real-time systems.<\/p>\n<p>As opposed to most languages language-level features for creating and managing processes, with the aim to simplify concurrent programming, is provided in Erlang. It removes the need of explicit locks by using message passing instead of shared variables. <\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>The history of Erlang starts back in 1986, when the first version was developed by Joe Armstrong, Robert Virding and Mike Williams. It was originally written as a proprietary language for Ericsson, but in 1998 it was released as open source. <\/p>\n<p>It was designed to improve development of telephony applications. The initial version was influenced by a language called PLEX, and implemented in Prolog. Symmetric multiprocessing support was added to the runtime system in 2006. <\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>As stated in the intro, Erlang is used to build massively scalable soft real-time systems. Typical uses includes telecom, banking, e-commerce, computer telephony and instant messaging. These are systems were high availability is required, and supported by Erlang with its built-in concurrency, distribution and fault tolerance. <\/p>\n<p>A few places it is in use:<\/p>\n<li>Facebook &#8211; Used to power the backend of the chat service<\/li>\n<li>WhatsApp &#8211; Their messaging systems is built with Erlang<\/li>\n<li>Klarna &#8211; Electronic payment systems<\/li>\n<li>T-Mobile &#8211; Used for advanced call control services<\/li>\n<p>The list could go on and on, as quite a number of companies uses Erlang. And as you can see, some big companies is included.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>So to get into the example code. Again you will need to download either the source code, or the <a href=\"http:\/\/www.erlang.org\/download.html\" target=\"_blank\">installer<\/a>. I used the correct Windows installer, and installed it using default settings. The installation process takes some time to get through, but when its done you can verify that it worked by opening &#8220;Erlang&#8221; from your start menu. This should open an application with a command prompt window.<\/p>\n<p>Lets jump to the code:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n% hello world program\r\n-module(helloworld).\r\n-export([start\/0]).\r\n\r\nstart() -&gt;\r\n   io:fwrite(&quot;Hello, World!\\n).\r\n<\/pre>\n<p>Save that in a file called &#8220;helloworld.erl&#8221;. Note! The compiler (or language itself, I haven&#8217;t really looked into it) is case sensitive, so be careful to name everything as its done above. I got some errors trying this for the first time.<\/p>\n<p>Open a command prompt, and verify that the bin folder of Erlang is in the path. Browse to the location of the .erl file, and run the following command:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nerlc helloworld.erl\r\n<\/pre>\n<p>Followed by:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nerl -noshell -s helloworld start -s init stop\r\n<\/pre>\n<p>This should print out &#8220;Hello, World!&#8221; as expected.<\/p>\n<p>My first impression is that this is something totally different than what I&#8217;ve seen before. Based on the usage described, it does seem like something it would be wise to at least consider to learn. Syntax wise, although new to me, it seems to be ok to understand what&#8217;s going on. And even if it is a general-purpose language, I like the idea that has been designed for real-time systems, with requirements in regards to high availability.<\/p>\n<p>Do you have any experience with Erlang? Care to share?<\/p>\n<p>Tomorrow will marked the 5th post in this series, and I sure hope you&#8217;ll check back for that as well!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/Erlang_logo.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 04 Dec 2015 18:00:52 +0000","created_by":1,"updated_at":"Thu, 03 Dec 2015 18:41:06 +0000","updated_by":1,"published_at":"Fri, 04 Dec 2015 18:00:52 +0000","published_by":1},{"id":527,"title":"24 Days of Hello World - Perl","slug":"24-days-of-hello-world-perl","markdown":"\nIn the 5th day of 24 days of Hello World I will look into Perl. A language, which has a long history, but where the example itself will be rather short.\n\nPerl is a general-purpose language, designed for text manipulation. It is intended to be easy to use, efficient and complete, in other words practical, as opposed to elegant and minimal. It supports both procedural and object-oriented programming. As a beginner you would probably use procedural more, and object-oriented for third-party modules you may use.\n\n**History**\n\nPerl was developed in 1987 by Larry Wall. The original intention was to use it as a Unix scripting language to make report processing easier. Languages features are inspired and borrowed from languages such as C, shell script, AWK and sed. After version 1 was released in 1987 there was a rapid expansion over the next year. Version 2 was released in 1988, featuring better regular expression. Support for binary data streams were added in version 3, in 1989.\n\nPerl 4 had a lot of maintenance releases, until 1993, were the design of Perl 5 started. This new version was released in 1994. It included a rewrite of the interpreter, and added a bunch of new features. One of the more important one was the ability to use modules to extend the language, without modifying the interpreter. This meant developers could add new language features, without making the core unstable.\n\nSince its release version 5 has been developed, and is still being developed to this day. In 1995 Comprehensive Perl Archive Network (CPAN) was established to act as a repository for modules and the core itself. As of today it contains more than 150 775 modules. Very impressive!\n\nFrom 2000 64-bit support was supported, Unicode string representation and large file support was some of the major changes in the new version (5.6). From version 5.8 was released in 2008 there has been almost yearly releases of a new version, and today we\u2019re at version 5.22.\n\nThe interesting thing in the history, is the fact that we actually have a version called Perl 6. Version 5 and 6 are both separate languages in the Perl family. The design of version 6 was started on in 2000, and it\u2019s still being developed. A release candidate was released earlier this year. Version 6 is not intended to be backward compatible.\n\n**Typical uses**\n\nWhile originally designed for text manipulation, Perl has grown and are now in use for many other tasks as well. It is used for database utilities, games and multimedia, GUI development, multitasking and networking, Telnet, SSH and system administration as well as web\/CGI programming and web automation.\n\n**Example Hello World**\n\nFor the example we want to download the latest version of Perl 5. You can find the correct version for your system [here](https:\/\/www.perl.org\/get.html). Like always, I\u2019m doing this from a Windows 10 machine so I chose to download ActiveState Perl, as this is the one containing binaries.\n\nInstallation was quite quick, using all default values. When the installation is done, you can verify that it succeeded by opening a command line window, and run the command\n\n perl -v\n\nWhich should give you the currently installed version of Perl.\n\nNow, lets create a file, called \u201cHelloWorld.pl\u201d. In this file, enter the following:\n\n #!\/usr\/bin\/perl use strict; use warnings; print \"Hello, World!\";\n\nSave the file, and in a command prompt run the following:\n\n perl HelloWorld.pl\n\nWhich should print \u201cHello, World!\u201d.\n\nAs you can see the syntax is rather simple, but there are a few lines I would like mention. We could just have the \u201cprint\u201d line in our file, and the program would work just as expected. However, since Perl is a forgiving language, it is best practice to make it more robust to start all programs with the three lines at the top. They are there to catch common problems, where \u201cuse strict;\u201d will cause your program to stop when encountering a problem. \u201cuse warnings;\u201d will give a warning, but will let the code run.\n\nPersonally I find Perl a rather interesting as a language, but not one I would spend any time learning. At least now, as it doesn\u2019t align with my future goals.\n\n\n","html":"<p>In the 5th day of 24 days of Hello World I will look into Perl. A language, which has a long history, but where the example itself will be rather short. <\/p>\n<p>Perl is a general-purpose language, designed for text manipulation. It is intended to be easy to use, efficient and complete, in other words practical, as opposed to elegant and minimal. It supports both procedural and object-oriented programming. As a beginner you would probably use procedural more, and object-oriented for third-party modules you may use. <\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>Perl was developed in 1987 by Larry Wall. The original intention was to use it as a Unix scripting language to make report processing easier. Languages features are inspired and borrowed from languages such as C, shell script, AWK and sed. After version 1 was released in 1987 there was a rapid expansion over the next year. Version 2 was released in 1988, featuring better regular expression. Support for binary data streams were added in version 3, in 1989. <\/p>\n<p>Perl 4 had a lot of maintenance releases, until 1993, were the design of Perl 5 started. This new version was released in 1994. It included a rewrite of the interpreter, and added a bunch of new features. One of the more important one was the ability to use modules to extend the language, without modifying the interpreter. This meant developers could add new language features, without making the core unstable.<\/p>\n<p>Since its release version 5 has been developed, and is still being developed to this day. In 1995 Comprehensive Perl Archive Network (CPAN) was established to act as a repository for modules and the core itself. As of today it contains more than 150 775 modules. Very impressive! <\/p>\n<p>From 2000 64-bit support was supported, Unicode string representation and large file support was some of the major changes in the new version (5.6). From version 5.8 was released in 2008 there has been almost yearly releases of a new version, and today we&#8217;re at version 5.22.<\/p>\n<p>The interesting thing in the history, is the fact that we actually have a version called Perl 6. Version 5 and 6 are both separate languages in the Perl family. The design of version 6 was started on in 2000, and it&#8217;s still being developed. A release candidate was released earlier this year. Version 6 is not intended to be backward compatible. <\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>While originally designed for text manipulation, Perl has grown and are now in use for many other tasks as well. It is used for database utilities, games and multimedia, GUI development, multitasking and networking, Telnet, SSH and system administration as well as web\/CGI programming and web automation.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>For the example we want to download the latest version of Perl 5. You can find the correct version for your system <a href=\"https:\/\/www.perl.org\/get.html\" target=\"_blank\">here<\/a>. Like always, I&#8217;m doing this from a Windows 10 machine so I chose to download ActiveState Perl, as this is the one containing binaries.<\/p>\n<p>Installation was quite quick, using all default values. When the installation is done, you can verify that it succeeded by opening a command line window, and run the command <\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nperl -v\r\n<\/pre>\n<p>Which should give you the currently installed version of Perl.<\/p>\n<p>Now, lets create a file, called &#8220;HelloWorld.pl&#8221;. In this file, enter the following:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n#!\/usr\/bin\/perl\r\nuse strict;\r\nuse warnings;\r\n\r\nprint &quot;Hello, World!&quot;;\r\n<\/pre>\n<p>Save the file, and in a command prompt run the following:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nperl HelloWorld.pl\r\n<\/pre>\n<p>Which should print &#8220;Hello, World!&#8221;.<\/p>\n<p>As you can see the syntax is rather simple, but there are a few lines I would like mention. We could just have the &#8220;print&#8221; line in our file, and the program would work just as expected. However, since Perl is a forgiving language, it is best practice to make it more robust to start all programs with the three lines at the top. They are there to catch common problems, where &#8220;use strict;&#8221; will cause your program to stop when encountering a problem. &#8220;use warnings;&#8221; will give a warning, but will let the code run. <\/p>\n<p>Personally I find Perl a rather interesting as a language, but not one I would spend any time learning. At least now, as it doesn&#8217;t align with my future goals.<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/Programming-republic-of-perl.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sat, 05 Dec 2015 18:00:31 +0000","created_by":1,"updated_at":"Sat, 05 Dec 2015 13:33:50 +0000","updated_by":1,"published_at":"Sat, 05 Dec 2015 18:00:31 +0000","published_by":1},{"id":537,"title":"24 Days of Hello World - F#","slug":"24-days-of-hello-world-f","markdown":"\nToday I am looking into functional programming. More specifically I\u2019ll look into F#, a strongly typed, multi-paradigm language. Often used as a cross-platform common language infrastructure language.\n\nIt is developed by F# Software Foundation, Microsoft and open contributors. It is supported in Visual Studio and Xamarin Studio, and it has its own open source, cross-platform compiler.\n\n**History**\n\nF# was originally designed and implemented by Don Syme, from Microsoft Research, and it was first released in 2005, supporting .NET 1.0 \u2013 3.5, and the Windows platform. Features included functional programming, records, tuples, pattern matching, structs, scripting files, modules and .NET interoperability, to mention a few.\n\nIt took about 5 years until the next version was released. This did support Linux and OS X as well, and .NET 2.0 \u2013 4.0 as well as Mono. New features was added, such as asynchronous programming, agent programming, extension members, named arguments and array slicing.\n\nVersion 3.0 supported also supported .NET 4.5, as well as GPU and JavaScript platforms. Features like LINQ, auto-properties and type providers were added.\n\nThe latest version is F# 4.0, released earlier this year, with the introduction of Visual Studio 2015. Some of the features included is extension property initializers, class names as functions, non-null provided types and optional type args.\n\n**Typical uses**\n\nThis is not a language with a wide variety of applications where it is used. It is a central part of [WebSharper](http:\/\/websharper.com\/), where you use F# as .NET code on the server, and JavaScript on the front end.\n\nAnother place it is used is for analytical programming. It has been positioned as an optimized alternative to C#, and is used for quantitative finance programming, energy trading and portfolio optimization, machine learning and business intelligence.\n\n**Example Hello World**\n\nSo for this example you will need a compiler for F#, naturally. There are a few ways to compile code on Windows (5 actually), which you can read about on [fsharp.org](http:\/\/fsharp.org\/use\/windows\/).\n\nAssuming you have everything you need to compile some code, lets create a file called HelloWorld.fs. The code should look something like this:\n\n open System [<EntryPoint>] let main argv = printfn \"Hello, World!\" 0\n\nA big warning here! Do not let there be TABs, unless you specify an \u201c#indent \u201coff\u201d\u201d option. My first attempt to compile the code above, *with* TABs failed. When I removed the TABs and just used whitespace, it compiled fine.\n\nAnyway, compile this file by running the following:\n\n fsc HelloWorld.cs\n\nAnd given that the compilation succeeded, run the program by running:\n\n HelloWorld.exe\n\nIf everything has been done as it should, you should see the all familiar \u201cHello, World!\u201d printed to the console.\n\nAlthough I haven\u2019t spent too much time on F#, I imagine I\u2019ll spend some time diving into it sometime next year. It is compatible with many Microsoft products, uses .NET framework, and is being used for machine learning, a topic I\u2019m interested in learning more on later.\n\nThat\u2019s it for now, be sure to check back tomorrow for the next part!\n\n\n","html":"<p>Today I am looking into functional programming. More specifically I&#8217;ll look into F#, a strongly typed, multi-paradigm language. Often used as a cross-platform common language infrastructure language.<\/p>\n<p>It is developed by F# Software Foundation, Microsoft and open contributors. It is supported in Visual Studio and Xamarin Studio, and it has its own open source, cross-platform compiler. <\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>F# was originally designed and implemented by Don Syme, from Microsoft Research, and it was first released in 2005, supporting .NET 1.0 &#8211; 3.5, and the Windows platform. Features included functional programming, records, tuples, pattern matching, structs, scripting files, modules and .NET interoperability, to mention a few.<\/p>\n<p>It took about 5 years until the next version was released. This did support Linux and OS X as well, and .NET 2.0 &#8211; 4.0 as well as Mono. New features was added, such as asynchronous programming, agent programming, extension members, named arguments and array slicing. <\/p>\n<p>Version 3.0 supported also supported .NET 4.5, as well as GPU and JavaScript platforms. Features like LINQ, auto-properties and type providers were added. <\/p>\n<p>The latest version is F# 4.0, released earlier this year, with the introduction of Visual Studio 2015. Some of the features included is extension property initializers, class names as functions, non-null provided types and optional type args.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>This is not a language with a wide variety of applications where it is used. It is a central part of <a href=\"http:\/\/websharper.com\/\" target=\"_blank\">WebSharper<\/a>, where you use F# as .NET code on the server, and JavaScript on the front end.<\/p>\n<p>Another place it is used is for analytical programming. It has been positioned as an optimized alternative to C#, and is used for quantitative finance programming, energy trading and portfolio optimization, machine learning and business intelligence. <\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>So for this example you will need a compiler for F#, naturally. There are a few ways to compile code on Windows (5 actually), which you can read about on <a href=\"http:\/\/fsharp.org\/use\/windows\/\" target=\"_blank\">fsharp.org<\/a>. <\/p>\n<p>Assuming you have everything you need to compile some code, lets create a file called HelloWorld.fs. The code should look something like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nopen System\r\n\r\n[&lt;EntryPoint&gt;]\r\nlet main argv = \r\n   printfn &quot;Hello, World!&quot;\r\n   0\r\n<\/pre>\n<p>A big warning here! Do not let there be TABs, unless you specify an &#8220;#indent &#8220;off&#8221;&#8221; option. My first attempt to compile the code above, <em>with<\/em> TABs failed. When I removed the TABs and just used whitespace, it compiled fine.<\/p>\n<p>Anyway, compile this file by running the following:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nfsc HelloWorld.cs\r\n<\/pre>\n<p>And given that the compilation succeeded, run the program by running:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nHelloWorld.exe\r\n<\/pre>\n<p>If everything has been done as it should, you should see the all familiar &#8220;Hello, World!&#8221; printed to the console. <\/p>\n<p>Although I haven&#8217;t spent too much time on F#, I imagine I&#8217;ll spend some time diving into it sometime next year. It is compatible with many Microsoft products, uses .NET framework, and is being used for machine learning, a topic I&#8217;m interested in learning more on later.<\/p>\n<p>That&#8217;s it for now, be sure to check back tomorrow for the next part!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/Fsharp_Logomark_October_2014.svg_.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 06 Dec 2015 18:00:28 +0000","created_by":1,"updated_at":"Sat, 05 Dec 2015 14:09:07 +0000","updated_by":1,"published_at":"Sun, 06 Dec 2015 18:00:28 +0000","published_by":1},{"id":543,"title":"24 Days of Hello World - Node.js","slug":"24-days-of-hello-world-node-js","markdown":"\nToday we move into a technology, rather than a language itself. Originally this post was going to be about JavaScript, but I thought it would be better to show off Node.js. Node.js is an open-source, cross-platform runtime environment, created to develop server-side web applications.\n\nNode is designed to optimize an applications throughput for real-time applications. It does this by utilizing non-blocking I\/O API, and an event-driven architecture. To execute code it relies on Google V8 JavaScript engine, and most of the basic modules are written in JavaScript.\n\n**History**\n\nNode.js was initially released in 2009. It was created by Ryan Dahl, as well as other developers at Joyent. The inspiration behind Node was file upload progress bar, from Flickr. Since the progress bar always had to query the server to know how much of the file had uploaded, Ryan Dahl thought there had to be a better way.\n\nBy 2011 \u201cnpm\u201d was introduced. This is a package manager, which allows publishing and sharing open-source Node.js libraries. It was designed to simplify installation, uninstallation and updates of libraries. 2011 was also the year when Node was built to support Windows.\n\n**Typical uses**\n\nSome of the typical applications Node.js is used for is creating REST APIs, creating Real-Time services, building microservices and tooling. Not really a surprise there, based on what it is designed to do.\n\n**Example Hello World**\n\nTo run this example you will need Node.js installed. If you go to its official page ([nodejs.org](https:\/\/nodejs.org\/en\/)) there should be download links to the OS your using on the front page. Download it and install it with default settings. You can verify that the installation succeeded by opening a command prompt and run\n\n node -v\n\nWhich, if correctly installed, should output the currently installed version.\n\nNext we want to create a file, called HelloWorld.js, which should look like this:\n\n var http = require(\"http\"); http.createServer(function(request, response) { response.writeHead(200, {\"Content-type\": \"text\/plain\"}); response.write(\"Hello, World!\"); response.end; }).listen(8888);\n\nThis creates a basic server, which responds to requests with \u201cHello, World!\u201d. If you open a browser, and go to \u201c[localhost:8888](http:\/\/localhost:8888)\u201c, you should get \u201cHello, World!\u201d in you browser windows.\n\nNode.js is a technology I\u2019ve been meaning to learn for quite some time now. For now it looks like next year might be the year I actually find time to learn it properly. Have you used Node.js? For what purpose?\n\n\n","html":"<p>Today we move into a technology, rather than a language itself. Originally this post was going to be about JavaScript, but I thought it would be better to show off Node.js. Node.js is an open-source, cross-platform runtime environment, created to develop server-side web applications.<\/p>\n<p>Node is designed to optimize an applications throughput for real-time applications. It does this by utilizing non-blocking I\/O API, and an event-driven architecture. To execute code it relies on Google V8 JavaScript engine, and most of the basic modules are written in JavaScript. <\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>Node.js was initially released in 2009. It was created by Ryan Dahl, as well as other developers at Joyent. The inspiration behind Node was file upload progress bar, from Flickr. Since the progress bar always had to query the server to know how much of the file had uploaded, Ryan Dahl thought there had to be a better way.<\/p>\n<p>By 2011 &#8220;npm&#8221; was introduced. This is a package manager, which allows publishing and sharing open-source Node.js libraries. It was designed to simplify installation, uninstallation and updates of libraries. 2011 was also the year when Node was built to support Windows.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Some of the typical applications Node.js is used for is creating REST APIs, creating Real-Time services, building microservices and tooling. Not really a surprise there, based on what it is designed to do.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>To run this example you will need Node.js installed. If you go to its official page (<a href=\"https:\/\/nodejs.org\/en\/\" target=\"_blank\">nodejs.org<\/a>) there should be download links to the OS your using on the front page. Download it and install it with default settings. You can verify that the installation succeeded by opening a command prompt and run <\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nnode -v\r\n<\/pre>\n<p>Which, if correctly installed, should output the currently installed version.<\/p>\n<p>Next we want to create a file, called HelloWorld.js, which should look like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nvar http = require(&quot;http&quot;);\r\n\r\nhttp.createServer(function(request, response) {\r\n   response.writeHead(200, {&quot;Content-type&quot;: &quot;text\/plain&quot;});\r\n   response.write(&quot;Hello, World!&quot;);\r\n   response.end;\r\n}).listen(8888);\r\n<\/pre>\n<p>This creates a basic server, which responds to requests with &#8220;Hello, World!&#8221;. If you open a browser, and go to &#8220;<a href=\"http:\/\/localhost:8888\" target=\"_blank\">localhost:8888<\/a>&#8220;, you should get &#8220;Hello, World!&#8221; in you browser windows.<\/p>\n<p>Node.js is a technology I&#8217;ve been meaning to learn for quite some time now. For now it looks like next year might be the year I actually find time to learn it properly. Have you used Node.js? For what purpose?<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/500px-Node.js_logo.svg_.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 07 Dec 2015 18:00:44 +0000","created_by":1,"updated_at":"Sun, 06 Dec 2015 14:34:18 +0000","updated_by":1,"published_at":"Mon, 07 Dec 2015 18:00:44 +0000","published_by":1},{"id":548,"title":"24 Days of Hello World - Haskell","slug":"24-days-hello-world-haskell","markdown":"\nFor the eight hatch of 24 Days of Hello World I look into Haskell. Haskell is a language I merely have heard of before, so it is definitely interesting to see what it is and what it can be applied to.\n\nHaskell is a general-purpose purely functional language, using strong static typing and non-strict semantics. It is as an open-source product, which allows rapid development of what it claims to be robust and concise software. It has support for integration with other languages, built-in concurrency and parallelism, rich libraries and an active community.\n\n**History**\n\nThe background for Haskell was the release of a proprietary language, called Miranda. This was a functional language, released in 1985, which resulted in a growth of interest in functional languages. In 1987 there was a strong consensus that a committee should be formed, to define an open standard for functional languages. Their aim was to consolidate existing functional languages into a common one, and in 1990 the first version of Haskell was defined.\n\nThe work of the committee resulted in a series of language definitions, and it ended in Haskell 98, which intended to specify a stable, minimal version of the language. It was to be a base for future extensions, and the committee welcomed extensions and other variants of Haskell 98, through addition and incorporation of experimental features.\n\nThis standard was released early 1998, and in 2003 it was revised. The language evolved quickly, and Glasgow Haskell Compiler became the standard. In 2006 the work to define a successor to this standard began, and in mid 2010 Haskell 2010 was published. One of the major features added to this version was the foreign function interface (FFI), which allowed bindings to other programming languages.\n\nAs of today a preview release of the next version, called Haskell 2014 has been released.\n\n**Typical uses**\n\nThere is a large number of companies that is using Haskell today. To give you an idea of how it can be used, I\u2019m going to list some of them.\n\n11. Facebook \u2013 Used for internal tools, such as programmatically manipulating a PHP code base\n12. Google \u2013 Used for internal projects, such as the open-source project called Ganeti. This is a tool for managing clusters of virtual servers\n13. The New York Times \u2013 Used Haskell for processing of images, utilizing the parallel array library\n14. Wagon \u2013 Uses Haskell and JavaScript for their modern SQL editor.\n**Example Hello World**\n\nFor the example code we will need to install the Haskell compiler. You can find what you need at [haskell.org](https:\/\/www.haskell.org\/downloads). I chose to download and install the minimal installers, which provides the GHC (Glasgow Haswell Compiler) and core libraries needed for the platform. Like always I am doing this on a Windows 10, so that is the platform I chose as well.\n\nInstallation was done with default settings, which should add the compiler to the PATH variable. It took some time to install, but once its done you can verify that it finished successfully by running\n\n ghc -v\n\nIn a command prompt. That should give you the version, as well as some other information.\n\nNext we move on to create a file, called \u201cHelloWorld.hs\u201d. Add the following to the file:\n\n module Main where import System.Environment main :: IO () main = do putStrLn(\"Hello, World!\")\n\nYou can find some description on how the code works [here](https:\/\/en.wikibooks.org\/wiki\/Write_Yourself_a_Scheme_in_48_Hours\/First_Steps).\n\nIn a command line window, run the following command:\n\n ghc -o HelloWorld --make HelloWorld.hs\n\nThis will tell the compiler to compile the \u201cHelloWorld.hs\u201d file we just created into an executable called \u201cHelloWorld.exe\u201d. The \u201c-o\u201d parameter specifies the name of the executable.\n\nRun the newly compiled application by typing \u201cHelloWorld.exe\u201d in the command line, and as always you should see \u201cHello, World!\u201d printed to the console window.\n\n\n","html":"<p>For the eight hatch of 24 Days of Hello World I look into Haskell. Haskell is a language I merely have heard of before, so it is definitely interesting to see what it is and what it can be applied to. <\/p>\n<p>Haskell is a general-purpose purely functional language, using strong static typing and non-strict semantics. It is as an open-source product, which allows rapid development of what it claims to be robust and concise software. It has support for integration with other languages, built-in concurrency and parallelism, rich libraries and an active community. <\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>The background for Haskell was the release of a proprietary language, called Miranda. This was a functional language, released in 1985, which resulted in a growth of interest in functional languages. In 1987 there was a strong consensus that a committee should be formed, to define an open standard for functional languages. Their aim was to consolidate existing functional languages into a common one, and in 1990 the first version of Haskell was defined. <\/p>\n<p>The work of the committee resulted in a series of language definitions, and it ended in Haskell 98, which intended to specify a stable, minimal version of the language. It was to be a base for future extensions, and the committee welcomed extensions and other variants of Haskell 98, through addition and incorporation of experimental features. <\/p>\n<p>This standard was released early 1998, and in 2003 it was revised. The language evolved quickly, and Glasgow Haskell Compiler became the standard. In 2006 the work to define a successor to this standard began, and in mid 2010 Haskell 2010 was published. One of the major features added to this version was the foreign function interface (FFI), which allowed bindings to other programming languages. <\/p>\n<p>As of today a preview release of the next version, called Haskell 2014 has been released. <\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>There is a large number of companies that is using Haskell today. To give you an idea of how it can be used, I&#8217;m going to list some of them.<\/p>\n<li>Facebook &#8211; Used for internal tools, such as programmatically manipulating a PHP code base<\/li>\n<li>Google &#8211; Used for internal projects, such as the open-source project called Ganeti. This is a tool for managing clusters of virtual servers<\/li>\n<li>The New York Times &#8211; Used Haskell for processing of images, utilizing the parallel array library<\/li>\n<li>Wagon &#8211; Uses Haskell and JavaScript for their modern SQL editor.<\/li>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>For the example code we will need to install the Haskell compiler. You can find what you need at <a href=\"https:\/\/www.haskell.org\/downloads\" target=\"_blank\">haskell.org<\/a>. I chose to download and install the minimal installers, which provides the GHC (Glasgow Haswell Compiler) and core libraries needed for the platform. Like always I am doing this on a Windows 10, so that is the platform I chose as well. <\/p>\n<p>Installation was done with default settings, which should add the compiler to the PATH variable. It took some time to install, but once its done you can verify that it finished successfully by running<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nghc -v\r\n<\/pre>\n<p>In a command prompt. That should give you the version, as well as some other information.<\/p>\n<p>Next we move on to create a file, called &#8220;HelloWorld.hs&#8221;. Add the following to the file:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nmodule Main where\r\nimport System.Environment\r\n\r\nmain :: IO () \r\nmain = do\r\n    putStrLn(&quot;Hello, World!&quot;)\r\n<\/pre>\n<p>You can find some description on how the code works <a href=\"https:\/\/en.wikibooks.org\/wiki\/Write_Yourself_a_Scheme_in_48_Hours\/First_Steps\" target=\"_blank\">here<\/a>.<\/p>\n<p>In a command line window, run the following command:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nghc -o HelloWorld --make HelloWorld.hs\r\n<\/pre>\n<p>This will tell the compiler to compile the &#8220;HelloWorld.hs&#8221; file we just created into an executable called &#8220;HelloWorld.exe&#8221;. The &#8220;-o&#8221; parameter specifies the name of the executable.<\/p>\n<p>Run the newly compiled application by typing &#8220;HelloWorld.exe&#8221; in the command line, and as always you should see &#8220;Hello, World!&#8221; printed to the console window.<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/602px-Haskell-Logo.svg_.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 08 Dec 2015 18:00:56 +0000","created_by":1,"updated_at":"Mon, 07 Dec 2015 21:49:39 +0000","updated_by":1,"published_at":"Tue, 08 Dec 2015 18:00:56 +0000","published_by":1},{"id":556,"title":"24 Days of Hello World - R","slug":"24-days-of-hello-world-r","markdown":"\nIn todays post of 24 Days of Hello World, I look into a language and environment for statistical computing and graphics, called R. This language is an implementation of the language \u201cS\u201d, combined with [lexical scoping](https:\/\/en.wikipedia.org\/wiki\/Scope_(computer_science)#Lexical_scoping).\n\nThe software environment is primarily written in C, Fortran and R. While there are graphical front-ends available, R have a command line interface as a default.\n\n**History**\n\nCreated by Ross Ihaka and Robert Gentleman, R was named based on the first letters in the first names of its authors. It was created in 1993. After that, it has been further developed, with releases quite often, up til the latest release 3.2.2, which was released a few months back.\n\nIn 2007 a company called Revolution Analytics was founded to provide commercial support for R. They also added several components developed by themselves. Earlier this year, Microsoft aquired Revolution Analytics.\n\n**Typical uses**\n\nTypical places where you could use R is in financial companies, where you could be using it for quantitative analysis. Also it can be used to compute trading and risks models, as well as data manipulation-\n\n**Example Hello World**\n\nYou can download the binaries or source code for the compiler at [r-project.org](https:\/\/cran.r-project.org\/mirrors.html). Just select the mirror closes to you, and choose what you would like to download. I chose precompiled binaries for Windows, and I went for the base package, as I\u2019ll just create a \u201cHello World\u201d application. The installation was fairly quick, and when you are done, you can verify that it is installed by opening \u201cR\u201d which should have been installed.\n\nNow create a file called \u201cHelloWorld.r\u201d, and enter the following into it:\n\n cat ('Hello, World!')\n\nAnd simply save it. With \u201cR\u201d opened, run the following command to run the application:\n\n source('PATH\/TO\/FILE\/HelloWorld.r')\n\nNote that the slashes needs to be forward slashes (at least on a Windows system). I used backward slashes, and the command failed. Anyway, if you have done it correctly, \u201cHello, World!\u201d should be printed to the output window.\n\nSeeing as R is the language it is, I believe it is highly unlikely that I will ever learn to use it, and I won\u2019t spend much more time than that to finish this post.\n\nCheck back tomorrow for the next language in 24 Days of Hello World!\n\n\n","html":"<p>In todays post of 24 Days of Hello World, I look into a language and environment for statistical computing and graphics, called R. This language is an implementation of the language &#8220;S&#8221;, combined with <a href=\"https:\/\/en.wikipedia.org\/wiki\/Scope_(computer_science)#Lexical_scoping\" target=\"_blank\">lexical scoping<\/a>.<\/p>\n<p>The software environment is primarily written in C, Fortran and R. While there are graphical front-ends available, R have a command line interface as a default.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>Created by Ross Ihaka and Robert Gentleman, R was named based on the first letters in the first names of its authors. It was created in 1993. After that, it has been further developed, with releases quite often, up til the latest release 3.2.2, which was released a few months back.<\/p>\n<p>In 2007 a company called Revolution Analytics was founded to provide commercial support for R. They also added several components developed by themselves. Earlier this year, Microsoft aquired Revolution Analytics. <\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Typical places where you could use R is in financial companies, where you could be using it for quantitative analysis. Also it can be used to compute trading and risks models, as well as data manipulation-<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>You can download the binaries or source code for the compiler at <a href=\"https:\/\/cran.r-project.org\/mirrors.html\" target=\"_blank\">r-project.org<\/a>. Just select the mirror closes to you, and choose what you would like to download. I chose precompiled binaries for Windows, and I went for the base package, as I&#8217;ll just create a &#8220;Hello World&#8221; application. The installation was fairly quick, and when you are done, you can verify that it is installed by opening &#8220;R&#8221; which should have been installed.<\/p>\n<p>Now create a file called &#8220;HelloWorld.r&#8221;, and enter the following into it:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\ncat (&#039;Hello, World!&#039;)\r\n<\/pre>\n<p>And simply save it. With &#8220;R&#8221; opened, run the following command to run the application:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nsource(&#039;PATH\/TO\/FILE\/HelloWorld.r&#039;)\r\n<\/pre>\n<p>Note that the slashes needs to be forward slashes (at least on a Windows system). I used backward slashes, and the command failed. Anyway, if you have done it correctly, &#8220;Hello, World!&#8221; should be printed to the output window.<\/p>\n<p>Seeing as R is the language it is, I believe it is highly unlikely that I will ever learn to use it, and I won&#8217;t spend much more time than that to finish this post.<\/p>\n<p>Check back tomorrow for the next language in 24 Days of Hello World!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/R_logo.svg_.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Wed, 09 Dec 2015 18:00:21 +0000","created_by":1,"updated_at":"Wed, 09 Dec 2015 16:55:17 +0000","updated_by":1,"published_at":"Wed, 09 Dec 2015 18:00:21 +0000","published_by":1},{"id":565,"title":"24 Days of Hello World - PHP","slug":"24-days-of-hello-world-php","markdown":"\nIn todays post I\u2019ll talk a bit about the second programming language I learnt, PHP. I believe I learnt it by myself in the first year of my education, and if I don\u2019t remember all wrong, I also had a course on it my second or third year at school. For a few years I used it frequently, and I built several web sites with PHP, however now I haven\u2019t really used it for a year or two.\n\nSo what is PHP? It is a language designed for web programming, server-side, but it is also a general-purpose language. It can be embedded into HTML, or it can be included in web templates and web frameworks. The code itself is interpreted by PHP interpreter, implemented as a module on a web server. You can also execute it with a command line interface.\n\n**History**\n\nIn 1994 a guy named Rasmus Lerdorf wrote some CGI programs to maintain his personal home page. He extended these to work with web forms and databases, and called it PHP\/FI (Personal Home Page\/Forms Interpreter). Version 1.0 of this was officially announced in 1995, where the basic functionality that exists today was present. According to Rasmus, PHP was not intended to be a new programming language, and as such there is inconsistencies in naming of functions and order of parameters. The language was developed organically and not really designed, and by 1997 the next version was released.\n\nIn 1997 the parser was rewritten by Zeev Suraski and Andi Gutmans, and the name became PHP: Hypertext Preprocessor. This introduced version 3, which was officially released in 1998. In 1999 the same guys introduced the Zend Engine, which powered PHP4, released in 2000.\n\nPHP5 was released in 2004, introducing improved support for object-oriented programming and PHP Data Objects (PDO) amongst other improvements. By 2008 this was the only stable release supported. PHP6 was supposed to deal with unicode issues, however due to a lack of developers with the right understanding of the job needed to be done, this was abandoned.\n\nThe currently latest release is PHP7, which may not be backward compatible. Amongst one of the features introduced is modern exception handling, which replaced the old legacy error mechanisms. The next release will be PHP7.1, and it is planned for next year.\n\n**Typical uses**\n\nAs you may have understood, PHP is typically used for server-side web programming. A few of the areas you could use it for in that case is for data collection (or user interaction), database interaction and also graphical work. You can for instance change the size of an image.\n\n**Example Hello World**\n\nFor this example you will need to have a web server, either locally or one you have somewhere on the internet. To keep it simple, I\u2019ll choose a locally installed one, and I have chosen [XAMPP](https:\/\/www.apachefriends.org\/index.html) for this purpose. AS its out of scope for this post, I won\u2019t go into details on XAMPP, but it should be fairly simple to install with default settings, and start the server. You should then be able to browse to \u201chttp:\/\/localhost\u201d and see the XAMPP homepage.\n\nNow you need to create a file called \u201cHelloWorld.php\u201d and save it under the root folder of your site (for XAMPP: \u201cc:\\xampp\\htdocs\\\u201d). Add the following content to the file:\n\n   <title>My first PHP page<\/title>   <?php echo \"<h1>Hello, World!<\/h1>\"; ?>  \n\nWhat you see here is a mix of HTML and PHP. The \u201cecho\u201d command is what you use to print some text with in PHP, and you also notice the start and the end tag, to indicate that the following part is PHP code. If you browse to \u201chttp:\/\/localhost\/HelloWorld.php\u201d you should see \u201cHello, World!\u201d written on the page.\n\nLike I said in the start, I have been using PHP over several years, building back-ends for many web sites. I find it to be relatively easy to learn and easy to use. However, I have seen a lot of criticism of PHP over the years, and there is other languages you may use for the same purpose as well, so it is not the only way to go.\n\nCome back tomorrow to look into another functional language!\n\n\n","html":"<p>In todays post I&#8217;ll talk a bit about the second programming language I learnt, PHP. I believe I learnt it by myself in the first year of my education, and if I don&#8217;t remember all wrong, I also had a course on it my second or third year at school. For a few years I used it frequently, and I built several web sites with PHP, however now I haven&#8217;t really used it for a year or two. <\/p>\n<p>So what is PHP? It is a language designed for web programming, server-side, but it is also a general-purpose language. It can be embedded into HTML, or it can be included in web templates and web frameworks. The code itself is interpreted by PHP interpreter, implemented as a module on a web server. You can also execute it with a command line interface. <\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>In 1994 a guy named Rasmus Lerdorf wrote some CGI programs to maintain his personal home page. He extended these to work with web forms and databases, and called it PHP\/FI (Personal Home Page\/Forms Interpreter). Version 1.0 of this was officially announced in 1995, where the basic functionality that exists today was present. According to Rasmus, PHP was not intended to be a new programming language, and as such there is inconsistencies in naming of functions and order of parameters. The language was developed organically and not really designed, and by 1997 the next version was released.<\/p>\n<p>In 1997 the parser was rewritten by Zeev Suraski and Andi Gutmans, and the name became PHP: Hypertext Preprocessor. This introduced version 3, which was officially released in 1998. In 1999 the same guys introduced the Zend Engine, which powered PHP4, released in 2000. <\/p>\n<p>PHP5 was released in 2004, introducing improved support for object-oriented programming and PHP Data Objects (PDO) amongst other improvements. By 2008 this was the only stable release supported. PHP6 was supposed to deal with unicode issues, however due to a lack of developers with the right understanding of the job needed to be done, this was abandoned.<\/p>\n<p>The currently latest release is PHP7, which may not be backward compatible. Amongst one of the features introduced is modern exception handling, which replaced the old legacy error mechanisms. The next release will be PHP7.1, and it is planned for next year.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>As you may have understood, PHP is typically used for server-side web programming. A few of the areas you could use it for in that case is for data collection (or user interaction), database interaction and also graphical work. You can for instance change the size of an image.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>For this example you will need to have a web server, either locally or one you have somewhere on the internet. To keep it simple, I&#8217;ll choose a locally installed one, and I have chosen <a href=\"https:\/\/www.apachefriends.org\/index.html\" target=\"_blank\">XAMPP<\/a> for this purpose. AS its out of scope for this post, I won&#8217;t go into details on XAMPP, but it should be fairly simple to install with default settings, and start the server. You should then be able to browse to &#8220;http:\/\/localhost&#8221; and see the XAMPP homepage. <\/p>\n<p>Now you need to create a file called &#8220;HelloWorld.php&#8221; and save it under the root folder of your site (for XAMPP: &#8220;c:\\xampp\\htdocs\\&#8221;). Add the following content to the file:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n&lt;html&gt;\r\n   &lt;head&gt;\r\n      &lt;title&gt;My first PHP page&lt;\/title&gt;\r\n   &lt;\/head&gt;\r\n   &lt;body&gt;\r\n\r\n      &lt;?php   \r\n\techo &quot;&lt;h1&gt;Hello, World!&lt;\/h1&gt;&quot;;\r\n      ?&gt;\r\n\r\n   &lt;\/body&gt;\r\n&lt;\/html&gt;\r\n<\/pre>\n<p>What you see here is a mix of HTML and PHP. The &#8220;echo&#8221; command is what you use to print some text with in PHP, and you also notice the start and the end tag, to indicate that the following part is PHP code. If you browse to &#8220;http:\/\/localhost\/HelloWorld.php&#8221; you should see &#8220;Hello, World!&#8221; written on the page.<\/p>\n<p>Like I said in the start, I have been using PHP over several years, building back-ends for many web sites. I find it to be relatively easy to learn and easy to use. However, I have seen a lot of criticism of PHP over the years, and there is other languages you may use for the same purpose as well, so it is not the only way to go.<\/p>\n<p>Come back tomorrow to look into another functional language!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/PHP_Logo.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 10 Dec 2015 18:43:48 +0000","created_by":1,"updated_at":"Thu, 10 Dec 2015 18:43:48 +0000","updated_by":1,"published_at":"Thu, 10 Dec 2015 18:43:48 +0000","published_by":1},{"id":579,"title":"24 Days of Hello World - Clojure","slug":"24-days-hello-world-clojure","markdown":"\nAs I mentioned in yesterday\u2019s post, today will be about a functional language, called Clojure. This dynamic language targets the Java Virtual Machine. Designed to be general-purpose language, it combines approachability and interactive abilities of a scripting language with an efficient and robust infrastructure for multithreaded programming.\n\nClojure is compiled into JVM bytecode, but remains dynamic. It provides access to the Java framework. Clojure is a dialect of LISP, and like LISP, it treats code as data.\n\n**History**\n\nClojure was initially released in 2007, after two years of development by Rich Hickey. His goal was to create interoperability between LISP and Java. After the initial release it took about two years before version 1, the first stable version was released.\n\nThe development is community-driven, and it has been yearly releases since version 1.0, until the currently released 1.7, released earlier this year. Features that have been added in the various releases includes futures, protocols, enhanced primitive support, reader literals, reducers, Java API, improved hashing algorithm, transducers and reader conditionals.\n\n**Typical uses**\n\nClojure works fine any situation where you could use Java. Some examples is building asynchronous webservers, analysing log files, automating computing infrastructure and generating and producing music. I guess only the imagination can stop you!\n\n**Example Hello World**\n\nThe easiest way to get up and running with Clojure is to use the default build tool, called Leiningen. This can be found at [GitHub](https:\/\/github.com\/technomancy\/leiningen), where the source code is, as well as links to installers. I downloaded the Windows installers (can be found a bit down in the readme section), and installed it using default values. Note, you need to have the [JDK](http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/index.html) installed first. To verify that the installation was successful, check to see if you have the \u201cClojure REPL\u201d in your start menu. Start that, and see that its actually running.\n\nTo make sure Leiningen is correctly installed, and to create our project, you need to run the following commands from a command prompt (make sure you are located in a folder where you want your project to reside):\n\n lein self-install lein new helloworld cd helloworld lein deps lein test\n\nThis should present you with a failed test case, which means the project is up and running. Now if you open the file called \u201ccore.clj\u201d, found in \u201cYOUR\/PATH\/src\/helloworld\/\u201d, you will see some code, which we will edit. Edit this file to look like this:\n\n (ns helloworld.core) (defn greet[who] (println \"Hello, \" who \"!\")) (defn -main[] (greet \"World\"))\n\nSave the file and run the following command to execute this code:\n\n lein run -m helloworld.core\n\nWhich should output \u201cHello, World!\u201d.\n\nYou\u2019ll notice that this is the first time we have used one parameter when calling \u201cHello World\u201d. This is simply because I didn\u2019t manage to make it compile without, and I didn\u2019t really have much more time to spend trying to figure how to solve it. As for the syntax, I find that for a simple application, such as the one above, it is easy to see what\u2019s going on. On the other hand, for a bigger application it might not be so easy. Maybe someone who have used Clojure can shed some light on this?\n\nThat\u2019s all for now, make sure you check back tomorrow for another language in 24 Days of Hello World!\n\n\n","html":"<p>As I mentioned in yesterday&#8217;s post, today will be about a functional language, called Clojure. This dynamic language targets the Java Virtual Machine. Designed to be general-purpose language, it combines approachability and interactive abilities of a scripting language with an efficient and robust infrastructure for multithreaded programming. <\/p>\n<p>Clojure is compiled into JVM bytecode, but remains dynamic. It provides access to the Java framework. Clojure is a dialect of LISP, and like LISP, it treats code as data.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>Clojure was initially released in 2007, after two years of development by Rich Hickey. His goal was to create interoperability between LISP and Java. After the initial release it took about two years before version 1, the first stable version was released.<\/p>\n<p>The development is community-driven, and it has been yearly releases since version 1.0, until the currently released 1.7, released earlier this year. Features that have been added in the various releases includes futures, protocols, enhanced primitive support, reader literals, reducers, Java API, improved hashing algorithm, transducers and reader conditionals.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Clojure works fine any situation where you could use Java. Some examples is building asynchronous webservers, analysing log files, automating computing infrastructure and generating and producing music. I guess only the imagination can stop you!<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>The easiest way to get up and running with Clojure is to use the default build tool, called Leiningen. This can be found at <a href=\"https:\/\/github.com\/technomancy\/leiningen\" target=\"_blank\">GitHub<\/a>, where the source code is, as well as links to installers. I downloaded the Windows installers (can be found a bit down in the readme section), and installed it using default values. Note, you need to have the <a href=\"http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/index.html\" target=\"_blank\">JDK<\/a> installed first. To verify that the installation was successful, check to see if you have the &#8220;Clojure REPL&#8221; in your start menu. Start that, and see that its actually running.<\/p>\n<p>To make sure Leiningen is correctly installed, and to create our project, you need to run the following commands from a command prompt (make sure you are located in a folder where you want your project to reside):<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nlein self-install\r\n\r\nlein new helloworld\r\ncd helloworld\r\nlein deps\r\nlein test\r\n<\/pre>\n<p>This should present you with a failed test case, which means the project is up and running. Now if you open the file called &#8220;core.clj&#8221;, found in &#8220;YOUR\/PATH\/src\/helloworld\/&#8221;, you will see some code, which we will edit. Edit this file to look like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n(ns helloworld.core)\r\n(defn greet[who] (println &quot;Hello, &quot; who &quot;!&quot;))\r\n(defn -main[] (greet &quot;World&quot;))\r\n<\/pre>\n<p>Save the file and run the following command to execute this code:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nlein run -m helloworld.core\r\n<\/pre>\n<p>Which should output &#8220;Hello, World!&#8221;.<\/p>\n<p>You&#8217;ll notice that this is the first time we have used one parameter when calling &#8220;Hello World&#8221;. This is simply because I didn&#8217;t manage to make it compile without, and I didn&#8217;t really have much more time to spend trying to figure how to solve it. As for the syntax, I find that for a simple application, such as the one above, it is easy to see what&#8217;s going on. On the other hand, for a bigger application it might not be so easy. Maybe someone who have used Clojure can shed some light on this?<\/p>\n<p>That&#8217;s all for now, make sure you check back tomorrow for another language in 24 Days of Hello World!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/Clojure_logo.gif","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 11 Dec 2015 18:00:49 +0000","created_by":1,"updated_at":"Fri, 11 Dec 2015 15:16:55 +0000","updated_by":1,"published_at":"Fri, 11 Dec 2015 18:00:49 +0000","published_by":1},{"id":595,"title":"24 Days of Hello World - Pascal","slug":"24-days-of-hello-world-pascal","markdown":"\nIn todays post I look into Pascal. This is a small and efficient language, using structured programming and data structuring it encouraged good programming practices. Unlike most languages in the C family, Pascal allows nested procedure definitions and also declarations inside subroutines. The syntax can then be simple and coherent, and a program is syntactically nearly identical to a single procedure.\n\n**History**\n\nPascal was designed by Niklaus Wirth, and published in 1970. It was named in honor of the mathematician and philosopher Blaise Pascal, and was largely intended to teach students structured programming. There was however other uses as well. It was the primary high-level language used for development in the Apple Lisa and the Machintosh.\n\nALGOL 60 was the roots of Pascal, but there were also added concepts, enabling developers to define their own complex datatypes, making it easier to build dynamic and recursive data structures. To make this possible, there is strong typing on all objects, which is standard in many languages today.\n\n**Typical uses**\n\nToday Object Pascal (delphi) is still used for developing some Windows applications, that has the ability to be ported to Mac, iOS and Android. There is also another cross-platform version called Free Pascal (which I use for my example), which is popular amongst Linux users.\n\n**Example Hello World**\n\nFor the example of Pascal, you will need a compiler. I chose one from [Free Pascal](http:\/\/www.freepascal.org\/download.var), a compiler which targets several different platforms. I installed it using default settings, and tested it by opening a command prompt and running the following command:\n\n fpc -v\n\nWhich should give you the currently installed version. Now it\u2019s time to create a file called \u201cHelloWorld.pas\u201d. Enter the following into it:\n\n program HelloWorld; begin writeln ('Hello, World!') end.\n\nTo compile it, and run it, run the following commands from a command line (inside the folder you stored the file):\n\n fcp HelloWorld.pas HelloWorld.exe\n\nThe first command should compile and link the application, and the second command should run it, and print \u201cHello, World!\u201d to the command prompt.\n\nThat\u2019s it for now, check back tomorrow for the next post in 24 Days of Hello World!\n\n\n","html":"<p>In todays post I look into Pascal. This is a small and efficient language, using structured programming and data structuring it encouraged good programming practices. Unlike most languages in the C family, Pascal allows nested procedure definitions and also declarations inside subroutines. The syntax can then be simple and coherent, and a program is syntactically nearly identical to a single procedure.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>Pascal was designed by Niklaus Wirth, and published in 1970. It was named in honor of the mathematician and philosopher Blaise Pascal, and was largely intended to teach students structured programming. There was however other uses as well. It was the primary high-level language used for development in the Apple Lisa and the Machintosh.<\/p>\n<p>ALGOL 60 was the roots of Pascal, but there were also added concepts, enabling developers to define their own complex datatypes, making it easier to build dynamic and recursive data structures. To make this possible, there is strong typing on all objects, which is standard in many languages today. <\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Today Object Pascal (delphi) is still used for developing some Windows applications, that has the ability to be ported to Mac, iOS and Android. There is also another cross-platform version called Free Pascal (which I use for my example), which is popular amongst Linux users.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>For the example of Pascal, you will need a compiler. I chose one from <a href=\"http:\/\/www.freepascal.org\/download.var\" target=\"_blank\">Free Pascal<\/a>, a compiler which targets several different platforms. I installed it using default settings, and tested it by opening a command prompt and running the following command:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nfpc -v\r\n<\/pre>\n<p>Which should give you the currently installed version. Now it&#8217;s time to create a file called &#8220;HelloWorld.pas&#8221;. Enter the following into it:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nprogram HelloWorld;\r\nbegin\r\n   writeln (&#039;Hello, World!&#039;)\r\nend.\r\n<\/pre>\n<p>To compile it, and run it, run the following commands from a command line (inside the folder you stored the file):<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nfcp HelloWorld.pas\r\n\r\nHelloWorld.exe\r\n<\/pre>\n<p>The first command should compile and link the application, and the second command should run it, and print &#8220;Hello, World!&#8221; to the command prompt.<\/p>\n<p>That&#8217;s it for now, check back tomorrow for the next post in 24 Days of Hello World!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sat, 12 Dec 2015 18:04:22 +0000","created_by":1,"updated_at":"Sun, 13 Dec 2015 17:19:02 +0000","updated_by":1,"published_at":"Sat, 12 Dec 2015 18:04:22 +0000","published_by":1},{"id":592,"title":"24 Days of Hello World - Lisp","slug":"24-days-of-hello-world-lisp","markdown":"\nDay 13, only 11 days left until Christmas, which means another language! Today I am looking into the language family Lisp, and more specifically the dialect Common Lisp. Being one of the earliest programming languages it pioneered many ideas in computer science, such as tree data structures, automatic storage management, dynamic typing, recursion and more.\n\nLisp derives from \u201cLISt Processor\u201d, and linked lists is one of the major data structures used. In fact, the source code itself is made up of lists. Source code from Lisp applications can be manipulated as data structures, which allow programmers to create new syntax or new domain.specific languages embedded in Lisp, using macros.\n\n**History**\n\nLisp was invented in 1958 by John McCarthy, and he went on to publish the design in a paper in 1960. What he showed was that you could build a Turing-complete language for algorithms, using a few simple operators and a notation for functions. The first implementation was done by Steve Russell, where the result was a working interpreter. The first complete compiler was implemented in 1962 by Tim Hart and Mike Levin. This introduced incremental compilation, where compiled and interpreted functions can intermix freely.\n\nCommon Lisp was created during the 1980s and 1990s. This was a result of an effort to unify the work on new dialects of Lisp. Popularity declined during the 1990s, but from 2000 and up to now there has been an increased interest in Lisp, specially for the dialects Common Lisp and [Clojure](http:\/\/leiflarsen.org\/2015\/24-days-hello-world-clojure).\n\n**Typical uses**\n\nCommon Lisp is often used to develop research applications, often for Artificial Intelligence. This allows rapid development of prototypes or deployed applications.\n\n**Example Hello World**\n\nFor this example you need to download and install CLISP from [Sourgeforge](http:\/\/sourceforge.net\/projects\/clisp\/files\/latest\/download?source=files). The version that is current is 2.49, which should be quite quick to install with default parameters. When it is installed you can verify that it is working by opening CLISP from the start menu. That should open a command line interface.\n\nCreate a file called \u201cHelloWorld.lisp\u201d and make it look like this:\n\n (defun helloworld () \"Hello, World!\" )\n\nSave the file, and run the following commands in CLISP:\n\n (load \"PATH\/TO\/YOUR\/FILE\/HelloWorld.lisp\") (helloworld)\n\nThe first commands loads the file into the REPL, and it will state so by saying something like \u201cLoading file \u2026\u201d followed by \u201cLoaded file \u2026\u201d. The next line will actually execute the function we defined in our file. Naturally this will print \u201cHello, World!\u201d.\n\nMy personal opinion when it comes to LISP is that it\u2019s old, and nothing that really catches my interest. Although probably very good for its use, it took me too long to get the \u201cHello World\u201d example running, and I don\u2019t see myself learning any of the dialects today.\n\nDo check back tomorrow for the next language in this series!\n\n\n","html":"<p>Day 13, only 11 days left until Christmas, which means another language! Today I am looking into the language family Lisp, and more specifically the dialect Common Lisp. Being one of the earliest programming languages it pioneered many ideas in computer science, such as tree data structures, automatic storage management, dynamic typing, recursion and more.<\/p>\n<p>Lisp derives from &#8220;LISt Processor&#8221;, and linked lists is one of the major data structures used. In fact, the source code itself is made up of lists. Source code from Lisp applications can be manipulated as data structures, which allow programmers to create new syntax or new domain.specific languages embedded in Lisp, using macros.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>Lisp was invented in 1958 by John McCarthy, and he went on to publish the design in a paper in 1960. What he showed was that you could build a Turing-complete language for algorithms, using a few simple operators and a notation for functions. The first implementation was done by Steve Russell, where the result was a working interpreter. The first complete compiler was implemented in 1962 by Tim Hart and Mike Levin. This introduced incremental compilation, where compiled and interpreted functions can intermix freely. <\/p>\n<p>Common Lisp was created during the 1980s and 1990s. This was a result of an effort to unify the work on new dialects of Lisp. Popularity declined during the 1990s, but from 2000 and up to now there has been an increased interest in Lisp, specially for the dialects Common Lisp and <a href=\"http:\/\/leiflarsen.org\/2015\/24-days-hello-world-clojure\" target=\"_blank\">Clojure<\/a>.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Common Lisp is often used to develop research applications, often for Artificial Intelligence. This allows rapid development of prototypes or deployed applications. <\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>For this example you need to download and install CLISP from <a href=\"http:\/\/sourceforge.net\/projects\/clisp\/files\/latest\/download?source=files\" target=\"_blank\">Sourgeforge<\/a>. The version that is current is 2.49, which should be quite quick to install with default parameters. When it is installed you can verify that it is working by opening CLISP from the start menu. That should open a command line interface. <\/p>\n<p>Create a file called &#8220;HelloWorld.lisp&#8221; and make it look like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n(defun helloworld ()\r\n   &quot;Hello, World!&quot;\r\n)\r\n<\/pre>\n<p>Save the file, and run the following commands in CLISP:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n(load &quot;PATH\/TO\/YOUR\/FILE\/HelloWorld.lisp&quot;)\r\n(helloworld)\r\n<\/pre>\n<p>The first commands loads the file into the REPL, and it will state so by saying something like &#8220;Loading file &#8230;&#8221; followed by &#8220;Loaded file &#8230;&#8221;. The next line will actually execute the function we defined in our file. Naturally this will print &#8220;Hello, World!&#8221;. <\/p>\n<p>My personal opinion when it comes to LISP is that it&#8217;s old, and nothing that really catches my interest. Although probably very good for its use, it took me too long to get the &#8220;Hello World&#8221; example running, and I don&#8217;t see myself learning any of the dialects today. <\/p>\n<p>Do check back tomorrow for the next language in this series!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 13 Dec 2015 18:00:11 +0000","created_by":1,"updated_at":"Sun, 13 Dec 2015 17:14:14 +0000","updated_by":1,"published_at":"Sun, 13 Dec 2015 18:00:11 +0000","published_by":1},{"id":604,"title":"24 Days of Hello World - C++","slug":"24-days-of-hello-world-c-2","markdown":"\nIn today\u2019s post I want to introduce a language that has inspired many newer languages, C++. This is a general-purpose language, with imperative, object-oriented and generic programming features. It also provides support for low-level memory manipulation. Key strengths is software infrastructure and resource-constrained applications, such as desktop applications, servers and performance-critical applications (telephone switches, space probes etc.).\n\nToday there exists many implementation of the C++ standard, and it is available on many platforms. It is standardized by the ISO (International Organization for Standardization), where the most recent version was published in December 2014.\n\n**History**\n\nBjarne Stroustrup is considered to be the father of C++. His experience with programming from his Ph.D. thesis had shown him that Simula had features that were helpful for large software development. He also found that it was too slow for practical use. When he was facing the problem of analysing the UNIX kernel, in respect to distributed computing, he set out to enhance the C language. Before its final name, C++, it was referred to as \u201cnew C\u201d and \u201cC with Classes\u201d.\n\nClasses, derived classes, strong typing, inlining and default argument were features that initially were added to C from Stroustrup. In 1983 new features were added, such as virtual functions, function name and operator overloading and type-safe free-store memory allocation (new\/delete) and several more. 1985 was the year when the first commercial implementation was released. Also the first edition, of what became the definitive reference for the language, \u201cThe C++ Programming Language\u201d was released.\n\nIn 1989 C++ 2.0 was released, and included features such as multiple inheritance, abstract classes, static and const member functions and protected members. The Annotated C++ Reference manual was released in 1990, and became the basis for future standards.\n\nUntil 2011, the language was slowly evolving. The standard library was enlarged in 2011, with the introduction of C++11, and the currently latest release is C++14, which was a minor release. The next release of the language is planned for 2017.\n\n**Typical uses**\n\nThe list of applications you can use C++ for is endless, but just to give you an example of what has been written in C++, I\u2019ll name a few applications:\n\n11. Internet Explorer\n12. Visual Studio\n13. Microsoft Office\n14. mIRC\n15. Amazon.com\n16. MySQL\nBjarne Stroustrup has an extensive list available on his site, with many examples of other applications. You can view the list [here](http:\/\/www.stroustrup.com\/applications.html).\n\n**Example Hello World**\n\nFor this example, I\u2019ll use Microsoft Visual C++, and their compiler. Like I mentioned, there is a variety of compilers available, and the example program should work with all of the, but the compilation command may not be the same. To use this compiler, you will need Visual Studio installed. Another compiler to try is GCC, from the GNU Compiler Collection, which you may find [here](https:\/\/gcc.gnu.org\/). I have not tried that though, so I can\u2019t really tell how it is.\n\nNow let\u2019s create a file called \u201cHelloWorld.cpp\u201d, and add the following into it.\n\n #include <iostream> int main() { std::cout << \"Hello, World!\"; }\n\nIn my mind, this is much more readable than a few of the other languages I\u2019ve been through lately. We have a main entry point declared, and we print \u201cHello, World!\u201d using a function in the standard namespace. To compile and execute the application, run the following commands in a command prompt.\n\n cl \/EHsc HelloWorld.cpp HelloWorld.exe\n\nThe additional \u201c\/EHsc\u201d parameter in the compile command is just to tell the compiler how to handle certain exceptions. If everything is done correctly, you should now see \u201cHello, World!\u201d printed to the console.\n\nC++ is definitely a powerful language, and I can see why its so widely used. Personally, I never really like it, mostly because of pointers and the memory management. Bear in mind, I have only used it during my education, for one class, so if I were to look at it today, my view and understanding of it might be different.\n\nI hope to see you again tomorrow for the next language in 24 Days of Hello World!\n\n\n","html":"<p>In today&#8217;s post I want to introduce a language that has inspired many newer languages, C++. This is a general-purpose language, with imperative, object-oriented and generic programming features. It also provides support for low-level memory manipulation. Key strengths is software infrastructure and resource-constrained applications, such as desktop applications, servers and performance-critical applications (telephone switches, space probes etc.). <\/p>\n<p>Today there exists many implementation of the C++ standard, and it is available on many platforms. It is standardized by the ISO (International Organization for Standardization), where the most recent version was published in December 2014. <\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>Bjarne Stroustrup is considered to be the father of C++. His experience with programming from his Ph.D. thesis had shown him that Simula had features that were helpful for large software development. He also found that it was too slow for practical use. When he was facing the problem of analysing the UNIX kernel, in respect to distributed computing, he set out to enhance the C language. Before its final name, C++, it was referred to as &#8220;new C&#8221; and &#8220;C with Classes&#8221;.<\/p>\n<p>Classes, derived classes, strong typing, inlining and default argument were features that initially were added to C from Stroustrup. In 1983 new features were added, such as virtual functions, function name and operator overloading and type-safe free-store memory allocation (new\/delete) and several more. 1985 was the year when the first commercial implementation was released. Also the first edition, of what became the definitive reference for the language, &#8220;The C++ Programming Language&#8221; was released.<\/p>\n<p>In 1989 C++ 2.0 was released, and included features such as multiple inheritance, abstract classes, static and const member functions and protected members. The Annotated C++ Reference manual was released in 1990, and became the basis for future standards. <\/p>\n<p>Until 2011, the language was slowly evolving. The standard library was enlarged in 2011, with the introduction of C++11, and the currently latest release is C++14, which was a minor release. The next release of the language is planned for 2017.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>The list of applications you can use C++ for is endless, but just to give you an example of what has been written in C++, I&#8217;ll name a few applications:<\/p>\n<li>Internet Explorer<\/li>\n<li>Visual Studio<\/li>\n<li>Microsoft Office<\/li>\n<li>mIRC<\/li>\n<li>Amazon.com<\/li>\n<li>MySQL<\/li>\n<p>Bjarne Stroustrup has an extensive list available on his site, with many examples of other applications. You can view the list <a href=\"http:\/\/www.stroustrup.com\/applications.html\" target=\"_blank\">here<\/a>.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>For this example, I&#8217;ll use Microsoft Visual C++, and their compiler. Like I mentioned, there is a variety of compilers available, and the example program should work with all of the, but the compilation command may not be the same. To use this compiler, you will need Visual Studio installed. Another compiler to try is GCC, from the GNU Compiler Collection, which you may find <a href=\"https:\/\/gcc.gnu.org\/\" target=\"_blank\">here<\/a>. I have not tried that though, so I can&#8217;t really tell how it is. <\/p>\n<p>Now let&#8217;s create a file called &#8220;HelloWorld.cpp&#8221;, and add the following into it.<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n#include &lt;iostream&gt;\r\n\r\nint main()\r\n{\r\n  std::cout &lt;&lt; &quot;Hello, World!&quot;;\r\n}\r\n<\/pre>\n<p>In my mind, this is much more readable than a few of the other languages I&#8217;ve been through lately. We have a main entry point declared, and we print &#8220;Hello, World!&#8221; using a function in the standard namespace. To compile and execute the application, run the following commands in a command prompt.<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\ncl \/EHsc HelloWorld.cpp\r\n\r\nHelloWorld.exe\r\n<\/pre>\n<p>The additional &#8220;\/EHsc&#8221; parameter in the compile command is just to tell the compiler how to handle certain exceptions. If everything is done correctly, you should now see &#8220;Hello, World!&#8221; printed to the console.<\/p>\n<p>C++ is definitely a powerful language, and I can see why its so widely used. Personally, I never really like it, mostly because of pointers and the memory management. Bear in mind, I have only used it during my education, for one class, so if I were to look at it today, my view and understanding of it might be different.<\/p>\n<p>I hope to see you again tomorrow for the next language in 24 Days of Hello World!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 14 Dec 2015 18:00:26 +0000","created_by":1,"updated_at":"Mon, 14 Dec 2015 15:50:25 +0000","updated_by":1,"published_at":"Mon, 14 Dec 2015 18:00:26 +0000","published_by":1},{"id":618,"title":"24 Days of Hello World - Swift","slug":"24-days-of-hello-world-swift","markdown":"\nToday is the day I introduce what I believe will be the youngest language in this series. The new language from Apple, called Swift. This is a compiled language, created for iOS, OS X, watchOS and tvOS development, designed to work with Cocoa\/Cocoa Touch frameworks and the body of existing Objective-C code. Compared to Objective-C it is safer and more concise.\n\nCore concepts supported is notably dynamic dispatch, late binding, extensible programming and similar features. These are concepts that made Objective-C flexible, but Swift is designed to address problems with performance and safety trade-offs. This includes addressing null pointer problems and optimization that can flatten out method calls. It also introduced an extensibility system, which apple refer to as \u201cprotocol-oriented programming\u201d\n\n**History**\n\nIn 2010, Chris Lattner from Apple, started the development of Swift. Several languages inspired Swift, such as Haskell, C#, Ruby, Objective-C and Python. At the Worldwide Developers Conference, in 2014, a beta version was released to Apple developers, with the full release of version 1.0 later the same year. At the same conference a free manual, called \u201cThe Swift Programming Language\u201d, was also released.\n\nAt the same conference, this year Swift 2 was released. Later, with version 2.2 Swift was made open source, available for Apple\u2019s platforms and Linux.\n\n**Typical uses**\n\nSwift is primarily created to support development for iOS, OS X, watchOS and tvOS, all from Apple. Whatever idea you may have for any of these platforms, you can create it with Swift.\n\n**Example Hello World**\n\nThis will be a fairly short example. For the example you will need a Mac, of some sort, running OS X. I am running this on a Mac Mini (late 2012), with the latest version of OS X, El Capitan. You will also need XCode, which includes everything you need to develop for iOS, OS X, watchOS and tvOS. You can find it on Apple Store, and you can read more about it on [Apples website](https:\/\/developer.apple.com\/xcode\/).\n\nWith XCode installed, it\u2019s time to start it. With the entry screen open, select \u201cGet started with a playground\u201d. This will take you to a page for creating a new playground. I called mine \u201cHelloWorld\u201d, and chose iOS as the platform. You will also need to select where to create the playground.\n\nWith the text editor open, replace everything in it with the following:\n\n print(\"Hello, World!\")\n\nOn the right hand side, you should see the all-familiar \u201cHello, World!\\n\u201d printed (the last characters, \\n, is just the characters for newline). And that\u2019s about it for the example. Now you can go on to play around with Swift, and you can find more information at [Apple](https:\/\/developer.apple.com\/library\/ios\/documentation\/Swift\/Conceptual\/Swift_Programming_Language\/GuidedTour.html).\n\nFor my own use, I will not learn Swift. I use Xamarin with C# and .NET for mobile app development. That is also not an area I will focus a lot on over the next few years, as I have other things planned. More on that later.\n\nI hope you visit back tomorrow for the next post!\n\n\n","html":"<p>Today is the day I introduce what I believe will be the youngest language in this series. The new language from Apple, called Swift. This is a compiled language, created for iOS, OS X, watchOS and tvOS development, designed to work with Cocoa\/Cocoa Touch frameworks and the body of existing Objective-C code. Compared to Objective-C it is safer and more concise.<\/p>\n<p>Core concepts supported is notably dynamic dispatch, late binding, extensible programming and similar features. These are concepts that made Objective-C flexible, but Swift is designed to address problems with performance and safety trade-offs. This includes addressing null pointer problems and optimization that can flatten out method calls. It also introduced an extensibility system, which apple refer to as &#8220;protocol-oriented programming&#8221;<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>In 2010, Chris Lattner from Apple, started the development of Swift. Several languages inspired Swift, such as Haskell, C#, Ruby, Objective-C and Python. At the Worldwide Developers Conference, in 2014, a beta version was released to Apple developers, with the full release of version 1.0 later the same year. At the same conference a free manual, called &#8220;The Swift Programming Language&#8221;, was also released.<\/p>\n<p>At the same conference, this year Swift 2 was released. Later, with version 2.2 Swift was made open source, available for Apple&#8217;s platforms and Linux.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Swift is primarily created to support development for iOS, OS X, watchOS and tvOS, all from Apple. Whatever idea you may have for any of these platforms, you can create it with Swift.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>This will be a fairly short example. For the example you will need a Mac, of some sort, running OS X. I am running this on a Mac Mini (late 2012), with the latest version of OS X, El Capitan. You will also need XCode, which includes everything you need to develop for iOS, OS X, watchOS and tvOS. You can find it on Apple Store, and you can read more about it on <a href=\"https:\/\/developer.apple.com\/xcode\/\" target=\"_blank\">Apples website<\/a>.<\/p>\n<p>With XCode installed, it&#8217;s time to start it. With the entry screen open, select &#8220;Get started with a playground&#8221;. This will take you to a page for creating a new playground. I called mine &#8220;HelloWorld&#8221;, and chose iOS as the platform. You will also need to select where to create the playground.<\/p>\n<p>With the text editor open, replace everything in it with the following:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nprint(&quot;Hello, World!&quot;)\r\n<\/pre>\n<p>On the right hand side, you should see the all-familiar &#8220;Hello, World!\\n&#8221; printed (the last characters, \\n, is just the characters for newline). And that&#8217;s about it for the example. Now you can go on to play around with Swift, and you can find more information at <a href=\"https:\/\/developer.apple.com\/library\/ios\/documentation\/Swift\/Conceptual\/Swift_Programming_Language\/GuidedTour.html\" target=\"_blank\">Apple<\/a>.<\/p>\n<p>For my own use, I will not learn Swift. I use Xamarin with C# and .NET for mobile app development. That is also not an area I will focus a lot on over the next few years, as I have other things planned. More on that later.<\/p>\n<p>I hope you visit back tomorrow for the next post!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/Swift_logo_with_text.svg_.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 15 Dec 2015 18:00:33 +0000","created_by":1,"updated_at":"Tue, 15 Dec 2015 12:43:59 +0000","updated_by":1,"published_at":"Tue, 15 Dec 2015 18:00:33 +0000","published_by":1},{"id":627,"title":"24 Days of Hello World - C","slug":"24-days-of-hello-world-c-3","markdown":"\nToday I want to tell you about a language, that is one of the most widely used languages of all time, C. This is a general purpose, imperative language, which supports structured programming, lexical variable scope and recursion. Applications that were typically coded in assembly language (including operating systems), now typical is coded in C, due to its efficiency in mapping constructs to machine instructions.\n\nC has been standardized by American National Standards Institute (ANSI) since 1989, and by ISO later. It is a cross-platform language, and it has inspired quite a few other languages, such as C++, C#, Java, PHP, Perl etc.\n\n**History**\n\nC was developed by Dennis Ritchie between 1969 and 1973, where the origin was used to re-implement a Unix system. While porting the system from one computer, to another they considered using the B language. B did have some inabilities, so C was developed. The name is just the continued alphabetic order from B.\n\nBy 1973 most of Unix\u2019s kernel was written in C, due to the addition of struct types. It was one of the first kernels implemented in something else than assembly code. By 1977 there were made further changes to facilitate portability of the Unix system.\n\nIn 1978 a book named \u201cK&R\u201d was released. This was an informal specification of the language, and even though C was standardized in 1989, this book was still considered the lowest common denominator to have maximum portability in applications. The C standard has been revised several times up through the years, until the latest version, C11, which was released in 2011.\n\n**Typical uses**\n\nLike with C++, the list of applications that are created by C are too long to list. You can use it for anything from operating systems, to applications in embedded systems and supercomputers, as well as general applications.\n\n**Example Hello World**\n\nThis example will be very similar to C++. I\u2019ll run it using the same compiler from Microsoft. If you check out the [post on C++](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c-2), you will find what you need on the compiler there.\n\nNow we want to create a file called \u201cHelloWorld.c\u201d. In this file, input the following:\n\n #include<stdio.h> main() { printf(\"Hello, World!\"); }\n\nTo compile and run this program, run the following commands in a command prompt (from the same folder as the file is stored in):\n\n cl HelloWorld.c HelloWorld.exe\n\nThis should give you \u201cHello, World!\u201d.\n\nNow, even though C is one of the most used languages in the world, and without a doubt it is very powerful, I can\u2019t see myself learning it. Well, at least not in the near future. I can see it may be good to be able to read code from it, but I find it to be a bit too low-level to want to learn it.\n\nThat\u2019s it for today, make sure you check back tomorrow, for the next post in 24 Days of Hello World!\n\n\n","html":"<p>Today I want to tell you about a language, that is one of the most widely used languages of all time, C. This is a general purpose, imperative language, which supports structured programming, lexical variable scope and recursion. Applications that were typically coded in assembly language (including operating systems), now typical is coded in C, due to its efficiency in mapping constructs to machine instructions.<\/p>\n<p>C has been standardized by American National Standards Institute (ANSI) since 1989, and by ISO later. It is a cross-platform language, and it has inspired quite a few other languages, such as C++, C#, Java, PHP, Perl etc. <\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>C was developed by Dennis Ritchie between 1969 and 1973, where the origin was used to re-implement a Unix system. While porting the system from one computer, to another they considered using the B language. B did have some inabilities, so C was developed. The name is just the continued alphabetic order from B. <\/p>\n<p>By 1973 most of Unix&#8217;s kernel was written in C, due to the addition of struct types. It was one of the first kernels implemented in something else than assembly code. By 1977 there were made further changes to facilitate portability of the Unix system. <\/p>\n<p>In 1978 a book named &#8220;K&#038;R&#8221; was released. This was an informal specification of the language, and even though C was standardized in 1989, this book was still considered the lowest common denominator to have maximum portability in applications. The C standard has been revised several times up through the years, until the latest version, C11, which was released in 2011. <\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Like with C++, the list of applications that are created by C are too long to list. You can use it for anything from operating systems, to applications in embedded systems and supercomputers, as well as general applications.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>This example will be very similar to C++. I&#8217;ll run it using the same compiler from Microsoft. If you check out the <a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c-2\" target=\"_blank\">post on C++<\/a>, you will find what you need on the compiler there.<\/p>\n<p>Now we want to create a file called &#8220;HelloWorld.c&#8221;. In this file, input the following:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n#include&lt;stdio.h&gt;\r\n\r\nmain()\r\n{\r\n    printf(&quot;Hello, World!&quot;);\r\n\r\n}\r\n<\/pre>\n<p>To compile and run this program, run the following commands in a command prompt (from the same folder as the file is stored in):<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\ncl HelloWorld.c\r\n\r\nHelloWorld.exe\r\n<\/pre>\n<p>This should give you &#8220;Hello, World!&#8221;. <\/p>\n<p>Now, even though C is one of the most used languages in the world, and without a doubt it is very powerful, I can&#8217;t see myself learning it. Well, at least not in the near future. I can see it may be good to be able to read code from it, but I find it to be a bit too low-level to want to learn it.<\/p>\n<p>That&#8217;s it for today, make sure you check back tomorrow, for the next post in 24 Days of Hello World!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/The_C_Programming_Language_logo.svg_.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Wed, 16 Dec 2015 18:00:16 +0000","created_by":1,"updated_at":"Wed, 16 Dec 2015 17:45:14 +0000","updated_by":1,"published_at":"Wed, 16 Dec 2015 18:00:16 +0000","published_by":1},{"id":636,"title":"24 Days of Hello World - Objective C","slug":"24-days-of-hello-world-objective-c","markdown":"\nWith only a week left until Christmas, I want to look into another language used mostly for Apple products, Objective C. This is a general-purpose, object oriented language, which is based on C. Like with C\/C++ Objective C source code implementation usually have a program file, with \u201c.m\u201d extension, and header files, with \u201c.h\u201d extensions.\n\n**History**\n\nIn the early 1980s, Brad Cox and Tom Love created Objective C. It was inspired by the language Smalltalk, but it was also critical that it were backward compatible with C, due to it being critical for telecom engineering at their company.\n\nCox showed that to support interchangeable software languages needed to support objects, have a usable set of libraries supplied from the start and allow code to be bundled into a single cross-platform format. The creators commercialized their product, which was an Objective C compiler and class libraries, and in 1986 the main description of the language was released in book form.\n\nIn 1988 Objective C was licensed from NeXT, who extended the GCC compiler with support Objective C support. They developed Foundation kit and AppKit libraries, where user interface and Interface Builder for NeXTstep was based. Hardware wise, they didn\u2019t have much success, so they focused on software tools, as it became popular in the industry.\n\nApple acquired NeXT in 1996, and used their tools for Mac OS X. They used Objective C, the developer tool from NeXT, Project Builder and Interface Builder, which today is merged into XCode.\n\n**Typical uses******\n\nAs with Swift, the most typical places you would use Objective C is for software for Apple products.\n\n**Example Hello World**\n\nIn this example I create and compile the application on a Mac. If you read the post on [Swift](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-swift) you will see what you need to get started. To create the application we want to create a file called \u201cHelloWorld.m\u201d. Store this in a folder you can reach from the terminal, and enter the following into it:\n\n #import <Foundation\/Foundation.h> int main (int argc, const char * argv[]) { NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init]; NSLog(@\"Hello, World!\"); [pool drain] return 0; }\n\nNow you want to open the terminal (because we want to compile and execute the app without using an IDE), and run the following command (given that you are in the same folder as the \u201cHelloWorld.m\u201d file we created earler).\n\n gcc -framework Foundation HelloWorld.m -o HelloWorld\n\nThis will compile the application into a file called \u201cHelloWorld\u201d (that\u2019s what the \u201c-o\u201d parameter is), and it is using the \u201cFoundation\u201d framework. Notice that we\u2019re using GCC to compile, a tool I mentioned in both the [C](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c-3) and [C++](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c-2) posts.\n\nTo run the application simply just call the application name, in terminal, from the folder it is stored in. Note how I have added \u201c.\/\u201d in front of the application. This is simply to tell the terminal which folder to look for the application in.\n\n .\/HelloWorld\n\nThis should print out the all familiar \u201cHello, World!\u201d, and we\u2019re done! Now, as with Swift I don\u2019t want to spend too much time learning Objective-C, as its primary areas is areas where I already use C# and Xamarin.\n\nI look forward to tomorrows post, as it will be an exciting one!\n\n\n","html":"<p>With only a week left until Christmas, I want to look into another language used mostly for Apple products, Objective C. This is a general-purpose, object oriented language, which is based on C. Like with C\/C++ Objective C source code implementation usually have a program file, with &#8220;.m&#8221; extension, and header files, with &#8220;.h&#8221; extensions.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>In the early 1980s, Brad Cox and Tom Love created Objective C. It was inspired by the language Smalltalk, but it was also critical that it were backward compatible with C, due to it being critical for telecom engineering at their company. <\/p>\n<p>Cox showed that to support interchangeable software languages needed to support objects, have a usable set of libraries supplied from the start and allow code to be bundled into a single cross-platform format. The creators commercialized their product, which was an Objective C compiler and class libraries, and in 1986 the main description of the language was released in book form. <\/p>\n<p>In 1988 Objective C was licensed from NeXT, who extended the GCC compiler with support Objective C support. They developed Foundation kit and AppKit libraries, where user interface and Interface Builder for NeXTstep was based. Hardware wise, they didn&#8217;t have much success, so they focused on software tools, as it became popular in the industry.<\/p>\n<p>Apple acquired NeXT in 1996, and used their tools for Mac OS X. They used Objective C, the developer tool from NeXT, Project Builder and Interface Builder, which today is merged into XCode. <\/p>\n<p><strong>Typical uses<strong><\/p>\n<p>As with Swift, the most typical places you would use Objective C is for software for Apple products.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>In this example I create and compile the application on a Mac. If you read the post on <a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-swift\" target=\"_blank\">Swift<\/a> you will see what you need to get started. To create the application we want to create a file called &#8220;HelloWorld.m&#8221;. Store this in a folder you can reach from the terminal, and enter the following into it:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n#import &lt;Foundation\/Foundation.h&gt;\r\n\r\nint main (int argc, const char * argv[])\r\n{\r\n   NSAutoreleasePool * pool = [[NSAutoreleasePool alloc] init];\r\n   NSLog(@&quot;Hello, World!&quot;);\r\n\r\n   [pool drain]\r\n   return 0;\r\n}\r\n<\/pre>\n<p>Now you want to open the terminal (because we want to compile and execute the app without using an IDE), and run the following command (given that you are in the same folder as the &#8220;HelloWorld.m&#8221; file we created earler).<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\ngcc -framework Foundation HelloWorld.m -o HelloWorld\r\n<\/pre>\n<p>This will compile the application into a file called &#8220;HelloWorld&#8221; (that&#8217;s what the &#8220;-o&#8221; parameter is), and it is using the &#8220;Foundation&#8221; framework. Notice that we&#8217;re using GCC to compile, a tool I mentioned in both the <a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c-3\" target=\"_blank\">C<\/a> and <a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c-2\" target=\"_blank\">C++<\/a> posts.<\/p>\n<p>To run the application simply just call the application name, in terminal, from the folder it is stored in. Note how I have added &#8220;.\/&#8221; in front of the application. This is simply to tell the terminal which folder to look for the application in.<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n.\/HelloWorld\r\n<\/pre>\n<p>This should print out the all familiar &#8220;Hello, World!&#8221;, and we&#8217;re done! Now, as with Swift I don&#8217;t want to spend too much time learning Objective-C, as its primary areas is areas where I already use C# and Xamarin. <\/p>\n<p>I look forward to tomorrows post, as it will be an exciting one! <\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 17 Dec 2015 18:00:46 +0000","created_by":1,"updated_at":"Thu, 17 Dec 2015 17:45:33 +0000","updated_by":1,"published_at":"Thu, 17 Dec 2015 18:00:46 +0000","published_by":1},{"id":642,"title":"24 Days of Hello World - Cobra","slug":"24-days-of-hello-world-cobra","markdown":"\nIn today\u2019s post I\u2019ll introduce a relatively new language, running on the .NET and Mono platforms. The language is called Cobra, and it is a general-purpose, object oriented language. It supports static and dynamic typing, lambda expressions, closures, list comprehensions and generators. Cobra is open-source, currently licensed under the MIT license.\n\n**History**\n\nCobra was developed by Charles Esterbrook in 2006. It is heavily inspired by C#, Eiffel, Objective C and Python. Other than this I can\u2019t actually fin too much more of interest.\n\n**Typical uses**\n\nI haven\u2019t really found any places Cobra\u2019s typically used. According to the official website, you would want to use it if you want quick, expressive coding, fast execution, static and dynamic bindings and language level support for quality. Also I would guess that since it runs on the .NET platform you could theoretically use it for a lot of the same applications you could make in .NET.\n\n**Example Hello World**\n\nFirst, you need to download Cobra, which you can find [here](http:\/\/cobra-language.com\/downloads\/). I chose the zip file for Windows. Unzip the folder, and open it in a command line interface, as an administrator. Now you want to move into the Source folder, and then into the bin folder, where you want to run \u201cinstall-from-workspace.bat\u201d. This will install Cobra, typically to \u201cC:\/Cobra\/\u201d. You can now choose to add this to the PATH variable, I just went into the folder itself from command line. From the bin folder inside \u201cC:\/Cobra\u201d you can run \u201ccobra -h\u201d to verify that is installed correctly.\n\nNext, we want to create a file \u201cHelloWorld.cobra\u201d, which should look like this:\n\n class HelloWorld def main print 'Hello, World!'\n\nRun this file from a command line prompt, using the following command:\n\n cobra \"HelloWorld.cobra\"\n\nWhich naturally should print \u201cHello, World!\u201d to the console. Syntax wise the language seems to be pretty simple, and for me it\u2019s a big advantage that it runs on the .NET platform. However, seeing as the current stable release is to be seen as a beta, and is two years old, it does not strike me as a language that is actively developed. Also I haven\u2019t heard of any applications made with Cobra, or even heard about it before, so it is highly unlikely that I will spend time learning it. Maybe if it gets more traction in the future. Have you used Cobra? In that case, what for, and can you recommend it?\n\nCheck back tomorrow for an old-school language!\n\n\n","html":"<p>In today&#8217;s post I&#8217;ll introduce a relatively new language, running on the .NET and Mono platforms. The language is called Cobra, and it is a general-purpose, object oriented language. It supports static and dynamic typing, lambda expressions, closures, list comprehensions and generators. Cobra is open-source, currently licensed under the MIT license.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>Cobra was developed by Charles Esterbrook in 2006. It is heavily inspired by C#, Eiffel, Objective C and Python. Other than this I can&#8217;t actually fin too much more of interest.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>I haven&#8217;t really found any places Cobra&#8217;s typically used. According to the official website, you would want to use it if you want quick, expressive coding, fast execution, static and dynamic bindings and language level support for quality. Also I would guess that since it runs on the .NET platform you could theoretically use it for a lot of the same applications you could make in .NET. <\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>First, you need to download Cobra, which you can find <a href=\"http:\/\/cobra-language.com\/downloads\/\" target=\"_blank\">here<\/a>. I chose the zip file for Windows. Unzip the folder, and open it in a command line interface, as an administrator. Now you want to move into the Source folder, and then into the bin folder, where you want to run &#8220;install-from-workspace.bat&#8221;. This will install Cobra, typically to &#8220;C:\/Cobra\/&#8221;. You can now choose to add this to the PATH variable, I just went into the folder itself from command line. From the bin folder inside &#8220;C:\/Cobra&#8221; you can run &#8220;cobra -h&#8221; to verify that is installed correctly. <\/p>\n<p>Next, we want to create a file &#8220;HelloWorld.cobra&#8221;, which should look like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nclass HelloWorld\r\n    def main\r\n        print &#039;Hello, World!&#039;\r\n<\/pre>\n<p>Run this file from a command line prompt, using the following command:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\ncobra &quot;HelloWorld.cobra&quot;\r\n<\/pre>\n<p>Which naturally should print &#8220;Hello, World!&#8221; to the console. Syntax wise the language seems to be pretty simple, and for me it&#8217;s a big advantage that it runs on the .NET platform. However, seeing as the current stable release is to be seen as a beta, and is two years old, it does not strike me as a language that is actively developed. Also I haven&#8217;t heard of any applications made with Cobra, or even heard about it before, so it is highly unlikely that I will spend time learning it. Maybe if it gets more traction in the future. Have you used Cobra? In that case, what for, and can you recommend it? <\/p>\n<p>Check back tomorrow for an old-school language!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 18 Dec 2015 18:00:08 +0000","created_by":1,"updated_at":"Fri, 18 Dec 2015 17:33:30 +0000","updated_by":1,"published_at":"Fri, 18 Dec 2015 18:00:08 +0000","published_by":1},{"id":648,"title":"24 Days of Hello World - COBOL","slug":"24-days-of-hello-world-cobol","markdown":"\nIn this post I will talk a little bit about COBOL (COmmon Business-Oriented Language). This is a language designed for business use. It is imperative and procedural, and as of 2002 it is object-oriented. The language itself is mostly deployed on mainframe computers, and is used in legacy applications, like batch and transaction processing jobs.\n\nThe syntax is English-like. This is by design, as it was supposed to be self-documenting and highly readable. This does, however, mean that it is verbose, and more than 300 words is reserved. Code is split into a rigid hierarchy, and there is a lack of a large standard library. Since there were a lack of interest, amongst academic computer scientists, during COBOLs development, so it has received a lot of critics for its verbosity, design process and poor support for structured programming.\n\n**History**\n\nCOBOL is based on previous language design from Grace Hopper, and it was designed in 1959 by CODASYL. The idea for COBOL is from US Department of Defense, as they wanted to create a language that was portable, for data processing. Computer manufacturers were forced to provide it and in 1968 it was standardized. Since then the standard has been revised four times, where support for structured and object-oriented programming has been added.\n\nBeing well over 50 years, COBOL does have a huge history. I have therefore decided to just provide you with the summary here, and I want to refer you to [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/COBOL#History_and_specification) for more in-depth history.\n\n**Typical uses**\n\nDue to lack of popularity, and that a lot of the developers, who knows COBOL, is retiring it is mostly used to maintain existing applications.\n\n**Example Hello World**\n\nFor the example I had a lot of trouble of installing a compiler and make it run. In fact I ended up using an interactive tutorial website for it, so if you want to actually run the code I\u2019ll post here, you need to visit [tutorialspoint](http:\/\/www.tutorialspoint.com\/cobol\/).\n\nAnyway, the standard Hello World code for COBOL can be written like this:\n\n IDENTIFICATION DIVISION. PROGRAM-ID. HELLOWORLD. PROCEDURE DIVISION. DISPLAY 'Hello, World!'. STOP RUN.\n\nIn case you do have a COBOL compiler, you should call this file \u201cHelloWorld.cobol\u201d, and to compile and run it you need to run the following commands:\n\n $cobc -c -free -x HelloWorld.cobc 2>&1 $cobc -x -o demo HelloWorld.o 2>&1 $demo\n\nThis should give you the well-known \u201cHello, World!\u201d. Based on the syntax you can definitely see that it is easy to read. But like I mentioned in the start, the popularity is low, and you would really just use it to maintain old applications. This reason is enough for me to not spend any more time with COBOL.\n\nCheck back tomorrow for the next post in 24 Days of Hello World!\n\n\n","html":"<p>In this post I will talk a little bit about COBOL (COmmon Business-Oriented Language). This is a language designed for business use. It is imperative and procedural, and as of 2002 it is object-oriented. The language itself is mostly deployed on mainframe computers, and is used in legacy applications, like batch and transaction processing jobs. <\/p>\n<p>The syntax is English-like. This is by design, as it was supposed to be self-documenting and highly readable. This does, however, mean that it is verbose, and more than 300 words is reserved. Code is split into a rigid hierarchy, and there is a lack of a large standard library. Since there were a lack of interest, amongst academic computer scientists, during COBOLs development, so it has received a lot of critics for its verbosity, design process and poor support for structured programming.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>COBOL is based on previous language design from Grace Hopper, and it was designed in 1959 by CODASYL. The idea for COBOL is from US Department of Defense, as they wanted to create a language that was portable, for data processing. Computer manufacturers were forced to provide it and in 1968 it was standardized. Since then the standard has been revised four times, where support for structured and object-oriented programming has been added.<\/p>\n<p>Being well over 50 years, COBOL does have a huge history. I have therefore decided to just provide you with the summary here, and I want to refer you to <a href=\"https:\/\/en.wikipedia.org\/wiki\/COBOL#History_and_specification\" target=\"_blank\">Wikipedia<\/a> for more in-depth history.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Due to lack of popularity, and that a lot of the developers, who knows COBOL, is retiring it is mostly used to maintain existing applications.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>For the example I had a lot of trouble of installing a compiler and make it run. In fact I ended up using an interactive tutorial website for it, so if you want to actually run the code I&#8217;ll post here, you need to visit <a href=\"http:\/\/www.tutorialspoint.com\/cobol\/\" target=\"_blank\">tutorialspoint<\/a>.<\/p>\n<p>Anyway, the standard Hello World code for COBOL can be written like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nIDENTIFICATION DIVISION.\r\nPROGRAM-ID. HELLOWORLD.\r\n\r\nPROCEDURE DIVISION.\r\n   DISPLAY &#039;Hello, World!&#039;.\r\nSTOP RUN.\r\n<\/pre>\n<p>In case you do have a COBOL compiler, you should call this file &#8220;HelloWorld.cobol&#8221;, and to compile and run it you need to run the following commands:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n$cobc -c -free -x HelloWorld.cobc 2&gt;&amp;1\r\n\r\n$cobc -x -o demo HelloWorld.o 2&gt;&amp;1\r\n\r\n$demo \r\n<\/pre>\n<p>This should give you the well-known &#8220;Hello, World!&#8221;. Based on the syntax you can definitely see that it is easy to read. But like I mentioned in the start, the popularity is low, and you would really just use it to maintain old applications. This reason is enough for me to not spend any more time with COBOL.<\/p>\n<p>Check back tomorrow for the next post in 24 Days of Hello World!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sat, 19 Dec 2015 18:00:45 +0000","created_by":1,"updated_at":"Sat, 19 Dec 2015 16:58:33 +0000","updated_by":1,"published_at":"Sat, 19 Dec 2015 18:00:45 +0000","published_by":1},{"id":653,"title":"24 Days of Hello World - Ada","slug":"24-days-of-hello-world-ada","markdown":"\nToday I\u2019ll present the language named in honor of Ada Lovelace, Ada. This is a structured, statically typed, imperative language. It is object-oriented, and high-level, which is extended from [Pascal](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-pascal), amongst others. By using the compiler to find errors it improves code safety and maintainability.\n\nThe language have built-in support for strong typing, explicit concurrency, synchronous message passing, design-by-contract, and some more features. Ada is an international standard, defined by ISO.\n\n**History**\n\nThe proposal of Ada was made after the US Department of Defense (DoD) though there were to many programming languages for embedded systems. A group started the work to find (or create) a language suitable for requirements of the department. After the creation of Ada the number of programming languages used for these kinds of projects fell from 450 in 1983, to 37 in 1996. The standard reference was released in December 10, 1980, and named MIL-STD-1815, in honor of Ada Lovelace\u2019s birthdate.\n\nDuring its early days the programming community showed a great interest in Ada, and people predicted that it may become a huge language within general purpose applications as well. By 1991 DoD required the use of Ada in all software, but this requirement were removed in 1997.\n\nSince the early days, the compilers struggled with performance, but over the years it improved. Some features still made it difficult to use all of Ada\u2019s abilities, specially the tasking model, which was different from what programmers were used to.\n\n**Typical uses**\n\nAda is used in a wide variety of industries, and what seems to be the common nominator is that it seems to be used a lot in systems for communication. Because of its safety features it seems like a good language to use, when bugs may be extremely critical. To name a few of the industries, you have air traffic management systems, commercial aviation, communication and navigational satellites and receivers, medical industry and military applications.\n\nFor a more complete list, and more specific examples, I suggest you visit [Ada Project Summary](http:\/\/www.seas.gwu.edu\/~mfeldman\/ada-project-summary.html).\n\n**Example Hello World**\n\nThe first thing you want to do is to install a compiler. Download [GNAT](http:\/\/libre.adacore.com\/download\/). You\u2019ll want to select the \u201cFree software or academic development\u201d (unless you actually is going to use it commercially), and then click the \u201cBuild your download package\u201d. Next you want to select your platform, I chose \u201cx86 Windows (32 bits)\u201d and the default \u201cGNAT GPL 2015\u201d. Next you need to add \u201cGNAT Ada GPL 2015\u201d to the package, by selecting it from the list. Select the zip format (unless you are on another system than Windows) and click \u201cDownload selected files\u201d. When the files have downloaded, you should unzip them to a folder which is easily accessible.\n\nCreate a file called \u201cHelloWorld.ada\u201d and enter the following into it:\n\n with Ada.Text_IO; use Ada.Text_IO; procedure HelloWorld is begin Put_Line (\"Hello, World!\"); end HelloWorld;\n\nNext you need to run a command prompt and run the following to compiler and run the application:\n\n gnatmake HelloWorld.adb HelloWorld\n\nIf everything was done properly, you should be able to see \u201cHello, World!\u201d in the console window.\n\nThat is all for today, make sure you come back tomorrow, as we get closer to the finish!\n\n\n","html":"<p>Today I&#8217;ll present the language named in honor of Ada Lovelace, Ada. This is a structured, statically typed, imperative language. It is object-oriented, and high-level, which is extended from <a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-pascal\" target=\"_blank\">Pascal<\/a>, amongst others. By using the compiler to find errors it improves code safety and maintainability.<\/p>\n<p>The language have built-in support for strong typing, explicit concurrency, synchronous message passing, design-by-contract, and some more features. Ada is an international standard, defined by ISO.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>The proposal of Ada was made after the US Department of Defense (DoD) though there were to many programming languages for embedded systems. A group started the work to find (or create) a language suitable for requirements of the department. After the creation of Ada the number of programming languages used for these kinds of projects fell from 450 in 1983, to 37 in 1996. The standard reference was released in December 10, 1980, and named MIL-STD-1815, in honor of Ada Lovelace&#8217;s birthdate. <\/p>\n<p>During its early days the programming community showed a great interest in Ada, and people predicted that it may become a huge language within general purpose applications as well. By 1991 DoD required the use of Ada in all software, but this requirement were removed in 1997.<\/p>\n<p>Since the early days, the compilers struggled with performance, but over the years it improved. Some features still made it difficult to use all of Ada&#8217;s abilities, specially the tasking model, which was different from what programmers were used to.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Ada is used in a wide variety of industries, and what seems to be the common nominator is that it seems to be used a lot in systems for communication. Because of its safety features it seems like a good language to use, when bugs may be extremely critical. To name a few of the industries, you have air traffic management systems, commercial aviation, communication and navigational satellites and receivers, medical industry and military applications. <\/p>\n<p>For a more complete list, and more specific examples, I suggest you visit <a href=\"http:\/\/www.seas.gwu.edu\/~mfeldman\/ada-project-summary.html\" target=\"_blank\">Ada Project Summary<\/a>.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>The first thing you want to do is to install a compiler. Download <a href=\"http:\/\/libre.adacore.com\/download\/\" target=\"_blank\">GNAT<\/a>. You&#8217;ll want to select the &#8220;Free software or academic development&#8221; (unless you actually is going to use it commercially), and then click the &#8220;Build your download package&#8221;. Next you want to select your platform, I chose &#8220;x86 Windows (32 bits)&#8221; and the default &#8220;GNAT GPL 2015&#8221;. Next you need to add &#8220;GNAT Ada GPL 2015&#8221; to the package, by selecting it from the list. Select the zip format (unless you are on another system than Windows) and click &#8220;Download selected files&#8221;. When the files have downloaded, you should unzip them to a folder which is easily accessible. <\/p>\n<p>Create a file called &#8220;HelloWorld.ada&#8221; and enter the following into it:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nwith Ada.Text_IO; use Ada.Text_IO;\r\nprocedure HelloWorld is\r\nbegin\r\n    Put_Line (&quot;Hello, World!&quot;);\r\nend HelloWorld;\r\n<\/pre>\n<p>Next you need to run a command prompt and run the following to compiler and run the application:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\n\r\ngnatmake HelloWorld.adb\r\n\r\nHelloWorld\r\n<\/pre>\n<p>If everything was done properly, you should be able to see &#8220;Hello, World!&#8221; in the console window. <\/p>\n<p>That is all for today, make sure you come back tomorrow, as we get closer to the finish!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Sun, 20 Dec 2015 18:00:15 +0000","created_by":1,"updated_at":"Sun, 20 Dec 2015 16:28:29 +0000","updated_by":1,"published_at":"Sun, 20 Dec 2015 18:00:15 +0000","published_by":1},{"id":662,"title":"24 Days of Hello World - Visual Basic","slug":"24-days-of-hello-world-visual-basic","markdown":"\nToday I\u2019ll talk a bit about Visual Basic (VB). This is a language in the BASIC family, and it is is a event-driven language and IDE from Microsoft. It was first created to support the COM programming model from Microsoft, and it was intended to be relatively easy to learn. Seeing as it is derived from BASIC it enables rapid development of graphical user interface applications, access to databases using Data Access Objects, Remote Data Objects or ActiveX Data Objects. It also enables the creation of ActiveX controls and objects.\n\n**History**\n\nThe first version of Visual Basic was in 1991. It had a drag-and-drop design for creating user interfaces. Microsoft had Alan Cooper, from Tripod, develop this, as they had developed a prototype form generator. Microsoft wanted this to be a programmable form system for Windows 3.0, but since no programming language was included, Microsoft chose to combine this with BASIC, and Visual Basic was born.\n\nIn 1992 VB 2.0 was released in 1992, with an easier to used programming environment, and improved speed. Forms became instantiable objects, which was the foundation of class modules.\n\nVB 3.0 followed the next year, and was delivered as a standard and professional version. It included Microsofts Jet Database Engine. Two years later version 4.0 was released, which was the first version that could create 32-bit and 16-bit Windows programs. A new edition was added; Enterprise. This version used OLE controls instead of VBX controls.\n\nVersion 5.0 was released exclusively for 32-bit Windows. It was easy to convert from VB 4.0 to VB 5.0 and back though. New features also included the ability to create custom user controls and it increased the speed in calculation-intensive code, by adding the ability to compile to native Windows code.\n\nThe last release of Visual Basic was 6.0, which came in 1998. This included the ability to create web-based applications and made a number of other improvements. In 2005 Microsoft ended mainstream support, and by 2008 extended support was also ended. They do however still maintain compatibility, as there still is a large number of applications using Visual Basic, and a large number of developers using it.\n\n**Typical uses**\n\nThe idea behind Visual Basic is that it is supposed to be easy to learn and start to develop with, but it still can be utilized for a lot of different applications.\n\n**Example Hello World**\n\nTo run this example, you will need a Visual Basic compiler. I recommend you just use the one that is included with Visual Studio (you can get the community edition for free!)\n\nCreate a file called \u201cHelloWorld.vb\u201d and enter the following into it:\n\n Imports System Public Module modmain Sub Main() Console.WriteLine(\"Hello, World!\") End Sub End Module\n\nTo compile it and run it, run the following commands in a command line:\n\n vbc \/t:exe \/debug+ \/optionstrict+ \/out:.\\HelloWorld.exe HelloWorld.vb HelloWorld.exe\n\nThat should output \u201cHello, World!\u201d to the console.\n\nAs you may see, there is similarities with [C#](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c) (or shall I say, C# has similarities with VB?), in the way that you have a clear defined module (class in C#) and an entry point. Personally I\u2019ve used VB for some projects earlier, however I never got really enjoyed it.\n\nWe\u2019re closing in on Christmas now, and there are only three languages left, so I hope you check back tomorrow for the next one!\n\n\n","html":"<p>Today I&#8217;ll talk a bit about Visual Basic (VB). This is a language in the BASIC family, and it is is a event-driven language and IDE from Microsoft. It was first created to support the COM programming model from Microsoft, and it was intended to be relatively easy to learn. Seeing as it is derived from BASIC it enables rapid development of graphical user interface applications, access to databases using Data Access Objects, Remote Data Objects or ActiveX Data Objects. It also enables the creation of ActiveX controls and objects.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>The first version of Visual Basic was in 1991. It had a drag-and-drop design for creating user interfaces. Microsoft had Alan Cooper, from Tripod, develop this, as they had developed a prototype form generator. Microsoft wanted this to be a programmable form system for Windows 3.0, but since no programming language was included, Microsoft chose to combine this with BASIC, and Visual Basic was born.<\/p>\n<p>In 1992 VB 2.0 was released in 1992, with an easier to used programming environment, and improved speed. Forms became instantiable objects, which was the foundation of class modules.<\/p>\n<p>VB 3.0 followed the next year, and was delivered as a standard and professional version. It included Microsofts Jet Database Engine. Two years later version 4.0 was released, which was the first version that could create 32-bit and 16-bit Windows programs. A new edition was added; Enterprise. This version used OLE controls instead of VBX controls.<\/p>\n<p>Version 5.0 was released exclusively for 32-bit Windows. It was easy to convert from VB 4.0 to VB 5.0 and back though. New features also included the ability to create custom user controls and it increased the speed in calculation-intensive code, by adding the ability to compile to native Windows code. <\/p>\n<p>The last release of Visual Basic was 6.0, which came in 1998. This included the ability to create web-based applications and made a number of other improvements. In 2005 Microsoft ended mainstream support, and by 2008 extended support was also ended. They do however still maintain compatibility, as there still is a large number of applications using Visual Basic, and a large number of developers using it.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>The idea behind Visual Basic is that it is supposed to be easy to learn and start to develop with, but it still can be utilized for a lot of different applications. <\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>To run this example, you will need a Visual Basic compiler. I recommend you just use the one that is included with Visual Studio (you can get the community edition for free!)<\/p>\n<p>Create a file called &#8220;HelloWorld.vb&#8221; and enter the following into it:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nImports System\r\n\r\nPublic Module modmain\r\n    Sub Main()\r\n        Console.WriteLine(&quot;Hello, World!&quot;)\r\n    End Sub\r\nEnd Module\r\n<\/pre>\n<p>To compile it and run it, run the following commands in a command line:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nvbc \/t:exe \/debug+ \/optionstrict+ \/out:.\\HelloWorld.exe HelloWorld.vb\r\n\r\nHelloWorld.exe\r\n<\/pre>\n<p>That should output &#8220;Hello, World!&#8221; to the console. <\/p>\n<p>As you may see, there is similarities with <a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c\" target=\"_blank\">C#<\/a> (or shall I say, C# has similarities with VB?), in the way that you have a clear defined module (class in C#) and an entry point. Personally I&#8217;ve used VB for some projects earlier, however I never got really enjoyed it.<\/p>\n<p>We&#8217;re closing in on Christmas now, and there are only three languages left, so I hope you check back tomorrow for the next one!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 21 Dec 2015 18:19:04 +0000","created_by":1,"updated_at":"Mon, 21 Dec 2015 18:19:04 +0000","updated_by":1,"published_at":"Mon, 21 Dec 2015 18:19:04 +0000","published_by":1},{"id":667,"title":"24 Days of Hello World - Rust","slug":"24-days-of-hello-world-rust","markdown":"\nWith only a few days left until Christmas, I want to tell you a bit about a relatively new language, Rust. This is a general-purpose, multi-paradigm, compiled language, designed to a safe, concurrent and practical language. It is developed by Mozilla Research, and it supports pure-functional, concurrent-actor, imperative-procedural and object-oriented styles. Today development is sponsored by Mozilla, however it it a open community project.\n\n**History**\n\nRust started out as a personal project by Graydon Hoare, from Mozilla. In 2009 Mozilla started to sponsor the project, and it was first announced in 2010. Originally the compiler was written in OCaml, but in 2010 they started the work to make it self-hosting, which they succeeded with in 2011. The first stable release (1.0) was released earlier this year.\n\n**Typical uses**\n\nBeing such a new language, I haven\u2019t really found any places where Rust is typically used. In general though, it seems that Rust aims to be able to do what C\/C++ does, but in a way where you have more control, and the safety of compile-time error checking as opposed to runtime error checking.\n\n**Example Hello World**\n\nThe first thing you want to do is to install Rust. Go to [rust-lang.org](https:\/\/www.rust-lang.org\/). If you click the \u201cInstall\u201d button, you will get the proper installer for your platform. I just installed it with default settings, and the installation process should be fairly quick. When the installation is done, you can open the \u201cRust Shell\u201d, and verify that the installation succeeded by running the command \u201crustc -h\u201d. This should print some help text for the compiler.\n\nNow you want to create a file called \u201cHelloWorld.rs\u201d. Make it look like this:\n\n fn main() { println!(\"Hello, World!\"); }\n\nTo compile and run this, run the following commands from the Rust shell:\n\n rustc HelloWorld.rs HelloWorld.exe\n\nWhich, if everything is done correctly, should print out \u201cHello, World!\u201d.\n\nBeing such a new language it will be interesting to pay attention to it in the future. I see a lot of different opinions on Rust online, both good and bad, so it will be exciting to see if it gets any traction.\n\nCheck back tomorrow for a new language, it is also a relatively new one!\n\n\n","html":"<p>With only a few days left until Christmas, I want to tell you a bit about a relatively new language, Rust. This is a general-purpose, multi-paradigm, compiled language, designed to a safe, concurrent and practical language. It is developed by Mozilla Research, and it supports pure-functional, concurrent-actor, imperative-procedural and object-oriented styles. Today development is sponsored by Mozilla, however it it a open community project.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>Rust started out as a personal project by Graydon Hoare, from Mozilla. In 2009 Mozilla started to sponsor the project, and it was first announced in 2010. Originally the compiler was written in OCaml, but in 2010 they started the work to make it self-hosting, which they succeeded with in 2011. The first stable release (1.0) was released earlier this year.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Being such a new language, I haven&#8217;t really found any places where Rust is typically used. In general though, it seems that Rust aims to be able to do what C\/C++ does, but in a way where you have more control, and the safety of compile-time error checking as opposed to runtime error checking.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>The first thing you want to do is to install Rust. Go to <a href=\"https:\/\/www.rust-lang.org\/\" target=\"_blank\">rust-lang.org<\/a>. If you click the &#8220;Install&#8221; button, you will get the proper installer for your platform. I just installed it with default settings, and the installation process should be fairly quick. When the installation is done, you can open the &#8220;Rust Shell&#8221;, and verify that the installation succeeded by running the command &#8220;rustc -h&#8221;. This should print some help text for the compiler.<\/p>\n<p>Now you want to create a file called &#8220;HelloWorld.rs&#8221;. Make it look like this:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nfn main() {\r\n   println!(&quot;Hello, World!&quot;);\r\n}\r\n<\/pre>\n<p>To compile and run this, run the following commands from the Rust shell:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nrustc HelloWorld.rs\r\n\r\nHelloWorld.exe\r\n<\/pre>\n<p>Which, if everything is done correctly, should print out &#8220;Hello, World!&#8221;. <\/p>\n<p>Being such a new language it will be interesting to pay attention to it in the future. I see a lot of different opinions on Rust online, both good and bad, so it will be exciting to see if it gets any traction.<\/p>\n<p>Check back tomorrow for a new language, it is also a relatively new one!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/Rust_programming_language_black_logo.svg_.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Tue, 22 Dec 2015 18:00:13 +0000","created_by":1,"updated_at":"Tue, 22 Dec 2015 12:06:44 +0000","updated_by":1,"published_at":"Tue, 22 Dec 2015 18:00:13 +0000","published_by":1},{"id":679,"title":"24 Days of Hello World - Go","slug":"24-days-of-hello-world-go","markdown":"\nIt is the day before Christmas, and today I\u00b4ll also talk about a relatively new language, called Go. This is a compiled, statically typed language, primarily designed for systems programming. It has features such as garbage collection, various safety features and CSP-style concurrent programming. Today there are two major implementations. Google has one called \u201cgc\u201d, which is open source and targets different platforms. The second one is called \u201cgccgo\u201d, and is a GCC frontend.\n\n**History**\n\nRobert Griesemer, Rob Pike and Ken Thompson, from Google, experimented with a design for a new systems programming language. This led to Go, which was announced in 2009. The basic idea was to have statically typed language, that is scalable to large systems, be light (like dynamic languages) and support networking and multiprocessing.\n\n**Typical uses**\n\nAs described, Go is designed for systems programming, basically to replace C++\/Java applications. Google uses it for quite a few internal applications, amongst others is their download service for Chrome, Android SDK and Google Earth.\n\n**Example Hello World**\n\nFirst you need to download the source code or binaries. I chose binaries for Windows 64-bit. You can find the downloads at [go-lang.org](https:\/\/golang.org\/), just click \u201cDownload Go\u201d and it will take you to a list of binaries. I ran the installation with default settings, and it was done fairly quick. To verify that the installation succeeded, you may run a command prompt and run \u201cgo version\u201d, which should output the currently installed version.\n\nBefore we create our file, we need to setup a workspace. Create a directory, and point the GOPATH environment variable to that directory. Inside that folder, create a new folder called \u201csrc\u201d and a folder called \u201cHelloWorld\u201d inside that. This is where you create a file called \u201cHelloWorld.go\u201d. Let the contents of that file be the following:\n\n package main import \"fmt\" func main() { fmt.print(\"Hello, World!\") }\n\nNow to compile it, run the following command from a command line:\n\n go install HelloWorld\n\nThe executable has now been placed in a folder called \u201cbin\u201d at the same level as the \u201csrc\u201d folder you created earlier. In the command prompt, navigate to the bin folder, and run \u201cHelloWorld.exe\u201d and see the all familiar \u201cHello, World!\u201d printed to the screen.\n\nI will probably not be spending any more time with Go, as it is not designed for the applications I look to create, or currently are working on. If I in the future will need something similar, I might look into it a bit more.\n\nTomorrow is Christmas Eve, and it will mark the end of this series, so be sure to check back, and find out which language I will finish off with!\n\n\n","html":"<p>It is the day before Christmas, and today I\u00b4ll also talk about a relatively new language, called Go. This is a compiled, statically typed language, primarily designed for systems programming. It has features such as garbage collection, various safety features and CSP-style concurrent programming. Today there are two major implementations. Google has one called &#8220;gc&#8221;, which is open source and targets different platforms. The second one is called &#8220;gccgo&#8221;, and is a GCC frontend.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>Robert Griesemer, Rob Pike and Ken Thompson, from Google, experimented with a design for a new systems programming language. This led to Go, which was announced in 2009. The basic idea was to have statically typed language, that is scalable to large systems, be light (like dynamic languages) and support networking and multiprocessing.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>As described, Go is designed for systems programming, basically to replace C++\/Java applications. Google uses it for quite a few internal applications, amongst others is their download service for Chrome, Android SDK and Google Earth.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>First you need to download the source code or binaries. I chose binaries for Windows 64-bit. You can find the downloads at <a href=\"https:\/\/golang.org\/\" target=\"_blank\">go-lang.org<\/a>, just click &#8220;Download Go&#8221; and it will take you to a list of binaries. I ran the installation with default settings, and it was done fairly quick. To verify that the installation succeeded, you may run a command prompt and run &#8220;go version&#8221;, which should output the currently installed version. <\/p>\n<p>Before we create our file, we need to setup a workspace. Create a directory, and point the GOPATH environment variable to that directory. Inside that folder, create a new folder called &#8220;src&#8221; and a folder called &#8220;HelloWorld&#8221; inside that. This is where you create a file called &#8220;HelloWorld.go&#8221;. Let the contents of that file be the following:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\npackage main\r\n\r\nimport &quot;fmt&quot;\r\n\r\nfunc main() {\r\n    fmt.print(&quot;Hello, World!&quot;)\r\n}\r\n<\/pre>\n<p>Now to compile it, run the following command from a command line:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\ngo install HelloWorld\r\n<\/pre>\n<p>The executable has now been placed in a folder called &#8220;bin&#8221; at the same level as the &#8220;src&#8221; folder you created earlier. In the command prompt, navigate to the bin folder, and run &#8220;HelloWorld.exe&#8221; and see the all familiar &#8220;Hello, World!&#8221; printed to the screen.<\/p>\n<p>I will probably not be spending any more time with Go, as it is not designed for the applications I look to create, or currently are working on. If I in the future will need something similar, I might look into it a bit more.<\/p>\n<p>Tomorrow is Christmas Eve, and it will mark the end of this series, so be sure to check back, and find out which language I will finish off with!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/Golang.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Wed, 23 Dec 2015 18:00:28 +0000","created_by":1,"updated_at":"Wed, 23 Dec 2015 16:50:26 +0000","updated_by":1,"published_at":"Wed, 23 Dec 2015 18:00:28 +0000","published_by":1},{"id":682,"title":"24 Days of Hello World - Python","slug":"24-days-hello-world-python","markdown":"\nWe have finally reached Christmas Eve, and the final language in this series, Python. This is a general-purpose, high-level language, designed to emphasize code readability. It supports object-oriented, imperative and functional, as well as procedural programming styles. It has a large standard library, and it provides a dynamic type system and automatic memory management.\n\nPython is available for many platforms, and there are third-party tools to allow packaging in such a way that you can have it as a stand-alone executable, without needing to install an interpreter. The reference implementation, CPython, is open-source, and follows a community-based development process. This is the case with almost all of the alternative implementations.\n\n**History**\n\nThe implementation of Python was started in 1989, by Guido van Rossum. Originally it was a successor to the ABC language, with added exception handling and interfacing the Amoeba operating system. In 2000 version 2.0 was released, and included a number of new features. This included a cycle-detecting garbage collector and support for Unicode. In 2008 version 3.0 was released, which is the latest release, and it is backwards-incompatible. However, many of its features have been ported back to version 2.6 and 2.7, which is backwards-compatible, and as such you see two version maintained today. This is due to the fact that a lot of applications is written in version 2.x.\n\n**Typical uses**\n\nPython is a general-purpose language, and can be used many places. To mention a few you, have web frameworks, such as Django, e-mail processing and data analysis and modelling. For more samples of where it is used, check out the sample list at [python.org](https:\/\/www.python.org\/about\/apps\/).\n\n**Example Hello World**\n\nFor this example, I\u2019ll be using Python 3.5.1, which you can find at [python.org](https:\/\/www.python.org\/downloads\/). When the installation starts, make sure you check the \u201cAdd Python 3.5 to PATH\u201d at the bottom of the first screen. I went on from there by selecting \u201cInstall Now\u201d. You might have to restart the machine, for the PATH variable to be updated. When the installation is done, verify that it was successful by running \u201cpython\u201d, followed by \u201chelp()\u201d in a command line, which should give you the help utility.\n\nNow create a file called \u201cHelloWorld.py\u201d. Enter the following into it:\n\n print (\"Hello, World!\")\n\nRun it by running the following command in a command line:\n\n python HelloWorld.py\n\nThis should give you \u201cHello, World!\u201d.\n\nPython is a language I am interested in learning, and it is the language I have planned to learn during next year. More on that later though.\n\nSo that\u00b4s it for 24 Days of Hello World. I have been through 24 more or less different languages. I will summarize this experience with a new post tomorrow, so be sure to check back for that as well!\n\nUntil then, merry Christmas!\n\n\n","html":"<p>We have finally reached Christmas Eve, and the final language in this series, Python. This is a general-purpose, high-level language, designed to emphasize code readability. It supports object-oriented, imperative and functional, as well as procedural programming styles. It has a large standard library, and it provides a dynamic type system and automatic memory management.<\/p>\n<p>Python is available for many platforms, and there are third-party tools to allow packaging in such a way that you can have it as a stand-alone executable, without needing to install an interpreter. The reference implementation, CPython, is open-source, and follows a community-based development process. This is the case with almost all of the alternative implementations.<\/p>\n<p><!--more--><\/p>\n<p><strong>History<\/strong><\/p>\n<p>The implementation of Python was started in 1989, by Guido van Rossum. Originally it was a successor to the ABC language, with added exception handling and interfacing the Amoeba operating system. In 2000 version 2.0 was released, and included a number of new features. This included a cycle-detecting garbage collector and support for Unicode. In 2008 version 3.0 was released, which is the latest release, and it is backwards-incompatible. However, many of its features have been ported back to version 2.6 and 2.7, which is backwards-compatible, and as such you see two version maintained today. This is due to the fact that a lot of applications is written in version 2.x.<\/p>\n<p><strong>Typical uses<\/strong><\/p>\n<p>Python is a general-purpose language, and can be used many places. To mention a few you, have web frameworks, such as Django, e-mail processing and data analysis and modelling. For more samples of where it is used, check out the sample list at <a href=\"https:\/\/www.python.org\/about\/apps\/\" target=\"_blank\">python.org<\/a>.<\/p>\n<p><strong>Example Hello World<\/strong><\/p>\n<p>For this example, I&#8217;ll be using Python 3.5.1, which you can find at <a href=\"https:\/\/www.python.org\/downloads\/\" target=\"_blank\">python.org<\/a>. When the installation starts, make sure you check the &#8220;Add Python 3.5 to PATH&#8221; at the bottom of the first screen. I went on from there by selecting &#8220;Install Now&#8221;. You might have to restart the machine, for the PATH variable to be updated. When the installation is done, verify that it was successful by running &#8220;python&#8221;, followed by &#8220;help()&#8221; in a command line, which should give you the help utility. <\/p>\n<p>Now create a file called &#8220;HelloWorld.py&#8221;. Enter the following into it:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nprint (&quot;Hello, World!&quot;)\r\n<\/pre>\n<p>Run it by running the following command in a command line:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\npython HelloWorld.py\r\n<\/pre>\n<p>This should give you &#8220;Hello, World!&#8221;.<\/p>\n<p>Python is a language I am interested in learning, and it is the language I have planned to learn during next year. More on that later though.<\/p>\n<p>So that\u00b4s it for 24 Days of Hello World. I have been through 24 more or less different languages. I will summarize this experience with a new post tomorrow, so be sure to check back for that as well!<\/p>\n<p>Until then, merry Christmas!<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/Python_logo_and_wordmark.svg_.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Thu, 24 Dec 2015 18:00:40 +0000","created_by":1,"updated_at":"Thu, 24 Dec 2015 09:45:53 +0000","updated_by":1,"published_at":"Thu, 24 Dec 2015 18:00:40 +0000","published_by":1},{"id":692,"title":"24 Days of Hello World - Summary","slug":"24-days-of-hello-world-summary","markdown":"\nOver the past 24 days, I have posted a new post daily, with a new programming language each day. Each post have told a bit about some key features of each language, a bit on the history, typical uses and an example of how to use the language. For me it has been an interesting series, and I have learnt quite a bit.\n\nDuring this series, I have covered the following languages:\n\n4. [C#](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c)\n5. [Java](http:\/\/leiflarsen.org\/2015\/24-days-hello-world-java)\n6. [Ruby](http:\/\/leiflarsen.org\/2015\/24-days-hello-world-ruby)\n7. [Erlang](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-erlang)\n8. [Perl](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-perl)\n9. [F#](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-f)\n10. [Node.JS](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-node-js)\n11. [Haskell](http:\/\/leiflarsen.org\/2015\/24-days-hello-world-haskell)\n12. [R](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-r)\n13. [PHP](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-php)\n14. [Clojure](http:\/\/leiflarsen.org\/2015\/24-days-hello-world-clojure)\n15. [Pascal](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-pascal)\n16. [Lisp](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-lisp)\n17. [C++](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c-2)\n18. [Swift](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-swift)\n19. [C](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c-3)\n20. [Objective C](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-objective-c)\n21. [Cobra](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-cobra)\n22. [COBOL](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-cobol)\n23. [Ada](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-ada)\n24. [Visual Basic](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-visual-basic)\n25. [Rust](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-rust)\n26. [Go](http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-go)\n27. [Python](http:\/\/leiflarsen.org\/2015\/24-days-hello-world-python)\nAs you can see it has been a lot of work writing about all of these languages, but a lot of fun as well. Naturally I have met challenges during the writing. One of the harder ones was to work with some of the older languages, such as Ada and COBOL. Both of these turned out to give me quite a bit of trouble when writing the example, as I had a hard time getting the compilers work with Windows. Another challenge I was facing was to choose which languages to write about. Before I started I had created a list of languages I wanted to feature, but as I discovered during the work, several of the ones I had chosen, came from the same family, and had so many similarities that I had to drop one of them. A third challenge was to keep the posts short. As you may imagine, some of these languages have a huge history, and in general there is a lot to write about regarding all languages, but to write all would take too much time, and would probably be boring to read.\n\nI haven\u2019t just met challenges though. For me it has been a great experience to learn about all these languages, and see how different languages have developed over time. As a developer I think it is important to at least know of other languages, and how they compare to what you would usually use, so that you can choose the right language for the right project. Some of these languages I had barely heard of before, so it\u2019s nice to actually get to know them, even if it\u2019s on a very high level.\n\nAs an addition to this series, I have created a repository on [GitHub](https:\/\/github.com\/leif-larsen\/24-Days-of-Hello-World), containing all the code samples from the series (well, at least that is the intention, the files will be committed within a few days). Do take a look at it if you want.\n\nAnd with that I\u2019ll end this post, and thank you for following along this \u201cadvent calendar\u201d this year. Hope you have enjoyed it, and if you do have any ideas on what I can do next year, feel free to tell me!\n\n\n","html":"<p>Over the past 24 days, I have posted a new post daily, with a new programming language each day. Each post have told a bit about some key features of each language, a bit on the history, typical uses and an example of how to use the language. For me it has been an interesting series, and I have learnt quite a bit. <\/p>\n<p><!--more--><\/p>\n<p>During this series, I have covered the following languages:<\/p>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c\" target=\"_blank\">C#<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-hello-world-java\" target=\"_blank\">Java<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-hello-world-ruby\" target=\"_blank\">Ruby<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-erlang\" target=\"_blank\">Erlang<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-perl\" target=\"_blank\">Perl<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-f\" target=\"_blank\">F#<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-node-js\" target=\"_blank\">Node.JS<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-hello-world-haskell\" target=\"_blank\">Haskell<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-r\" target=\"_blank\">R<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-php\" target=\"_blank\">PHP<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-hello-world-clojure\" target=\"_blank\">Clojure<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-pascal\" target=\"_blank\">Pascal<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-lisp\" target=\"_blank\">Lisp<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c-2\" target=\"_blank\">C++<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-swift\" target=\"_blank\">Swift<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-c-3\" target=\"_blank\">C<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-objective-c\" target=\"_blank\">Objective C<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-cobra\" target=\"_blank\">Cobra<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-cobol\" target=\"_blank\">COBOL<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-ada\" target=\"_blank\">Ada<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-visual-basic\" target=\"_blank\">Visual Basic<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-rust\" target=\"_blank\">Rust<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-of-hello-world-go\" target=\"_blank\">Go<\/a><\/li>\n<li><a href=\"http:\/\/leiflarsen.org\/2015\/24-days-hello-world-python\" target=\"_blank\">Python<\/a><\/li>\n<p>As you can see it has been a lot of work writing about all of these languages, but a lot of fun as well. Naturally I have met challenges during the writing. One of the harder ones was to work with some of the older languages, such as Ada and COBOL. Both of these turned out to give me quite a bit of trouble when writing the example, as I had a hard time getting the compilers work with Windows. Another challenge I was facing was to choose which languages to write about. Before I started I had created a list of languages I wanted to feature, but as I discovered during the work, several of the ones I had chosen, came from the same family, and had so many similarities that I had to drop one of them. A third challenge was to keep the posts short. As you may imagine, some of these languages have a huge history, and in general there is a lot to write about regarding all languages, but to write all would take too much time, and would probably be boring to read. <\/p>\n<p>I haven&#8217;t just met challenges though. For me it has been a great experience to learn about all these languages, and see how different languages have developed over time. As a developer I think it is important to at least know of other languages, and how they compare to what you would usually use, so that you can choose the right language for the right project. Some of these languages I had barely heard of before, so it&#8217;s nice to actually get to know them, even if it&#8217;s on a very high level.<\/p>\n<p>As an addition to this series, I have created a repository on <a href=\"https:\/\/github.com\/leif-larsen\/24-Days-of-Hello-World\" target=\"_blank\">GitHub<\/a>, containing all the code samples from the series (well, at least that is the intention, the files will be committed within a few days). Do take a look at it if you want.<\/p>\n<p>And with that I&#8217;ll end this post, and thank you for following along this &#8220;advent calendar&#8221; this year. Hope you have enjoyed it, and if you do have any ideas on what I can do next year, feel free to tell me!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Fri, 25 Dec 2015 19:10:28 +0000","created_by":1,"updated_at":"Fri, 25 Dec 2015 19:10:28 +0000","updated_by":1,"published_at":"Fri, 25 Dec 2015 19:10:28 +0000","published_by":1},{"id":699,"title":"New year - New goals","slug":"new-year-new-goals","markdown":"\nHappy new year! A bit late, I know, but better late than never. I hope you all had a nice time during the holiday season. I took some time off from work, and generally tried to disconnect for a bit, which I believe I managed. I have tried to use my time for other stuff than being at the computer (or my phone), which has given me a new boost of energy. So let\u2019s kick of this year by looking at some of my goals for the year.\n\nActually, before I look into my goals, I want to take a few moments to review the goals I set for 2015. That was the first year I actually set some yearly goals, and it would be interesting to see whether or not I managed to reach them.\n\nSo these were my goals, along with a comment on how I did.\n\n- Write at least 25 blog posts \u2013 This one I succeeded at achieving, mostly due to my \u201c24 Days of Hello World\u201d series, but I was also pretty consistent with my blogging throughout the year. The only really long break was during the summer months when I was moving.\n- Release at least 3 apps \u2013 Like I wrote in my post naming my goals for 2015, this was probably not going to succeed, and it didn\u2019t. One of the ideas I planned to execute, I decided to drop. Also the second app I developed got put into release acceptance to late to be released before the end of the year, but it will probably be released within the next two weeks, depending on the\u00a0work-load for the testers at Apple.\n- Do some kind of workout at least 120 times \u2013 This one failed miserably, unfortunately. From the time I started moving, my willpower failed to push me to the gym, and during the fall I had some medical issues that prevented me from training for almost two months. December was good though, but not good enough to reach my target.\n- Improve my programming skills \u2013 This one I can for sure say was successful, as I am much more confident in programming than I was at the start of the year. Now I have no trouble in creating applications on my own, and I feel my understanding of the technologies I am using have increased a lot. There is still room for improvement, off course, but that\u2019s the way it should be.\n\nAll in all the year was a good one, even if I didn\u2019t manage to reach all of my targets. I did however learn a lot about the amount of work I am able to put in during my own time, and as such my goals for 2016 should be a bit more realistic. So here they are:\n\n- Complete at least 400 hours at [FreeCodeCamp.com](http:\/\/www.freecodecamp.com\/)\n- Go through all available courses on Ethical Hacking at Pluralsight\n- Learn Python to the extent that I can create new functional applications with confidence\n- Create at least 3 modules for my home automation project\n- Write 50 blog posts\n- Read at least 11 books\n- Tweet at least once daily\n- Reach at least a follower count of 250 on Twitter\n- Work out 3 times a week on average throughout the whole year\n\nAs you notice this year will be a lot about learning. For the first point, I want to refresh my HTML\/CSS\/JavaScript knowledge, since the world has developed quite a bit since I used it actively. Also it is technologies that is widely in use. [Free Code Camp](http:\/\/www.freecodecamp.com\/) is a site that provides around 2000 hours of free lessons on these topics, with the purpose of being able to build up a portfolio, and become able to develop web sites. As a side note I will also continue my .NET and C# learning, by practicing this at my day job, which\u00a0is why I don\u2019t have any particular goals for it here.\n\nFurther on I want to spend quite a bit of time learning about ethical hacking, to be able to learn more about it security, as this is a field I have had an interest of for a long time.\n\nI have also set a few goals related to\u00a0Twitter activity, as I simply want to participate more in the community. This also means I am aiming to write at least one blog post per week.\n\nThese goals are all goals that applies to the full year, but I will split all of them into smaller goals. I aim to have quarterly goals and monthly goals, to ensure I actually can reach them. This is something I will define in more details personally, and finish before this month ends. Hopefully I\u2019ll be able to complete all of the targets, without feeling overwhelmed, I think it should be doable. What do you think? Also, have you made any plans and created some goals this year?\n\n\u00a0\n\n\n","html":"<p>Happy new year! A bit late, I know, but better late than never. I hope you all had a nice time during the holiday season. I took some time off from work, and generally tried to disconnect for a bit, which I believe I managed. I have tried to use my time for other stuff than being at the computer (or my phone), which has given me a new boost of energy. So let&#8217;s kick of this year by looking at some of my goals for the year.<\/p>\n<p><!--more--><\/p>\n<p>Actually, before I look into my goals, I want to take a few moments to review the goals I set for 2015. That was the first year I actually set some yearly goals, and it would be interesting to see whether or not I managed to reach them.<\/p>\n<p>So these were my goals, along with a comment on how I did.<\/p>\n<ul>\n<li>Write at least 25 blog posts &#8211; This one I succeeded at achieving, mostly due to my &#8220;24 Days of Hello World&#8221; series, but I was also pretty consistent with my blogging throughout the year. The only really long break was during the summer months when I was moving.<\/li>\n<li>Release at least 3 apps &#8211; Like I wrote in my post naming my goals for 2015, this was probably not going to succeed, and it didn&#8217;t. One of the ideas I planned to execute, I decided to drop. Also the second app I developed got put into release acceptance to late to be released before the end of the year, but it will probably be released within the next two weeks, depending on the\u00a0work-load for the testers at Apple.<\/li>\n<li>Do some kind of workout at least 120 times &#8211; This one failed miserably, unfortunately. From the time I started moving, my willpower failed to push me to the gym, and during the fall I had some medical issues that prevented me from training for almost two months. December was good though, but not good enough to reach my target.<\/li>\n<li>Improve my programming skills &#8211; This one I can for sure say was successful, as I am much more confident in programming than I was at the start of the year. Now I have no trouble in creating applications on my own, and I feel my understanding of the technologies I am using have increased a lot. There is still room for improvement, off course, but that&#8217;s the way it should be.<\/li>\n<\/ul>\n<p>All in all the year was a good one, even if I didn&#8217;t manage to reach all of my targets. I did however learn a lot about the amount of work I am able to put in during my own time, and as such my goals for 2016 should be a bit more realistic. So here they are:<\/p>\n<ul>\n<li>Complete at least 400 hours at <a href=\"http:\/\/www.freecodecamp.com\/\" target=\"_blank\">FreeCodeCamp.com<\/a><\/li>\n<li>Go through all available courses on Ethical Hacking at Pluralsight<\/li>\n<li>Learn Python to the extent that I can create new functional applications with confidence<\/li>\n<li>Create at least 3 modules for my home automation project<\/li>\n<li>Write 50 blog posts<\/li>\n<li>Read at least 11 books<\/li>\n<li>Tweet at least once daily<\/li>\n<li>Reach at least a follower count of 250 on Twitter<\/li>\n<li>Work out 3 times a week on average throughout the whole year<\/li>\n<\/ul>\n<p>As you notice this year will be a lot about learning. For the first point, I want to refresh my HTML\/CSS\/JavaScript knowledge, since the world has developed quite a bit since I used it actively. Also it is technologies that is widely in use. <a href=\"http:\/\/www.freecodecamp.com\/\" target=\"_blank\">Free Code Camp<\/a> is a site that provides around 2000 hours of free lessons on these topics, with the purpose of being able to build up a portfolio, and become able to develop web sites. As a side note I will also continue my .NET and C# learning, by practicing this at my day job, which\u00a0is why I don&#8217;t have any particular goals for it here.<\/p>\n<p>Further on I want to spend quite a bit of time learning about ethical hacking, to be able to learn more about it security, as this is a field I have had an interest of for a long time.<\/p>\n<p>I have also set a few goals related to\u00a0Twitter activity, as I simply want to participate more in the community. This also means I am aiming to write at least one blog post per week.<\/p>\n<p>These goals are all goals that applies to the full year, but I will split all of them into smaller goals. I aim to have quarterly goals and monthly goals, to ensure I actually can reach them. This is something I will define in more details personally, and finish before this month ends. Hopefully I&#8217;ll be able to complete all of the targets, without feeling overwhelmed, I think it should be doable. What do you think? Also, have you made any plans and created some goals this year?<\/p>\n<p>&nbsp;<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 04 Jan 2016 19:08:50 +0000","created_by":1,"updated_at":"Mon, 04 Jan 2016 19:08:50 +0000","updated_by":1,"published_at":"Mon, 04 Jan 2016 19:08:50 +0000","published_by":1},{"id":482,"title":"Official Raspberry Pi Display and Windows 10 IoT Core","slug":"official-raspberry-pi-display-and-windows-10-iot-core","markdown":"\nLast year an official touch display for Raspberry Pi [was released](https:\/\/www.raspberrypi.org\/blog\/the-eagerly-awaited-raspberry-pi-display\/). Naturally that was something I had to get my hands on, and I did. The screen itself is 7\u2033, has a screen resolution of 800 x 480 px and has 10 finger capacitive touch. For my use I immediately thought of using it as a controller for my home automation system, which is currently in the making.\n\nIn this post I will walk you through how to mount the display properly and getting started with it. I know I had some issues when setting it up, probably mostly due to the fact that I haven\u2019t explored how to mount ribbon cables on the Pi enough. The end result will look like this:\n\n![IMG_0851](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0851-300x225.jpg?fit=300%2C225)\n\nAs you may note, I have Windows 10 IoT installed here. As of today this does not include support for touch functionality. I know there are some libraries out there, which gives this support, so I will explore this later, and report on this later. For now, if you need touch support I would suggest you get the latest version of Raspbian OS. Also you should know you need at least Windows 10 IoT version 10.0.10556, from the Windows Insider Preview. You can find information and downloads at\u00a0[Windows Dev Center](https:\/\/ms-iot.github.io\/content\/en-US\/Downloads.htm).\n\nThe display looks like this when it\u2019s straight out of the box:\n\n<figure class=\"wp-caption aligncenter\" id=\"attachment_756\" style=\"width: 300px\">![IMG_0862](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0862-300x225.jpg?fit=300%2C225)<figcaption class=\"wp-caption-text\">The front<\/figcaption><\/figure><figure class=\"wp-caption aligncenter\" id=\"attachment_755\" style=\"width: 300px\">![IMG_0861](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0861-300x225.jpg?fit=300%2C225)<figcaption class=\"wp-caption-text\">The back<\/figcaption><\/figure>A nice feature that followed along was a stand for it. Mounting this was quite easy, you just add layer on layer, following the instructions given. The result should look like this:\n\n![IMG_0866](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0866-300x225.jpg?fit=300%2C225)\n\nThere was an adapter board included, naturally. This was the next thing to attach. Before placing it though, it is smart to connect the display ribbon cable to the back of the adapter board.\n\n<figure class=\"wp-caption aligncenter\" id=\"attachment_754\" style=\"width: 300px\">![IMG_0860](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0860-300x225.jpg?fit=300%2C225)<figcaption class=\"wp-caption-text\">Ribbon cable attached to adapter board<\/figcaption><\/figure>I struggled a bit here, since I didn\u2019t realize that the black bar needed to be pulled out, and pushed back in when the cable was attached. Also I found that you really need to ensure that is properly attached, as the screen won\u2019t display anything if it is loose.\n\nWhen this is done, you can attach the adapter board to the back of the screen, and attach the smaller touch ribbon cable in the slot called J4.\n\n<figure class=\"wp-caption aligncenter\" id=\"attachment_753\" style=\"width: 300px\">![IMG_0859](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0859-300x225.jpg?fit=300%2C225)<figcaption class=\"wp-caption-text\">Touch screen ribbon on J4<\/figcaption><\/figure>Next it is time to attach the DSI ribbon cable, which will be connected to the Pi, to the adapter board.\n\n<figure class=\"wp-caption aligncenter\" id=\"attachment_751\" style=\"width: 300px\">![IMG_0857](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0857-300x225.jpg?fit=300%2C225)<figcaption class=\"wp-caption-text\">DSI ribbon attached to adapter board<\/figcaption><\/figure>Moving on to the Pi itself. This should be placed with the pins facing upwards (I don\u2019t actually think there is room the other way). Attach it so that you can attach the DSI ribbon cable to the port called \u201cDISPLAY\u201d. It should look like this:\n\n<figure class=\"wp-caption aligncenter\" id=\"attachment_749\" style=\"width: 300px\">![IMG_0855](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0855-300x225.jpg?fit=300%2C225)<figcaption class=\"wp-caption-text\">Pi with DSI cable attached<\/figcaption><\/figure>When this is done it should be possible to power up the Pi and the display, and see something on the screen. There are a few ways to power both the Pi and the screen. You can either connect jumper wires from the Pi and to the display, and power the adapter board with a 2Amp power supply. Another option is to use the USB connection from the adapter board to power the Pi from that. That is what I\u2019m currently doing.\n\nAll in all the finished mount should look something like this (note: I have not attached power to the Pi in any ways here):\n\n<figure class=\"wp-caption aligncenter\" id=\"attachment_748\" style=\"width: 300px\">![IMG_0854](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0854-300x225.jpg?fit=300%2C225)<figcaption class=\"wp-caption-text\">Pi and display mounted<\/figcaption><\/figure>Once this is mounted you can power up, and you should be able to see something on the display. If not, you should check the ribbon cables. If you\u2019re using Windows 10 IoT you will need to connect an external mouse\/keyboard as well (at least until Microsoft adds support for touch, or you find a third-party library which does it). If you use Raspbian OS you will need to add some updates to be able to use the touch functionality. These are:\n\n sudo apt-get update sudo apt-get upgrade\n\nA few words on the quality and such. The display shows color ok, and the picture is crisp. If would off course be better with higher resolution, but I think it is ok, at least for the areas I will use it for. When it comes to the stand it is nice to have, but at the same time it kind of blocks some of the connections. The USB connection from the adapter board is a bit awkward, and the same goes for the USB and network connection to the Pi. It is very nice if you don\u2019t need any of these though.\n\nThat\u2019s it for now, I hope you\u2019re able to follow along with the instructions, if needed. If you do have this display yourself, are you using it with Raspbian or Windows 10 IoT? Are you happy with it?\n\n\n","html":"<p>Last year an official touch display for Raspberry Pi <a href=\"https:\/\/www.raspberrypi.org\/blog\/the-eagerly-awaited-raspberry-pi-display\/\" target=\"_blank\">was released<\/a>. Naturally that was something I had to get my hands on, and I did. The screen itself is 7&#8243;, has a screen resolution of 800 x 480 px and has 10 finger capacitive touch. For my use I immediately thought of using it as a controller for my home automation system, which is currently in the making.<\/p>\n<p><!--more--><\/p>\n<p>In this post I will walk you through how to mount the display properly and getting started with it. I know I had some issues when setting it up, probably mostly due to the fact that I haven&#8217;t explored how to mount ribbon cables on the Pi enough. The end result will look like this:<\/p>\n<p><img class=\" size-medium wp-image-745 aligncenter\" src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0851-300x225.jpg?fit=300%2C225\" alt=\"IMG_0851\" srcset=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0851.jpg?resize=300%2C225 300w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0851.jpg?resize=768%2C576 768w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0851.jpg?resize=1024%2C768 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/p>\n<p>As you may note, I have Windows 10 IoT installed here. As of today this does not include support for touch functionality. I know there are some libraries out there, which gives this support, so I will explore this later, and report on this later. For now, if you need touch support I would suggest you get the latest version of Raspbian OS. Also you should know you need at least Windows 10 IoT version 10.0.10556, from the Windows Insider Preview. You can find information and downloads at\u00a0<a href=\"https:\/\/ms-iot.github.io\/content\/en-US\/Downloads.htm\" target=\"_blank\">Windows Dev Center<\/a>.<\/p>\n<p>The display looks like this when it&#8217;s straight out of the box:<\/p>\n<figure id=\"attachment_756\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><img class=\"alignleft size-medium wp-image-756\" src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0862-300x225.jpg?fit=300%2C225\" alt=\"IMG_0862\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0862.jpg?resize=300%2C225 300w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0862.jpg?resize=768%2C576 768w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0862.jpg?resize=1024%2C768 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><figcaption class=\"wp-caption-text\">The front<\/figcaption><\/figure>\n<figure id=\"attachment_755\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><img class=\"alignleft size-medium wp-image-755\" src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0861-300x225.jpg?fit=300%2C225\" alt=\"IMG_0861\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0861.jpg?resize=300%2C225 300w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0861.jpg?resize=768%2C576 768w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0861.jpg?resize=1024%2C768 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><figcaption class=\"wp-caption-text\">The back<\/figcaption><\/figure>\n<p>A nice feature that followed along was a stand for it. Mounting this was quite easy, you just add layer on layer, following the instructions given. The result should look like this:<\/p>\n<p><img class=\" size-medium wp-image-760 aligncenter\" src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0866-300x225.jpg?fit=300%2C225\" alt=\"IMG_0866\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0866.jpg?resize=300%2C225 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0866.jpg?resize=768%2C576 768w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0866.jpg?resize=1024%2C768 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/p>\n<p>There was an adapter board included, naturally. This was the next thing to attach. Before placing it though, it is smart to connect the display ribbon cable to the back of the adapter board.<\/p>\n<figure id=\"attachment_754\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><img class=\" size-medium wp-image-754 aligncenter\" src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0860-300x225.jpg?fit=300%2C225\" alt=\"IMG_0860\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0860.jpg?resize=300%2C225 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0860.jpg?resize=768%2C576 768w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0860.jpg?resize=1024%2C768 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><figcaption class=\"wp-caption-text\">Ribbon cable attached to adapter board<\/figcaption><\/figure>\n<p>I struggled a bit here, since I didn&#8217;t realize that the black bar needed to be pulled out, and pushed back in when the cable was attached. Also I found that you really need to ensure that is properly attached, as the screen won&#8217;t display anything if it is loose.<\/p>\n<p>When this is done, you can attach the adapter board to the back of the screen, and attach the smaller touch ribbon cable in the slot called J4.<\/p>\n<figure id=\"attachment_753\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><img class=\" size-medium wp-image-753 aligncenter\" src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0859-300x225.jpg?fit=300%2C225\" alt=\"IMG_0859\" srcset=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0859.jpg?resize=300%2C225 300w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0859.jpg?resize=768%2C576 768w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0859.jpg?resize=1024%2C768 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><figcaption class=\"wp-caption-text\">Touch screen ribbon on J4<\/figcaption><\/figure>\n<p>Next it is time to attach the DSI ribbon cable, which will be connected to the Pi, to the adapter board.<\/p>\n<figure id=\"attachment_751\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><img class=\" size-medium wp-image-751 aligncenter\" src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0857-300x225.jpg?fit=300%2C225\" alt=\"IMG_0857\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0857.jpg?resize=300%2C225 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0857.jpg?resize=768%2C576 768w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0857.jpg?resize=1024%2C768 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><figcaption class=\"wp-caption-text\">DSI ribbon attached to adapter board<\/figcaption><\/figure>\n<p>Moving on to the Pi itself. This should be placed with the pins facing upwards (I don&#8217;t actually think there is room the other way). Attach it so that you can attach the DSI ribbon cable to the port called &#8220;DISPLAY&#8221;. It should look like this:<\/p>\n<figure id=\"attachment_749\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><img class=\" size-medium wp-image-749 aligncenter\" src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0855-300x225.jpg?fit=300%2C225\" alt=\"IMG_0855\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0855.jpg?resize=300%2C225 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0855.jpg?resize=768%2C576 768w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0855.jpg?resize=1024%2C768 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><figcaption class=\"wp-caption-text\">Pi with DSI cable attached<\/figcaption><\/figure>\n<p>When this is done it should be possible to power up the Pi and the display, and see something on the screen. There are a few ways to power both the Pi and the screen. You can either connect jumper wires from the Pi and to the display, and power the adapter board with a 2Amp power supply. Another option is to use the USB connection from the adapter board to power the Pi from that. That is what I&#8217;m currently doing.<\/p>\n<p>All in all the finished mount should look something like this (note: I have not attached power to the Pi in any ways here):<\/p>\n<figure id=\"attachment_748\" style=\"width: 300px\" class=\"wp-caption aligncenter\"><img class=\" size-medium wp-image-748 aligncenter\" src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0854-300x225.jpg?fit=300%2C225\" alt=\"IMG_0854\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0854.jpg?resize=300%2C225 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0854.jpg?resize=768%2C576 768w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0854.jpg?resize=1024%2C768 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><figcaption class=\"wp-caption-text\">Pi and display mounted<\/figcaption><\/figure>\n<p>Once this is mounted you can power up, and you should be able to see something on the display. If not, you should check the ribbon cables. If you&#8217;re using Windows 10 IoT you will need to connect an external mouse\/keyboard as well (at least until Microsoft adds support for touch, or you find a third-party library which does it). If you use Raspbian OS you will need to add some updates to be able to use the touch functionality. These are:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nsudo apt-get update\r\n\r\nsudo apt-get upgrade\r\n<\/pre>\n<p>A few words on the quality and such. The display shows color ok, and the picture is crisp. If would off course be better with higher resolution, but I think it is ok, at least for the areas I will use it for. When it comes to the stand it is nice to have, but at the same time it kind of blocks some of the connections. The USB connection from the adapter board is a bit awkward, and the same goes for the USB and network connection to the Pi. It is very nice if you don&#8217;t need any of these though.<\/p>\n<p>That&#8217;s it for now, I hope you&#8217;re able to follow along with the instructions, if needed. If you do have this display yourself, are you using it with Raspbian or Windows 10 IoT? Are you happy with it?<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2015\/12\/IMG_0851.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 11 Jan 2016 18:00:07 +0000","created_by":1,"updated_at":"Sun, 10 Jan 2016 19:11:21 +0000","updated_by":1,"published_at":"Mon, 11 Jan 2016 18:00:07 +0000","published_by":1},{"id":821,"title":"New app released","slug":"new-app-released","markdown":"\nToday I am officially announcing that\u00a0my second app, \u201cDin Lokale Dyrlege\u201d (Your Local Vet), has been\u00a0released. This is an app released only for the Norwegian app stores, for iOS, Windows Phone 8 and Android. I originally aimed to release this app last year, however due to me being a bit behind schedule I didn\u2019t manage that. When I got to the stage where I were to submit the app, it was Christmas, and vacation time for the app store reviewers.\n\n\n## The general stuff\n\n<figure class=\"wp-caption alignleft\" id=\"attachment_850\" style=\"width: 169px\">![Entry page \"Din Lokale Dyrlege\"](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/0x0ss-169x300.jpg?fit=169%2C300)<figcaption class=\"wp-caption-text\">Entry page<\/figcaption><\/figure><figure class=\"wp-caption alignleft\" id=\"attachment_848\" style=\"width: 169px\">![Search results \"Din Lokale Dyrlege\"](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/0x0ss-1-169x300.jpg?fit=169%2C300)<figcaption class=\"wp-caption-text\">Search results<\/figcaption><\/figure><figure class=\"wp-caption alignleft\" id=\"attachment_849\" style=\"width: 169px\">![Vet details \"Din Lokale Dyrlege\"](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/0x0ss-2-169x300.jpg?fit=169%2C300)<figcaption class=\"wp-caption-text\">Vet details<\/figcaption><\/figure>The app aims to provide information on veterinarians from all over Norway. Information like telephone number, e-mail address, visiting address, opening hours, expertise etc. This is all stuff that is available online today, so why did I create an app for it?\n\nThere are primarily two reasons for this. First and foremost it is to have a list available easily. Say you are on vacation somewhere, and your dog (which you off course brought along!) gets ill. How do you find a veterinarian in the place you are? You could naturally search for it on the web, but I believe that it is more convenient to be able to look up that information in an app. In addition you have the possibility to see whether or not there are more veterinarians in the area or no. Maybe the place you\u2019re at have three different vets, all with different opening hours, maybe one has emergency service. Not all have good websites online, or have done a poor job with SEO, so you might not find them.\n\nAs of today the app contains information about 400 veterinarians, but I intend to increase this number significantly. This amount includes clinics around the country, but I know there are a lot of specialists in different fields that also needs to be included. To be able to gather more of these I am relying on user feedback, and more specifically I am asking around on different forums\/Facebook groups for information. Isn\u2019t this a great amount of work, you may ask. Well, yes. I have spent quite a bit of time finding veterinarians and gathering information on them, and that is also why I am charging a small fee for the app.\n\n\n## The technical stuff\n\nAs for the more technical bit, I assume some of you would like to know more on the technologies I am using. The backend service I am using is Parse, which I have mentioned in a [previous blog post](http:\/\/leiflarsen.org\/2015\/cloud-based-back-end-service). This is also what I used for my previous app, [Parker Gratis](http:\/\/leiflarsen.org\/2015\/released-my-first-ios-app). This time I am handling all user input, so for the end-user it will just be reading of data. I still chose to use a cloud based backend service, instead of a local database, as I see potential possibilities to expand the app with more user interacting features. To input data I have created a locally hosted website, where I use JavaScript to input the data.\n\nAs for the app itself, I have programmed everything in C#, using Xamarin Forms. Unlike my previous app this could share most of the code, and I just had to write some code for communication with Parse for all three platforms. Other platform specific features I needed, such as location, I found third-party packages to use.\n\nIf you want to try the app, and you\u2019re in Norway, you can get it at the app store of your phone:\n\n[App Store](https:\/\/itunes.apple.com\/us\/app\/din-lokale-dyrlege\/id982914308?l=nb&ls=1&mt=8)\n\n[Google Play Store](https:\/\/play.google.com\/store\/apps\/details?id=org.leiflarsen.thelocalvet)\n\n[Windows Phone Store](https:\/\/www.microsoft.com\/store\/apps\/9NBLGGH5K1S1)\n\n\n","html":"<p>Today I am officially announcing that\u00a0my second app, &#8220;Din Lokale Dyrlege&#8221; (Your Local Vet), has been\u00a0released. This is an app released only for the Norwegian app stores, for iOS, Windows Phone 8 and Android. I originally aimed to release this app last year, however due to me being a bit behind schedule I didn&#8217;t manage that. When I got to the stage where I were to submit the app, it was Christmas, and vacation time for the app store reviewers.<\/p>\n<p><!--more--><\/p>\n<h2>The general stuff<\/h2>\n<figure id=\"attachment_850\" style=\"width: 169px\" class=\"wp-caption alignleft\"><img class=\"size-medium wp-image-850\" src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/0x0ss-169x300.jpg?fit=169%2C300\" alt=\"Entry page &quot;Din Lokale Dyrlege&quot;\" data-recalc-dims=\"1\" \/><figcaption class=\"wp-caption-text\">Entry page<\/figcaption><\/figure>\n<figure id=\"attachment_848\" style=\"width: 169px\" class=\"wp-caption alignleft\"><img class=\"size-medium wp-image-848\" src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/0x0ss-1-169x300.jpg?fit=169%2C300\" alt=\"Search results &quot;Din Lokale Dyrlege&quot;\" data-recalc-dims=\"1\" \/><figcaption class=\"wp-caption-text\">Search results<\/figcaption><\/figure>\n<figure id=\"attachment_849\" style=\"width: 169px\" class=\"wp-caption alignleft\"><img class=\"size-medium wp-image-849\" src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/0x0ss-2-169x300.jpg?fit=169%2C300\" alt=\"Vet details &quot;Din Lokale Dyrlege&quot;\" data-recalc-dims=\"1\" \/><figcaption class=\"wp-caption-text\">Vet details<\/figcaption><\/figure>\n<p>The app aims to provide information on veterinarians from all over Norway. Information like telephone number, e-mail address, visiting address, opening hours, expertise etc. This is all stuff that is available online today, so why did I create an app for it?<\/p>\n<p>There are primarily two reasons for this. First and foremost it is to have a list available easily. Say you are on vacation somewhere, and your dog (which you off course brought along!) gets ill. How do you find a veterinarian in the place you are? You could naturally search for it on the web, but I believe that it is more convenient to be able to look up that information in an app. In addition you have the possibility to see whether or not there are more veterinarians in the area or no. Maybe the place you&#8217;re at have three different vets, all with different opening hours, maybe one has emergency service. Not all have good websites online, or have done a poor job with SEO, so you might not find them.<\/p>\n<p>As of today the app contains information about 400 veterinarians, but I intend to increase this number significantly. This amount includes clinics around the country, but I know there are a lot of specialists in different fields that also needs to be included. To be able to gather more of these I am relying on user feedback, and more specifically I am asking around on different forums\/Facebook groups for information. Isn&#8217;t this a great amount of work, you may ask. Well, yes. I have spent quite a bit of time finding veterinarians and gathering information on them, and that is also why I am charging a small fee for the app.<\/p>\n<h2>The technical stuff<\/h2>\n<p>As for the more technical bit, I assume some of you would like to know more on the technologies I am using. The backend service I am using is Parse, which I have mentioned in a <a href=\"http:\/\/leiflarsen.org\/2015\/cloud-based-back-end-service\" target=\"_blank\">previous blog post<\/a>. This is also what I used for my previous app, <a href=\"http:\/\/leiflarsen.org\/2015\/released-my-first-ios-app\" target=\"_blank\">Parker Gratis<\/a>. This time I am handling all user input, so for the end-user it will just be reading of data. I still chose to use a cloud based backend service, instead of a local database, as I see potential possibilities to expand the app with more user interacting features. To input data I have created a locally hosted website, where I use JavaScript to input the data.<\/p>\n<p>As for the app itself, I have programmed everything in C#, using Xamarin Forms. Unlike my previous app this could share most of the code, and I just had to write some code for communication with Parse for all three platforms. Other platform specific features I needed, such as location, I found third-party packages to use.<\/p>\n<p>If you want to try the app, and you&#8217;re in Norway, you can get it at the app store of your phone:<\/p>\n<p><a href=\"https:\/\/itunes.apple.com\/us\/app\/din-lokale-dyrlege\/id982914308?l=nb&amp;ls=1&amp;mt=8\" target=\"_blank\">App Store<\/a><\/p>\n<p><a href=\"https:\/\/play.google.com\/store\/apps\/details?id=org.leiflarsen.thelocalvet\" target=\"_blank\">Google Play Store<\/a><\/p>\n<p><a href=\"https:\/\/www.microsoft.com\/store\/apps\/9NBLGGH5K1S1\" target=\"_blank\">Windows Phone Store<\/a><\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/interface11.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 18 Jan 2016 18:00:00 +0000","created_by":1,"updated_at":"Sun, 17 Jan 2016 13:18:39 +0000","updated_by":1,"published_at":"Mon, 18 Jan 2016 18:00:00 +0000","published_by":1},{"id":845,"title":"Releasing an app - Windows Phone","slug":"releasing-an-app-windows-phone","markdown":"\nSeeing as my new app, [\u201cDin Lokale Dyrlege\u201d](http:\/\/leiflarsen.org\/2016\/new-app-released), was released last week, I thought I could go through the process of releasing an app. I released this app for iOS, Android and Windows Phone, using Xamarin Forms to achieve cross-platform development. This meant I could program once, and utilize most of my code for all three platforms.\n\nNow the interesting thing is going through the release process. It can be quite \u201cconfusing\u201d, and not completely straight forward to release an app, maybe even more so if you use Xamarin Forms. This post is the first, in a three-part series on releasing apps created with Xamarin Forms. Naturally the release process is similar if you release for Xamarin.iOS, Xamarin.Android or Windows Phone separately, and it\u2019s just a few additional steps compared to native development. I have chosen to start this series with the guide for Windows Phone, as Xamarin doesn\u2019t have any guides for this yet.\n\nBefore I move on, I\u2019ll assume you already have a working app, which compiles and runs without errors (at least without critical, app crashing errors). I\u2019ll also assume you have artwork for app store images, and potentially marketing images, if you have that.\n\nWe want to start with doing a few things in Visual Studio. This is to ensure that we pass a few tests and also that we have images we will need. Let\u2019s start with the screen shots. When you submit an app for Windows Phone, you will need to provide at least one screen shot. I recommend you take screen shots for the sizes 768 x 1280, 720 x 1280 and 480 x 800 px. This is so we can add them to our app for automated tests. You can easily do this by using the Windows Phone emulator.  \n[![Screen shot Windows Phone Emulator](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/ScreenShots-300x266.png?fit=300%2C266)](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/ScreenShots.png)\n\nNext we want to do some initial testing, which will make the submission a bit quicker, because we then have already verified some parts of the app. Start by opening the Windows Phone Store Tester Kit (select the project you want to test, open the \u201cProject\u201d menu and select \u201cOpen Store Tester Kit\u201d).  \n[![Store Test Kit](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit-300x204.png?fit=300%2C204)](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit.png) [![Store Test Kit image 2](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit2-300x73.png?fit=300%2C73)](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit2.png)\n\nIn the \u201cApplication Details\u201d tab you\u2019ll need to input store tile image, screen shots for WVGA, WXGA and 720p. In the \u201cAutomated Test\u201d tab you\u2019ll need to run the automated tests. These will evaluate the app against the submission requirements. If everything passes, you\u2019re good to go. You can also run the application analysis tool to optimize the app as well as manual tests. There is a lot of the manual tests though, and not all will be relevant for your app.\n\nNext we want to go\u00a0[Windows Dev Center](https:\/\/dev.windows.com\/en-us). For the sake of length (and also the fact that I registered a long time ago, and can\u2019t remember the procedure) I\u2019ll assume you\u2019re already registered here. Anyway, you\u2019ll want to go to the dashboard, and register a new app. When you\u2019re in your dashboard, you\u2019ll want to click on \u201cCreate a new app\u201d under \u201cMy apps\u201d on the left side. Then you register the name of the app (make sure you check the availability for the name). This step may be wise to do when you start development, if you have a common name for the app.\n\n[![My apps in Windows Dev Center](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/NewApp1-150x150.png?resize=143%2C150)](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/NewApp1.png) [![New app submission](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/NewApp2-300x129.png?fit=300%2C129)](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/NewApp2.png)\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\nWhen this is done it\u2019s time to start the submission process. Under \u201cApp overview\u201d click on \u201cStart your submission\u201d. This will take you to a submission page, which has a few steps you need to finish before you can submit the app. These are all steps that can be saved, and you can come back to this later. Say you input some description early, but need to wait for testing before you upload the app package. When you have finished all steps, you can click on \u201cSubmit to the store\u201d to start the submission process.\n\n[![Start app submission](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission1-300x71.png?fit=300%2C71)](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission1.png) [![App submission page](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission2-300x170.png?fit=300%2C170)](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission2.png)\n\nSo as you see the first option is \u201cPricing and availability\u201d. This is where you decide the price (or if it is for free), as well as which countries it should be available in. Note, if you are taking a fee for the app, you\u2019ll need to fill in some additional information for Microsoft, so you can receive payments legally. This is not something I\u2019ll be covering in this post. On this page you can also decide if you want to have sales, decide visibility in the store, volume licensing for organizations and the release date. When it comes to the release date you can choose to automatically release it when it passes certification (which is the default), release it manually after it has passed certification or the last one no sooner than a given date.\n\nThe next page is the app properties. This is where you set the category and subcategory, age rating (where you can set different ratings for different countries), what hardware is required by the app, as well as some declarations.\n\nPackages is the page where you post the app packages. This is just the release build from Visual Studio. Make sure you are logged in with the same account in Visual Studio when you build the app, as the one you\u2019re releasing the app with. The file you need to upload is the projects \u201cxap\u201d file, which can be found under the release folder (given that you have built a Xamarin Forms app, which has shared code). Just upload this file, and move on to the next tab, which is \u201cDescription\u201d. You can create descriptions for several different languages, so you can localize your app. This is where you\u2019ll fill in release notes, app description, tile icon, screen shots and promotional artwork. You should also add keywords, copyright info, website, support contact information and if needed, link to a [privacy policy](http:\/\/leiflarsen.org\/2014\/privacy-settings-windows-store-app).\n\nThe last page you can go to is optional. This is if the testers at Microsoft needs more detailed information or a test account for test purposes. For instance, in my last app, there was no veterinarians in the US (since it\u2019s a Norwegian app), so I specified a few places for the testers to search for, so they could see\u00a0some more interesting stuff than just the first page. Like I said, this page is optional, so if there is no need for additional information to the testers, this could be left empty.\n\nWhen all this is finished, you may submit your app. It should go fairly quick to pass the certification (at least if you pass all the requirements), as an illustration of that, my last app took about 6 hours before it had passed. You will be notified along the process, so if the certification fails, you will know, and if it succeeds, you will be given the link to the app in the store. Note, it will take up to 16 hours for the app to be visible in the store after the certification has passed.\n\nSo that\u2019s it for submitting an app for Windows Phone in the Windows Phone Store. Next week I\u2019ll cover the same process for iOS and the Apple Store, a bit more tedious process in my opinion.\n\n\n","html":"<p>Seeing as my new app, <a href=\"http:\/\/leiflarsen.org\/2016\/new-app-released\" target=\"_blank\">&#8220;Din Lokale Dyrlege&#8221;<\/a>, was released last week, I thought I could go through the process of releasing an app. I released this app for iOS, Android and Windows Phone, using Xamarin Forms to achieve cross-platform development. This meant I could program once, and utilize most of my code for all three platforms.<\/p>\n<p>Now the interesting thing is going through the release process. It can be quite &#8220;confusing&#8221;, and not completely straight forward to release an app, maybe even more so if you use Xamarin Forms. This post is the first, in a three-part series on releasing apps created with Xamarin Forms. Naturally the release process is similar if you release for Xamarin.iOS, Xamarin.Android or Windows Phone separately, and it&#8217;s just a few additional steps compared to native development. I have chosen to start this series with the guide for Windows Phone, as Xamarin doesn&#8217;t have any guides for this yet.<\/p>\n<p><!--more--><\/p>\n<p>Before I move on, I&#8217;ll assume you already have a working app, which compiles and runs without errors (at least without critical, app crashing errors). I&#8217;ll also assume you have artwork for app store images, and potentially marketing images, if you have that.<\/p>\n<p>We want to start with doing a few things in Visual Studio. This is to ensure that we pass a few tests and also that we have images we will need. Let&#8217;s start with the screen shots. When you submit an app for Windows Phone, you will need to provide at least one screen shot. I recommend you take screen shots for the sizes 768 x 1280, 720 x 1280 and 480 x 800 px. This is so we can add them to our app for automated tests. You can easily do this by using the Windows Phone emulator.<br \/>\n<a href=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/ScreenShots.png\"  rel=\"lightbox[845] attachment wp-att-867\"><img class=\"aligncenter size-medium wp-image-867\" src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/ScreenShots-300x266.png?fit=300%2C266\" alt=\"Screen shot Windows Phone Emulator\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/ScreenShots.png?resize=300%2C266 300w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/ScreenShots.png?w=680 680w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><\/p>\n<p>Next we want to do some initial testing, which will make the submission a bit quicker, because we then have already verified some parts of the app. Start by opening the Windows Phone Store Tester Kit (select the project you want to test, open the &#8220;Project&#8221; menu and select &#8220;Open Store Tester Kit&#8221;).<br \/>\n<a href=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit.png\"  rel=\"lightbox[845] attachment wp-att-869\"><img class=\" size-medium wp-image-869 alignleft\" src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit-300x204.png?fit=300%2C204\" alt=\"Store Test Kit\" srcset=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit.png?resize=300%2C204 300w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit.png?resize=768%2C522 768w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit.png?w=948 948w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><a href=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit2.png\"  rel=\"lightbox[845] attachment wp-att-870\"><img class=\" size-medium wp-image-870 alignleft\" src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit2-300x73.png?fit=300%2C73\" alt=\"Store Test Kit image 2\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit2.png?resize=300%2C73 300w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit2.png?resize=768%2C187 768w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit2.png?resize=1024%2C250 1024w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/StoreTestKit2.png?w=1487 1487w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><\/p>\n<p>In the &#8220;Application Details&#8221; tab you&#8217;ll need to input store tile image, screen shots for WVGA, WXGA and 720p. In the &#8220;Automated Test&#8221; tab you&#8217;ll need to run the automated tests. These will evaluate the app against the submission requirements. If everything passes, you&#8217;re good to go. You can also run the application analysis tool to optimize the app as well as manual tests. There is a lot of the manual tests though, and not all will be relevant for your app.<\/p>\n<p>Next we want to go\u00a0<a href=\"https:\/\/dev.windows.com\/en-us\" target=\"_blank\">Windows Dev Center<\/a>. For the sake of length (and also the fact that I registered a long time ago, and can&#8217;t remember the procedure) I&#8217;ll assume you&#8217;re already registered here. Anyway, you&#8217;ll want to go to the dashboard, and register a new app. When you&#8217;re in your dashboard, you&#8217;ll want to click on &#8220;Create a new app&#8221; under &#8220;My apps&#8221; on the left side. Then you register the name of the app (make sure you check the availability for the name). This step may be wise to do when you start development, if you have a common name for the app.<\/p>\n<p><a href=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/NewApp1.png\"  rel=\"lightbox[845] attachment wp-att-872\"><img class=\"alignleft size-thumbnail wp-image-872\" src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/NewApp1-150x150.png?resize=143%2C150\" alt=\"My apps in Windows Dev Center\" data-recalc-dims=\"1\" \/><\/a><a href=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/NewApp2.png\"  rel=\"lightbox[845] attachment wp-att-873\"><img class=\" size-medium wp-image-873 alignleft\" src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/NewApp2-300x129.png?fit=300%2C129\" alt=\"New app submission\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/NewApp2.png?resize=300%2C129 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/NewApp2.png?resize=768%2C329 768w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/NewApp2.png?w=816 816w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>When this is done it&#8217;s time to start the submission process. Under &#8220;App overview&#8221; click on &#8220;Start your submission&#8221;. This will take you to a submission page, which has a few steps you need to finish before you can submit the app. These are all steps that can be saved, and you can come back to this later. Say you input some description early, but need to wait for testing before you upload the app package. When you have finished all steps, you can click on &#8220;Submit to the store&#8221; to start the submission process.<\/p>\n<p><a href=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission1.png\"  rel=\"lightbox[845] attachment wp-att-875\"><img class=\"alignleft size-medium wp-image-875\" src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission1-300x71.png?fit=300%2C71\" alt=\"Start app submission\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission1.png?resize=300%2C71 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission1.png?resize=768%2C181 768w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission1.png?resize=1024%2C242 1024w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission1.png?w=1127 1127w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><a href=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission2.png\"  rel=\"lightbox[845] attachment wp-att-876\"><img class=\"alignleft size-medium wp-image-876\" src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission2-300x170.png?fit=300%2C170\" alt=\"App submission page\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission2.png?resize=300%2C170 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission2.png?resize=768%2C436 768w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission2.png?resize=1024%2C581 1024w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/01\/Submission2.png?w=1118 1118w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><\/p>\n<p>So as you see the first option is &#8220;Pricing and availability&#8221;. This is where you decide the price (or if it is for free), as well as which countries it should be available in. Note, if you are taking a fee for the app, you&#8217;ll need to fill in some additional information for Microsoft, so you can receive payments legally. This is not something I&#8217;ll be covering in this post. On this page you can also decide if you want to have sales, decide visibility in the store, volume licensing for organizations and the release date. When it comes to the release date you can choose to automatically release it when it passes certification (which is the default), release it manually after it has passed certification or the last one no sooner than a given date.<\/p>\n<p>The next page is the app properties. This is where you set the category and subcategory, age rating (where you can set different ratings for different countries), what hardware is required by the app, as well as some declarations.<\/p>\n<p>Packages is the page where you post the app packages. This is just the release build from Visual Studio. Make sure you are logged in with the same account in Visual Studio when you build the app, as the one you&#8217;re releasing the app with. The file you need to upload is the projects &#8220;xap&#8221; file, which can be found under the release folder (given that you have built a Xamarin Forms app, which has shared code). Just upload this file, and move on to the next tab, which is &#8220;Description&#8221;. You can create descriptions for several different languages, so you can localize your app. This is where you&#8217;ll fill in release notes, app description, tile icon, screen shots and promotional artwork. You should also add keywords, copyright info, website, support contact information and if needed, link to a <a href=\"http:\/\/leiflarsen.org\/2014\/privacy-settings-windows-store-app\">privacy policy<\/a>.<\/p>\n<p>The last page you can go to is optional. This is if the testers at Microsoft needs more detailed information or a test account for test purposes. For instance, in my last app, there was no veterinarians in the US (since it&#8217;s a Norwegian app), so I specified a few places for the testers to search for, so they could see\u00a0some more interesting stuff than just the first page. Like I said, this page is optional, so if there is no need for additional information to the testers, this could be left empty.<\/p>\n<p>When all this is finished, you may submit your app. It should go fairly quick to pass the certification (at least if you pass all the requirements), as an illustration of that, my last app took about 6 hours before it had passed. You will be notified along the process, so if the certification fails, you will know, and if it succeeds, you will be given the link to the app in the store. Note, it will take up to 16 hours for the app to be visible in the store after the certification has passed.<\/p>\n<p>So that&#8217;s it for submitting an app for Windows Phone in the Windows Phone Store. Next week I&#8217;ll cover the same process for iOS and the Apple Store, a bit more tedious process in my opinion.<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 25 Jan 2016 19:00:10 +0000","created_by":1,"updated_at":"Mon, 08 Feb 2016 19:57:35 +0000","updated_by":1,"published_at":"Mon, 25 Jan 2016 19:00:10 +0000","published_by":1},{"id":897,"title":"Releasing an app - Android","slug":"releasing-an-app-android","markdown":"\nLast week I wrote the first post in the \u201cReleasing an app\u201d series, [on Windows Phone](http:\/\/leiflarsen.org\/2016\/releasing-an-app-windows-phone). Originally this week was to be about iOS, however due to some technical trouble, I have temporarily lost all the screen shots I had prepared. Therefore, I will do this week\u2019s post on releasing an app, developed with Xamarin Forms, for Android.\n\nAs you will see through this post, the release process for Android is, at least in my opinion, the easiest of the three. It also has some nice features, which makes it really easy to go through test phases before production release. It is also the process that is the quickest, but this also have its disadvantages.\n\nThroughout this tutorial I will assume you already have setup a Google account. I\u2019ll also assume you have registered for a publisher account. This costs $25, and can be done from [Google Play Store](https:\/\/play.google.com\/apps\/publish). Also a short apology; When I went through this process, and documenting it with screen shots, the language in Google Play Store were set to Norwegian, so all screen shots have Norwegian text. I have done my best to translate the important parts, so hopefully you will get what I mean!\n\nNow, like with all applications, it is important to test it before you release. I highly recommend that you test the app in both debug and release mode. Also you should test it on an actual device in release mode, you might find you miss some permissions. For instance, internet permissions are\u00a0something that is automatically given in debug mode, however you need to explicitly ask for it, via the Android Manifest, in release. I learnt that the hard way.\n\nSo your app is thoroughly tested and you\u2019re ready to release it, what do you do? I suggest you head over to Google to prepare the app submission first, and focus on creating the app package later.\n\n![Create new app listing in Google Play Store](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.58.10-300x166.png?fit=300%2C166)Head over to [Google Play Store](https:\/\/play.google.com\/apps\/publish) and click the \u201cAdd new app\u201d in the top right corner. This will open a window for you to fill in the title of your app, and select the default language of the app. They also ask what you want to start to do, and you want to start with \u201cPrepare app listing\u201d.\n\nWith this done you will see a few steps you need to execute before you can release the app. On the page that is open by default you need to fill in app title, a short description and a complete description. You need to upload at least two screenshots of your app, and a maximum of 8. You will also need to upload an icon and a promotion picture. You can also add more promotional pictures if you\u2019d like. At last you need to select the type of app, the category and content rating. You will also need to fill in at least an e-mail you may be contacted on, as well as a link to some privacy policy if you have that.  \n[![App listing app information](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing1-150x150.png?resize=150%2C90)](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing1.png) [![App listing - Graphical elements needed](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing2-150x150.png?resize=150%2C107)](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing2.png) [![App listing contact info and content rating](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing3-150x150.png?resize=150%2C90)](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing3.png)\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\nAs you may see you\u2019ll need to complete a content rating, to set the appropriate age level for your app. When you start this process you need to give your e-mail, for communication related to the rating. Following this you need to choose the top level category your app falls under. Then you need to fill out the questionnaire, truthfully! With this done your app will be assigned with a age limit.\n\nThe last step you need to do before uploading an app package (you can upload the package before, it just depends on your workflow) is to set pricing and availability. If the app is free you obviously don\u2019t need to set a price. If the app cost something, you will need to set a base price. You will then go on the select the countries in which the app will be released to. For quite a few of the countries available you can set a different price than the default price. Further down on the same page you need to check some checkboxes if you have ads in your app, if it is for families\/Google Work\/Google Education, as well as agree to some terms and conditions and export laws from USA.\n\nNow that we have our app listing ready in the Play Store, you need to create the app package, also known as APK. First of all, you want to do add a conditional statement in Xamarin, so you turn off debug for the release build. You can do this by adding the following to your \u201cAssemblyInfo.cs\u201d file:\n\n#if DEBUG [assembly: Application(Debuggable=true)] #else [assembly: Application(Debuggable=false)] #endif\n\n[![Archive for Publishing menu choice](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.53.05.png?fit=266%2C258)](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.53.05.png)The next thing you need to do is build the app APK file, which is the file you will upload to Googles Play Store (I assume app icons etc. is in place already, as well as permissions in the AndroidManifest.xml). You can do this by selecting the Android project (in Xamarin Studio), go to the build menu, and select \u201cArchive for Publishing\u201d. When this process completes you are presented with a list of the archives available, where the platform, name of project, version, creation dates and optional comments is shown. In the comment field you may put in a comment, so you can easily identify the new features of the release, or other information you want, when you have a bigger list of archives.\n\n[![Archive with all the release packages](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.53.12-300x136.png?fit=300%2C136)](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.53.12.png)\n\nThe next step you need to do is to \u201cSign and Distribute\u201d the app, but before we get to that, let us take a short detour to make sure we have registered what we need in [Google Developers Console](https:\/\/play.google.com\/apps\/publish\/#ApiAccessPlace). This will take us to a page for API access. You\u2019ll need to click on \u201cCreate a new project\u201d, and then click on \u201cCreate OAuth-Client\u201d. Fill in the information they ask for, and you will have a client ID available. If you click on the link next to it (something like \u201cWatch in Google Developer Console\u201d), you will be taken to a new page with your credentials. Click on the newly created OAuth client ID, and you will be taken to a page where your client ID and client secret is. Take a note of this, because you will need it later.  \n[![OAuth client id](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-13.20.24-300x82.png?fit=300%2C82)](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-13.20.24.png)\n\nNow it\u2019s time to go back to Xamarin Studio, where we will go through the process of signing and distributing our app. Click on \u201cSign and Distribute\u201d in the bottom right corner of the archive list view. In the first pop-up window you will need to enter the client id and secret you just created. Click \u201cRegister\u201d, and if no typos were made, you should see that it succeeds, and you can move forward.\n\nIn the next view you are able to choose which account you want to publish your app to, as well as which track to upload it to (Alpha\/Beta\/Production). I suggest rollout to one of the testing phases at first, even if you are the only one to test the app. Being able to test the app from Play Store can be valuable, in terms of finding bugs you haven\u2019t encountered in the development environment. When you click \u201cNext\u201d you will be taken to the signing page. If you haven\u2019t already created a key, you will need to create it by clicking the \u201cCreate a new key\u201d button. This process should be fairly self-explanatory, just make sure you set the expiration date later than 2033.\n\nNow it\u2019s time to upload the app package. The first time you upload the package you will need to manually upload the file. In that case you should select \u201cAd-Hoc\u201d in the Distribution channel. The next uploads can be done by choosing \u201cGoogle Play.\n\nTo upload the app package manually you need to be in the app page in Google Developer Console, where you entered your app info. Click on \u201cAPK\u201d, select the track you want to upload to, and click \u201cUpload new APK\u201d. If the upload succeeds you are ready to publish the app, to the track you uploaded it to. Do this by clicking \u201cPublish app\u201d, in the top right corner. If this is in any of the test phases, you will be given a link where you can reach the app, and any external testers will be sent an e-mail with the information they need. If this is the case, you can easily update the app to the next test phase or production, if all tests succeed. If not, it is on its way to the Play Store. Either way, it will take a few hours before it is ready and visible in the store, or for the testers.\n\nOne disadvantage, at least in my opinion, compared to release of an iOS app is that it doesn\u2019t go through any verification by Google employees. You have the responsibility to test the app, which is good, but you may have bugs you haven\u2019t discovered in testing, which may occur in release (naturally you have tested your app well, so bugs doesn\u2019t exist, right?) One can argue that because of this you should always go through at least a beta test phase, and that it is positive that the release is so quickly done. But it is something to think about.\n\nThat is it for now, I hope this was understandable and usable. Next week I\u2019ll be going through the release process for iOS, so make sure you don\u2019t miss that!\n\n\n","html":"<p>Last week I wrote the first post in the &#8220;Releasing an app&#8221; series, <a href=\"http:\/\/leiflarsen.org\/2016\/releasing-an-app-windows-phone\" target=\"_blank\">on Windows Phone<\/a>. Originally this week was to be about iOS, however due to some technical trouble, I have temporarily lost all the screen shots I had prepared. Therefore, I will do this week&#8217;s post on releasing an app, developed with Xamarin Forms, for Android.<\/p>\n<p><!--more--><\/p>\n<p>As you will see through this post, the release process for Android is, at least in my opinion, the easiest of the three. It also has some nice features, which makes it really easy to go through test phases before production release. It is also the process that is the quickest, but this also have its disadvantages.<\/p>\n<p>Throughout this tutorial I will assume you already have setup a Google account. I&#8217;ll also assume you have registered for a publisher account. This costs $25, and can be done from <a href=\"https:\/\/play.google.com\/apps\/publish\" target=\"_blank\">Google Play Store<\/a>. Also a short apology; When I went through this process, and documenting it with screen shots, the language in Google Play Store were set to Norwegian, so all screen shots have Norwegian text. I have done my best to translate the important parts, so hopefully you will get what I mean!<\/p>\n<p>Now, like with all applications, it is important to test it before you release. I highly recommend that you test the app in both debug and release mode. Also you should test it on an actual device in release mode, you might find you miss some permissions. For instance, internet permissions are\u00a0something that is automatically given in debug mode, however you need to explicitly ask for it, via the Android Manifest, in release. I learnt that the hard way.<\/p>\n<p>So your app is thoroughly tested and you&#8217;re ready to release it, what do you do? I suggest you head over to Google to prepare the app submission first, and focus on creating the app package later.<\/p>\n<p><img class=\" size-medium wp-image-962 alignright\" src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.58.10-300x166.png?fit=300%2C166\" alt=\"Create new app listing in Google Play Store\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.58.10.png?resize=300%2C166 300w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.58.10.png?w=573 573w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/>Head over to <a href=\"https:\/\/play.google.com\/apps\/publish\" target=\"_blank\">Google Play Store<\/a> and click the &#8220;Add new app&#8221; in the top right corner. This will open a window for you to fill in the title of your app, and select the default language of the app. They also ask what you want to start to do, and you want to start with &#8220;Prepare app listing&#8221;.<\/p>\n<p>With this done you will see a few steps you need to execute before you can release the app. On the page that is open by default you need to fill in app title, a short description and a complete description. You need to upload at least two screenshots of your app, and a maximum of 8. You will also need to upload an icon and a promotion picture. You can also add more promotional pictures if you&#8217;d like. At last you need to select the type of app, the category and content rating. You will also need to fill in at least an e-mail you may be contacted on, as well as a link to some privacy policy if you have that.<br \/>\n<a href=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing1.png\"  rel=\"lightbox[897] attachment wp-att-963\"><img class=\" size-thumbnail wp-image-963 alignleft\" src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing1-150x150.png?resize=150%2C90\" alt=\"App listing app information\" data-recalc-dims=\"1\" \/><\/a><a href=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing2.png\"  rel=\"lightbox[897] attachment wp-att-964\"><img class=\" size-thumbnail wp-image-964 alignleft\" src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing2-150x150.png?resize=150%2C107\" alt=\"App listing - Graphical elements needed\" srcset=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing2.png?resize=300%2C214 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing2.png?resize=768%2C548 768w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing2.png?resize=1024%2C731 1024w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing2.png?w=1042 1042w\" sizes=\"(max-width: 150px) 100vw, 150px\" data-recalc-dims=\"1\" \/><\/a><a href=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing3.png\"  rel=\"lightbox[897] attachment wp-att-965\"><img class=\" size-thumbnail wp-image-965 alignleft\" src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing3-150x150.png?resize=150%2C90\" alt=\"App listing contact info and content rating\" srcset=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing3.png?resize=300%2C180 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing3.png?resize=768%2C461 768w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing3.png?resize=1024%2C615 1024w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/AppListing3.png?w=1031 1031w\" sizes=\"(max-width: 150px) 100vw, 150px\" data-recalc-dims=\"1\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>As you may see you&#8217;ll need to complete a content rating, to set the appropriate age level for your app. When you start this process you need to give your e-mail, for communication related to the rating. Following this you need to choose the top level category your app falls under. Then you need to fill out the questionnaire, truthfully! With this done your app will be assigned with a age limit.<\/p>\n<p>The last step you need to do before uploading an app package (you can upload the package before, it just depends on your workflow) is to set pricing and availability. If the app is free you obviously don&#8217;t need to set a price. If the app cost something, you will need to set a base price. You will then go on the select the countries in which the app will be released to. For quite a few of the countries available you can set a different price than the default price. Further down on the same page you need to check some checkboxes if you have ads in your app, if it is for families\/Google Work\/Google Education, as well as agree to some terms and conditions and export laws from USA.<\/p>\n<p>Now that we have our app listing ready in the Play Store, you need to create the app package, also known as APK. First of all, you want to do add a conditional statement in Xamarin, so you turn off debug for the release build. You can do this by adding the following to your &#8220;AssemblyInfo.cs&#8221; file:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">#if DEBUG\n\n[assembly: Application(Debuggable=true)]\n\n#else\n\n[assembly: Application(Debuggable=false)]\n\n#endif\n\n<\/pre>\n<p><a href=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.53.05.png\"  rel=\"lightbox[897] attachment wp-att-943\"><img class=\" size-full wp-image-943 alignleft\" src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.53.05.png?fit=266%2C258\" alt=\"Archive for Publishing menu choice\" data-recalc-dims=\"1\" \/><\/a>The next thing you need to do is build the app APK file, which is the file you will upload to Googles Play Store (I assume app icons etc. is in place already, as well as permissions in the AndroidManifest.xml). You can do this by selecting the Android project (in Xamarin Studio), go to the build menu, and select &#8220;Archive for Publishing&#8221;. When this process completes you are presented with a list of the archives available, where the platform, name of project, version, creation dates and optional comments is shown. In the comment field you may put in a comment, so you can easily identify the new features of the release, or other information you want, when you have a bigger list of archives.<\/p>\n<p><a href=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.53.12.png\"  rel=\"lightbox[897] attachment wp-att-944\"><img class=\" size-medium wp-image-944 alignleft\" src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.53.12-300x136.png?fit=300%2C136\" alt=\"Archive with all the release packages\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.53.12.png?resize=300%2C136 300w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.53.12.png?resize=768%2C347 768w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.53.12.png?resize=1024%2C463 1024w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-12.53.12.png?w=1596 1596w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><\/p>\n<p>The next step you need to do is to &#8220;Sign and Distribute&#8221; the app, but before we get to that, let us take a short detour to make sure we have registered what we need in <a href=\"https:\/\/play.google.com\/apps\/publish\/#ApiAccessPlace\" target=\"_blank\">Google Developers Console<\/a>. This will take us to a page for API access. You&#8217;ll need to click on &#8220;Create a new project&#8221;, and then click on &#8220;Create OAuth-Client&#8221;. Fill in the information they ask for, and you will have a client ID available. If you click on the link next to it (something like &#8220;Watch in Google Developer Console&#8221;), you will be taken to a new page with your credentials. Click on the newly created OAuth client ID, and you will be taken to a page where your client ID and client secret is. Take a note of this, because you will need it later.<br \/>\n<a href=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-13.20.24.png\"  rel=\"lightbox[897] attachment wp-att-981\"><img class=\" size-medium wp-image-981 aligncenter\" src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-13.20.24-300x82.png?fit=300%2C82\" alt=\"OAuth client id\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-13.20.24.png?resize=300%2C82 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-13.20.24.png?resize=768%2C210 768w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-13.20.24.png?resize=1024%2C280 1024w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Skjermbilde-2016-01-16-kl.-13.20.24.png?w=1338 1338w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><\/p>\n<p>Now it&#8217;s time to go back to Xamarin Studio, where we will go through the process of signing and distributing our app. Click on &#8220;Sign and Distribute&#8221; in the bottom right corner of the archive list view. In the first pop-up window you will need to enter the client id and secret you just created. Click &#8220;Register&#8221;, and if no typos were made, you should see that it succeeds, and you can move forward.<\/p>\n<p>In the next view you are able to choose which account you want to publish your app to, as well as which track to upload it to (Alpha\/Beta\/Production). I suggest rollout to one of the testing phases at first, even if you are the only one to test the app. Being able to test the app from Play Store can be valuable, in terms of finding bugs you haven&#8217;t encountered in the development environment. When you click &#8220;Next&#8221; you will be taken to the signing page. If you haven&#8217;t already created a key, you will need to create it by clicking the &#8220;Create a new key&#8221; button. This process should be fairly self-explanatory, just make sure you set the expiration date later than 2033.<\/p>\n<p>Now it&#8217;s time to upload the app package. The first time you upload the package you will need to manually upload the file. In that case you should select &#8220;Ad-Hoc&#8221; in the Distribution channel. The next uploads can be done by choosing &#8220;Google Play.<\/p>\n<p>To upload the app package manually you need to be in the app page in Google Developer Console, where you entered your app info. Click on &#8220;APK&#8221;, select the track you want to upload to, and click &#8220;Upload new APK&#8221;. If the upload succeeds you are ready to publish the app, to the track you uploaded it to. Do this by clicking &#8220;Publish app&#8221;, in the top right corner. If this is in any of the test phases, you will be given a link where you can reach the app, and any external testers will be sent an e-mail with the information they need. If this is the case, you can easily update the app to the next test phase or production, if all tests succeed. If not, it is on its way to the Play Store. Either way, it will take a few hours before it is ready and visible in the store, or for the testers.<\/p>\n<p>One disadvantage, at least in my opinion, compared to release of an iOS app is that it doesn&#8217;t go through any verification by Google employees. You have the responsibility to test the app, which is good, but you may have bugs you haven&#8217;t discovered in testing, which may occur in release (naturally you have tested your app well, so bugs doesn&#8217;t exist, right?) One can argue that because of this you should always go through at least a beta test phase, and that it is positive that the release is so quickly done. But it is something to think about.<\/p>\n<p>That is it for now, I hope this was understandable and usable. Next week I&#8217;ll be going through the release process for iOS, so make sure you don&#8217;t miss that!<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 01 Feb 2016 19:00:04 +0000","created_by":1,"updated_at":"Mon, 08 Feb 2016 19:57:24 +0000","updated_by":1,"published_at":"Mon, 01 Feb 2016 19:00:04 +0000","published_by":1},{"id":676,"title":"Releasing an app - iOS","slug":"releasing-an-app-ios","markdown":"\nIn this last post in this series we will take a look at the process of releasing an app for iOS, after development with Xamarin Forms. Over the last few weeks I have gone through this process for [Windows Phone](http:\/\/leiflarsen.org\/2016\/releasing-an-app-windows-phone) and for [Android](http:\/\/leiflarsen.org\/2016\/releasing-an-app-android). In terms of what you, as the developer, need to do, the release process for iOS is not much different than the others, especially for Android. You need to fill in information on the app, build the app for release and upload the app. Apple does have their own quality control though, so when you submit the app to release, it will take some time before it\u2019s released, since they have someone testing all app submissions. When you think about the amount of app submissions they receive each month, you can imagine it may take some time to get through this phase. So please be sure you have filled out everything correctly \u2013 it is rather annoying to wait a few days, up to a few weeks, just to have your app rejected due to silly mistakes.\n\nAs with the previous posts in this series, I will assume that you already have an Apple Developer account. Also I will assume that if you\u2019re releasing a paid app you already have filled in the correct forms to receive payments from Apple.\n\nLike before you\u2019ll want to create the app at Apple as early as possible, to make sure the app name is reserved. You can also go through the steps of inputting app description and other informational stuff while doing this, so I will take you through that now. Start by heading over to [iTunes Connect](https:\/\/itunesconnect.apple.com), and log in with your Apple Developer Account. On the first page you are presented with a menu, and you need to choose \u201cMy Apps\u201d, which should be the one in the top left corner. Now you will be taken to a page where you can see apps you already have, as well as add new ones. So let\u2019s go ahead and do just that. Click on the \u201c+\u201d icon on the left side, right beneath \u201ciTunes Connect\u201d and select \u201cNew App\u201d. You will be presented with a window that asks which platform this is for, name, primary language, a bundle ID and a SKU.\n\n[![New app first screen](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/NewApp-256x300.png?fit=256%2C300)](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/NewApp.png)\n\nThe name and language should be self-explanatory. The bundle ID is something you will need to create in the Apple Developer Portal. It should match what you have in your \u201cinfo.plist\u201d file, so typically something like \u201corg.DEVELOPERNAME.APPNAME\u201d. [This guide](http:\/\/www.aquafadas.com\/en\/documentation\/article\/creating-the-bundle-id) will take you through creating a bundle ID. The last field, SKU, is a field that is unique ID for the app, not visible in the app store.\n\nAfter you have created the app, you will be taken to a page with localizable information. This is where you can set the app name for different languages, and give some general information, such as privacy policy URL, category and rating. Remember to click \u201cSave\u201d on the right hand side, if you make any changes! If you look to the left there is a menu, and the next step will be to set the \u201cPricing and Availability\u201d information. You can set a price schedule, so you could start with having the app free for a few weeks, and then set a price at a given date. You can also select which countries the app should be available in, and also if it should be available with Volume Purchase Programs.  \n[![Set price](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Pricing1-300x204.png?fit=300%2C204)](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Pricing1.png)\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\nThe next thing you want to do is to start prepare a release for submission. Do so by selecting \u201c1.0 Prepare for Submission\u201d in the menu on the left side. This is where you prepare the submission by adding screenshots, app description, contact information and the app build itself. So let\u2019s go ahead and add all this.\n\n![Submission page part 1](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission1-300x223.png?fit=300%2C223)The first thing you are asked to input is screenshots. What I normally do is I take a set of screenshots from the iOS simulator, then I head over to\u00a0[LaunchKit.io](https:\/\/launchkit.io) and automatically generate screenshots for the rest of the sizes. A basic version of this service is free, and should give you what you need, screenshot wise. Moving on you want to enter a good description of your app, along with some keywords to find your app in the store. Also you should provide![Submission page part 2](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission2-300x136.png?fit=300%2C136) a URL where your users can get support, and optionally a marketing URL. The \u201cBuild\u201d section will be the last piece, which I will cover later. Next is the general app information, where you should upload an app icon, give some copyright information as  \n well as give some contact information. You can also provide some information to the testers from Apple, if your app requires special instructions. The last section is where you can decide if the app should auto release after the review, if it should be released earliest a specified date or if you manually should release it.  \n![Submission page part 4](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission4-150x150.png?resize=150%2C150)\n\n![Submission page part 3](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission3-150x150.png?resize=150%2C150)\n\n\u00a0\n\n\u00a0\n\n\u00a0\n\nNow to the last part you need to do; build the app package and upload it to the app submission. From Xamarin Studio you\u2019ll want to select \u201cRelease\u201d and \u201ciOS Device\u201d as the target. Make sure you have specified the app name, and bundle ID, mentioned earlier, in the \u201cinfo.plist\u201d file. Also note that for every new build you upload, you must update the build number in the same file. Moving on you need to go to the build menu, and select \u201cArchive for Publishing\u201d, as we did for Android. If the build succeeds, you will see a page with the build on it. Select it and click \u201cSign and Distribute\u201d. You will then need to select a \u201cProvisioning Profile\u201d for the app. Xamarin provides a good guide how to setup this at their [site](https:\/\/developer.xamarin.com\/guides\/ios\/deployment,_testing,_and_metrics\/app_distribution\/app-store-distribution\/). This will go through some magic. When this process is done you have the option to publish. Select \u201cAppStore\u201d as the distribution channel, and select the correct \u201cProvisioning Profile\u201d and \u201cSigning Identity\u201d. Then you will need to save the output \u201cIPA\u201d file, preferably at a location that is easy to locate. When you get to the window stating \u201cPublishing Succeeded\u201d, you should click \u201cOpen Application Loader\u201d to upload the app. In application loader make sure you have selected \u201cDeliver your app\u201d, and click \u201cChoose\u201d. Select the newly created \u201cIPA\u201d file, and when it has been processed click \u201cNext\u201d. This should upload the app to iTunes Connect, a process which will take a few minutes, depending on the size of your app.\n\nWhen the file upload is done, the app will go through some processing at Apple before it\u2019s ready. You will be notified by mail (unless you have opted out of such mails, I guess) when the processing is done. When it is done, it is time to head back to iTunes Connect and the submission we were working on earlier. With the submission selected scroll down to the \u201cBuild\u201d area, and select the newly uploaded build. That should be it, and when you save the submission you are ready to submit the app. This can be done by clicking \u201cSubmit for review\u201d, in the top right corner. After you have done this, it is time to sit back, and patiently await the process to take its time. The last few submissions I have made have taken about 3 days, however my first few took about 2 weeks, so I guess it depends on the amount of work the testers at Apple has.\n\nWith that I conclude this post, and the series \u201cReleasing an App\u201d. I hope all posts have been understandable and easy to follow, and I hope this may help you with the release process. I\u2019d be very interested in getting some feedback on these posts as well, so any comments would be appreciated (both good and bad, as long as it\u2019s constructive!).\n\n\n","html":"<p>In this last post in this series we will take a look at the process of releasing an app for iOS, after development with Xamarin Forms. Over the last few weeks I have gone through this process for <a href=\"http:\/\/leiflarsen.org\/2016\/releasing-an-app-windows-phone\" target=\"_blank\">Windows Phone<\/a> and for <a href=\"http:\/\/leiflarsen.org\/2016\/releasing-an-app-android\" target=\"_blank\">Android<\/a>. In terms of what you, as the developer, need to do, the release process for iOS is not much different than the others, especially for Android. You need to fill in information on the app, build the app for release and upload the app. Apple does have their own quality control though, so when you submit the app to release, it will take some time before it&#8217;s released, since they have someone testing all app submissions. When you think about the amount of app submissions they receive each month, you can imagine it may take some time to get through this phase. So please be sure you have filled out everything correctly &#8211; it is rather annoying to wait a few days, up to a few weeks, just to have your app rejected due to silly mistakes.<\/p>\n<p><!--more--><\/p>\n<p>As with the previous posts in this series, I will assume that you already have an Apple Developer account. Also I will assume that if you&#8217;re releasing a paid app you already have filled in the correct forms to receive payments from Apple.<\/p>\n<p>Like before you&#8217;ll want to create the app at Apple as early as possible, to make sure the app name is reserved. You can also go through the steps of inputting app description and other informational stuff while doing this, so I will take you through that now. Start by heading over to <a href=\"https:\/\/itunesconnect.apple.com\" target=\"_blank\">iTunes Connect<\/a>, and log in with your Apple Developer Account. On the first page you are presented with a menu, and you need to choose &#8220;My Apps&#8221;, which should be the one in the top left corner. Now you will be taken to a page where you can see apps you already have, as well as add new ones. So let&#8217;s go ahead and do just that. Click on the &#8220;+&#8221; icon on the left side, right beneath &#8220;iTunes Connect&#8221; and select &#8220;New App&#8221;. You will be presented with a window that asks which platform this is for, name, primary language, a bundle ID and a SKU.<\/p>\n<p><a href=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/NewApp.png\"  rel=\"lightbox[676] attachment wp-att-987\"><img class=\"alignright size-medium wp-image-987\" src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/NewApp-256x300.png?fit=256%2C300\" alt=\"New app first screen\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/NewApp.png?resize=256%2C300 256w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/NewApp.png?w=461 461w\" sizes=\"(max-width: 256px) 100vw, 256px\" data-recalc-dims=\"1\" \/><\/a><\/p>\n<p>The name and language should be self-explanatory. The bundle ID is something you will need to create in the Apple Developer Portal. It should match what you have in your &#8220;info.plist&#8221; file, so typically something like &#8220;org.DEVELOPERNAME.APPNAME&#8221;. <a href=\"http:\/\/www.aquafadas.com\/en\/documentation\/article\/creating-the-bundle-id\" target=\"_blank\">This guide<\/a> will take you through creating a bundle ID. The last field, SKU, is a field that is unique ID for the app, not visible in the app store.<\/p>\n<p>After you have created the app, you will be taken to a page with localizable information. This is where you can set the app name for different languages, and give some general information, such as privacy policy URL, category and rating. Remember to click &#8220;Save&#8221; on the right hand side, if you make any changes! If you look to the left there is a menu, and the next step will be to set the &#8220;Pricing and Availability&#8221; information. You can set a price schedule, so you could start with having the app free for a few weeks, and then set a price at a given date. You can also select which countries the app should be available in, and also if it should be available with Volume Purchase Programs.<br \/>\n<a href=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Pricing1.png\"  rel=\"lightbox[676] attachment wp-att-988\"><img class=\"alignleft size-medium wp-image-988\" src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Pricing1-300x204.png?fit=300%2C204\" alt=\"Set price\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Pricing1.png?resize=300%2C204 300w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Pricing1.png?resize=768%2C522 768w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Pricing1.png?resize=1024%2C696 1024w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Pricing1.png?w=1069 1069w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>The next thing you want to do is to start prepare a release for submission. Do so by selecting &#8220;1.0 Prepare for Submission&#8221; in the menu on the left side. This is where you prepare the submission by adding screenshots, app description, contact information and the app build itself. So let&#8217;s go ahead and add all this.<\/p>\n<p><img class=\"alignleft size-medium wp-image-997\" src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission1-300x223.png?fit=300%2C223\" alt=\"Submission page part 1\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission1.png?resize=300%2C223 300w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission1.png?resize=768%2C570 768w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission1.png?resize=1024%2C760 1024w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission1.png?w=1036 1036w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/>The first thing you are asked to input is screenshots. What I normally do is I take a set of screenshots from the iOS simulator, then I head over to\u00a0<a href=\"https:\/\/launchkit.io\" target=\"_blank\">LaunchKit.io<\/a> and automatically generate screenshots for the rest of the sizes. A basic version of this service is free, and should give you what you need, screenshot wise. Moving on you want to enter a good description of your app, along with some keywords to find your app in the store. Also you should provide<img class=\"alignright size-medium wp-image-998\" src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission2-300x136.png?fit=300%2C136\" alt=\"Submission page part 2\" srcset=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission2.png?resize=300%2C136 300w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission2.png?resize=768%2C349 768w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission2.png?resize=1024%2C465 1024w, http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission2.png?w=1034 1034w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/> a URL where your users can get support, and optionally a marketing URL. The &#8220;Build&#8221; section will be the last piece, which I will cover later. Next is the general app information, where you should upload an app icon, give some copyright information as<br \/>\nwell as give some contact information. You can also provide some information to the testers from Apple, if your app requires special instructions. The last section is where you can decide if the app should auto release after the review, if it should be released earliest a specified date or if you manually should release it.<br \/>\n<img class=\" size-thumbnail wp-image-996 alignleft\" src=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission4-150x150.png?resize=150%2C150\" alt=\"Submission page part 4\" data-recalc-dims=\"1\" \/><\/p>\n<p><img class=\" size-thumbnail wp-image-995 alignleft\" src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/Submission3-150x150.png?resize=150%2C150\" alt=\"Submission page part 3\" data-recalc-dims=\"1\" \/><\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>&nbsp;<\/p>\n<p>Now to the last part you need to do; build the app package and upload it to the app submission. From Xamarin Studio you&#8217;ll want to select &#8220;Release&#8221; and &#8220;iOS Device&#8221; as the target. Make sure you have specified the app name, and bundle ID, mentioned earlier, in the &#8220;info.plist&#8221; file. Also note that for every new build you upload, you must update the build number in the same file. Moving on you need to go to the build menu, and select &#8220;Archive for Publishing&#8221;, as we did for Android. If the build succeeds, you will see a page with the build on it. Select it and click &#8220;Sign and Distribute&#8221;. You will then need to select a &#8220;Provisioning Profile&#8221; for the app. Xamarin provides a good guide how to setup this at their <a href=\"https:\/\/developer.xamarin.com\/guides\/ios\/deployment,_testing,_and_metrics\/app_distribution\/app-store-distribution\/\" target=\"_blank\">site<\/a>. This will go through some magic. When this process is done you have the option to publish. Select &#8220;AppStore&#8221; as the distribution channel, and select the correct &#8220;Provisioning Profile&#8221; and &#8220;Signing Identity&#8221;. Then you will need to save the output &#8220;IPA&#8221; file, preferably at a location that is easy to locate. When you get to the window stating &#8220;Publishing Succeeded&#8221;, you should click &#8220;Open Application Loader&#8221; to upload the app. In application loader make sure you have selected &#8220;Deliver your app&#8221;, and click &#8220;Choose&#8221;. Select the newly created &#8220;IPA&#8221; file, and when it has been processed click &#8220;Next&#8221;. This should upload the app to iTunes Connect, a process which will take a few minutes, depending on the size of your app.<\/p>\n<p>When the file upload is done, the app will go through some processing at Apple before it&#8217;s ready. You will be notified by mail (unless you have opted out of such mails, I guess) when the processing is done. When it is done, it is time to head back to iTunes Connect and the submission we were working on earlier. With the submission selected scroll down to the &#8220;Build&#8221; area, and select the newly uploaded build. That should be it, and when you save the submission you are ready to submit the app. This can be done by clicking &#8220;Submit for review&#8221;, in the top right corner. After you have done this, it is time to sit back, and patiently await the process to take its time. The last few submissions I have made have taken about 3 days, however my first few took about 2 weeks, so I guess it depends on the amount of work the testers at Apple has.<\/p>\n<p>With that I conclude this post, and the series &#8220;Releasing an App&#8221;. I hope all posts have been understandable and easy to follow, and I hope this may help you with the release process. I&#8217;d be very interested in getting some feedback on these posts as well, so any comments would be appreciated (both good and bad, as long as it&#8217;s constructive!).<\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 08 Feb 2016 19:55:16 +0000","created_by":1,"updated_at":"Mon, 08 Feb 2016 19:55:16 +0000","updated_by":1,"published_at":"Mon, 08 Feb 2016 19:55:16 +0000","published_by":1},{"id":1020,"title":"Know when to rest","slug":"know-when-to-rest","markdown":"\nYesterday I read an article from Jose Gonzalez, over at Mind Body Soul Developer, called \u201c[The Art of Doing Nothing](http:\/\/www.mindbodysouldeveloper.com\/2016\/02\/13\/art-of-doing-nothing\/)\u201c, which brings up an important subject; Resting and relaxing. I am not going to talk a lot on this, as I think Jose has done a good job describing all about it in his post.\n\nIn essence the post covers his experience of having a bad day and how he deals with it. In general, when you\u2019re having a bad day (or a day with no motivation) you should really push on, so you get your work done. Sometimes it is however, useful to just relax and do something else that day instead of pushing yourself. In the end, we\u2019re all just humans, and if you keep pushing yourself without ever taking breaks, even on bad days, you will eventually crash. I think that could be worse than having some time off from time to time.\n\nLike I said, this wasn\u2019t going to be a long post, but maybe it (and the post from Mind Body Soul Developer) can put some thoughts into your head. What\u2019s your thoughts on this subject? Do you know when to relax and when to push on?\n\n\n","html":"<p>Yesterday I read an article from Jose Gonzalez, over at Mind Body Soul Developer, called &#8220;<a href=\"http:\/\/www.mindbodysouldeveloper.com\/2016\/02\/13\/art-of-doing-nothing\/\" target=\"_blank\">The Art of Doing Nothing<\/a>&#8220;, which brings up an important subject; Resting and relaxing. I am not going to talk a lot on this, as I think Jose has done a good job describing all about it in his post.<\/p>\n<p>In essence the post covers his experience of having a bad day and how he deals with it. In general, when you&#8217;re having a bad day (or a day with no motivation) you should really push on, so you get your work done. Sometimes it is however, useful to just relax and do something else that day instead of pushing yourself. In the end, we&#8217;re all just humans, and if you keep pushing yourself without ever taking breaks, even on bad days, you will eventually crash. I think that could be worse than having some time off from time to time. <\/p>\n<p>Like I said, this wasn&#8217;t going to be a long post, but maybe it (and the post from Mind Body Soul Developer) can put some thoughts into your head. What&#8217;s your thoughts on this subject? Do you know when to relax and when to push on? <\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 15 Feb 2016 18:00:02 +0000","created_by":1,"updated_at":"Mon, 15 Feb 2016 06:56:18 +0000","updated_by":1,"published_at":"Mon, 15 Feb 2016 18:00:02 +0000","published_by":1},{"id":1024,"title":"Installing JDK on Linux with terminal","slug":"installing-jdk-linux-terminal","markdown":"\nThis weekend I have been participating in a virtual hackathon, hosted by [Koding.com](http:\/\/koding.com). I teamed up with my sister, her boyfriend and two class mates of his, all which are computer engineering students. The task at the hackathon was to create a web app in one of three categories; data visualization, productivity or games. We chose productivity.\n\nAs a part of this hackathon we were given a virtual machine at koding.com, basically a machine with 1GB ram, 1 core CPU and 25GB HD. As the end result of the hackathon was supposed to be a web app of some sort, and since my teammates is mostly familiar with Java, we decided to create something using Play Framework.\n\nTo be able to use [Play Framework](https:\/\/www.playframework.com\/) you would naturally need some Java environment, which was not pre-installed on the VM. For this VM we didn\u2019t have a user interface available, other than a terminal, and so I tried installing the latest version of OpenJDK through this. Everything was installed as expected, and I moved on to installing the [Play Framework](https:\/\/www.playframework.com\/) (Typesafe Activator). Creating a test app was ok, however when I tried to run it I received an error stating that the wrong version of Java was installed. Some investigation showed that the latest version of OpenJDK was 7, and Play Framework required at least Java version 8.\n\nTo fix this I had to install Oracle JDK, which is not in the Linux repository natively. First I removed the installed versions of Java by running the following commands:\n\n sudo apt-get purge openjdk* sudo apt-get purge icedtea-* openjdk-*\n\nNext I installed Oracle JDK by running the following commands:\n\n sudo add-apt-repository ppa:webupd8team\/java sudo apt-get update sudo apt-get install oracle-java8-installer\n\nTo verify that Java was properly installed I ran the following commands:\n\n java -version javac -version\n\nWith this installed we were able to start the Play app, and access it through the web!\n\nOh, and if you\u2019re wondering what we created, this is a short description:  \n It is basically a proof of concept of an advanced shopping list. The idea is that users scans in groceries they have shopped (when they put it into the fridge), and register when it has been used, and then you will automatically get a shopping list generated. The idea is that we, in the future, can utilize IoT and machine learning to be able to predict when you run out of a particular product, and notify you. An extension to this is pre-generated dinner suggestions, with what ingredients you need to buy, and potentially what dinner you could make of the ingredients you already have. Probably not a price-winning project, but we had a lot of fun developing it and we got to use technologies unfamiliar to us, so that was great fun.\n\n\n","html":"<p>This weekend I have been participating in a virtual hackathon, hosted by <a href=\"http:\/\/koding.com\" target=\"_blank\">Koding.com<\/a>. I teamed up with my sister, her boyfriend and two class mates of his, all which are computer engineering students. The task at the hackathon was to create a web app in one of three categories; data visualization, productivity or games. We chose productivity.<\/p>\n<p>As a part of this hackathon we were given a virtual machine at koding.com, basically a machine with 1GB ram, 1 core CPU and 25GB HD. As the end result of the hackathon was supposed to be a web app of some sort, and since my teammates is mostly familiar with Java, we decided to create something using Play Framework. <\/p>\n<p>To be able to use <a href=\"https:\/\/www.playframework.com\/\" target=\"_blank\">Play Framework<\/a> you would naturally need some Java environment, which was not pre-installed on the VM. For this VM we didn&#8217;t have a user interface available, other than a terminal, and so I tried installing the latest version of OpenJDK through this. Everything was installed as expected, and I moved on to installing the <a href=\"https:\/\/www.playframework.com\/\" target=\"_blank\">Play Framework<\/a> (Typesafe Activator). Creating a test app was ok, however when I tried to run it I received an error stating that the wrong version of Java was installed. Some investigation showed that the latest version of OpenJDK was 7, and Play Framework required at least Java version 8. <\/p>\n<p>To fix this I had to install Oracle JDK, which is not in the Linux repository natively. First I removed the installed versions of Java by running the following commands:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nsudo apt-get purge openjdk*\r\nsudo apt-get purge icedtea-* openjdk-* \r\n<\/pre>\n<p>Next I installed Oracle JDK by running the following commands:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nsudo add-apt-repository ppa:webupd8team\/java\r\nsudo apt-get update\r\nsudo apt-get install oracle-java8-installer\r\n<\/pre>\n<p>To verify that Java was properly installed I ran the following commands:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\njava -version\r\njavac -version\r\n<\/pre>\n<p>With this installed we were able to start the Play app, and access it through the web!<\/p>\n<p>Oh, and if you&#8217;re wondering what we created, this is a short description:<br \/>\nIt is basically a proof of concept of an advanced shopping list. The idea is that users scans in groceries they have shopped (when they put it into the fridge), and register when it has been used, and then you will automatically get a shopping list generated. The idea is that we, in the future, can utilize IoT and machine learning to be able to predict when you run out of a particular product, and notify you. An extension to this is pre-generated dinner suggestions, with what ingredients you need to buy, and potentially what dinner you could make of the ingredients you already have. Probably not a price-winning project, but we had a lot of fun developing it and we got to use technologies unfamiliar to us, so that was great fun. <\/p>\n","image":null,"featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 22 Feb 2016 20:03:18 +0000","created_by":1,"updated_at":"Mon, 22 Feb 2016 20:03:19 +0000","updated_by":1,"published_at":"Mon, 22 Feb 2016 20:03:18 +0000","published_by":1},{"id":1032,"title":"IoC and Dependency Injection","slug":"ioc-and-dependency-injection","markdown":"\nOn some of the code I work on at a daily basis, I have noticed that IoC and dependency injection is used. When I first saw these concepts, I just did a quick read to see what it was, but didn\u2019t really put much energy into it, as it was not something I directly used myself. This did eventually change, and I were assigned a task, which would include using an IoC container, and as such I figured it was time to try to understand what was going on. So in this post I will give a short summary of what I have learnt so far, and maybe to confirm or correct my understanding of this subject.\n\n\n## Dependency Injection Priniciple\n\nBefore I\u00a0get into the details on IoC and dependency injection I want to write a bit on the dependency injection principle (DIP). Basically this principle refers to a specific way of decoupling software modules, in a way where high-level components becomes independent from low-level implementations. The following two statements can be used for DIP:\n\n- High-level modules should not depend on low-level modules. Both should depend on abstractions.\n- Abstractions should not depend on details. Details should depend on abstractions.\n\nSo in a traditional application architecture you may design your low-level components to be consumed by your high-level components. This limits the re-use of the high-level components. Using DIP you reverse this design, and as such you get less dependencies.\n\n\n## IoC\n\nLets move on to Inversion of Control (IoC). This can be described as a design in software architecture where the controls is inverted compared to traditional programming. Using IoC you can increase modularity of a program and make it more extensible. It is related to DIP, but it is still different as DIP concerns itself with decoupling dependencies between high- and low-level layers.\n\nAccording to [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Inversion_of_control)\u00a0IoC serves the following design purposes:\n\n- To decouple the execution of a task from implementation\n- To focus a module on the task it is designed for\n- To free modules from assumptions about how other systems do what they do and instead rely on contracts\n- To prevent side effects when replacing a module\n\nThere are quite a few techniques that can be used to implement IoC. To name a few you have factory pattern, service locator pattern and strategy design pattern. Often, though, when people talk about IoC they also talk about the implementation called Dependency Injection, which is the one I will talk a bit more now.\n\n\n## Dependency Injection\n\nDependency Injection (DI) is a design pattern that implements IoC to resolve dependencies. Basically you have a dependency, which is an object that can be used (service), which is injected into a dependent object (client). So instead of having the client side find the service, or create it, we pass it in via an injection. This is a fundamental requirement, and kind of the essence of DI, which also allows a program to follow the DIP.\n\nThere are three common ways of doing DI; Interface-, setter- and constructor-based injection. Interface injections is in my understanding the least used, and also probably the hardest to use. This is due to the fact that the dependency has\u00a0the possibility to control its own injection. A constructor-based injection is the most commonly used, and it\u2019s when you inject a dependency through the constructor.\u00a0The difference between a setter- and constructor-based injections is when they\u00a0can be used.\n\nI am not going into more details on this topic for now, but I may return to this in a later post, with more examples, as my understanding grows.\n\n\n## Conclusion\n\nAs you can see, using IoC and dependency injections may in many cases be good. Modules will not be dependent on each other, which could increase reuse. It also\u00a0improves testability, as you\u2019ll be able to fake dependencies in your unit tests. Naturally you could do this before as well, but I\u2019ll argue that using DI makes it easier.\n\nSo that\u2019s it for now, I hope this can help as an introduction to IoC and dependency injection. I would also like to recommend John Somnes course on IoC over at [Pluralsight](https:\/\/app.pluralsight.com\/library\/courses\/inversion-of-control\/table-of-contents). This course helped me, as it explains the concepts in a good way, and provides some nice examples. I would also like to point you to [this article](http:\/\/www.devtrends.co.uk\/blog\/how-not-to-do-dependency-injection-the-static-or-singleton-container), which gives a good explanation on how not to do DI.\n\nWhat\u2019s your experience with IoC and dependency injection?\n\n\n","html":"<p>On some of the code I work on at a daily basis, I have noticed that IoC and dependency injection is used. When I first saw these concepts, I just did a quick read to see what it was, but didn&#8217;t really put much energy into it, as it was not something I directly used myself. This did eventually change, and I were assigned a task, which would include using an IoC container, and as such I figured it was time to try to understand what was going on. So in this post I will give a short summary of what I have learnt so far, and maybe to confirm or correct my understanding of this subject.<\/p>\n<p><!--more--><\/p>\n<h2>Dependency Injection Priniciple<\/h2>\n<p>Before I\u00a0get into the details on IoC and dependency injection I want to write a bit on the dependency injection principle (DIP). Basically this principle refers to a specific way of decoupling software modules, in a way where high-level components becomes independent from low-level implementations. The following two statements can be used for DIP:<\/p>\n<ul>\n<li>High-level modules should not depend on low-level modules. Both should depend on abstractions.<\/li>\n<li>Abstractions should not depend on details. Details should depend on abstractions.<\/li>\n<\/ul>\n<p>So in a traditional application architecture you may design your low-level components to be consumed by your high-level components. This limits the re-use of the high-level components. Using DIP you reverse this design, and as such you get less dependencies.<\/p>\n<h2>IoC<\/h2>\n<p>Lets move on to Inversion of Control (IoC). This can be described as a design in software architecture where the controls is inverted compared to traditional programming. Using IoC you can increase modularity of a program and make it more extensible. It is related to DIP, but it is still different as DIP concerns itself with decoupling dependencies between high- and low-level layers.<\/p>\n<p>According to <a href=\"https:\/\/en.wikipedia.org\/wiki\/Inversion_of_control\" target=\"_blank\">Wikipedia<\/a>\u00a0IoC serves the following design purposes:<\/p>\n<ul>\n<li>To decouple the execution of a task from implementation<\/li>\n<li>To focus a module on the task it is designed for<\/li>\n<li>To free modules from assumptions about how other systems do what they do and instead rely on contracts<\/li>\n<li>To prevent side effects when replacing a module<\/li>\n<\/ul>\n<p>There are quite a few techniques that can be used to implement IoC. To name a few you have factory pattern, service locator pattern and strategy design pattern. Often, though, when people talk about IoC they also talk about the implementation called Dependency Injection, which is the one I will talk a bit more now.<\/p>\n<h2>Dependency Injection<\/h2>\n<p>Dependency Injection (DI) is a design pattern that implements IoC to resolve dependencies. Basically you have a dependency, which is an object that can be used (service), which is injected into a dependent object (client). So instead of having the client side find the service, or create it, we pass it in via an injection. This is a fundamental requirement, and kind of the essence of DI, which also allows a program to follow the DIP.<\/p>\n<p>There are three common ways of doing DI; Interface-, setter- and constructor-based injection. Interface injections is in my understanding the least used, and also probably the hardest to use. This is due to the fact that the dependency has\u00a0the possibility to control its own injection. A constructor-based injection is the most commonly used, and it&#8217;s when you inject a dependency through the constructor.\u00a0The difference between a setter- and constructor-based injections is when they\u00a0can be used.<\/p>\n<p>I am not going into more details on this topic for now, but I may return to this in a later post, with more examples, as my understanding grows.<\/p>\n<h2>Conclusion<\/h2>\n<p>As you can see, using IoC and dependency injections may in many cases be good. Modules will not be dependent on each other, which could increase reuse. It also\u00a0improves testability, as you&#8217;ll be able to fake dependencies in your unit tests. Naturally you could do this before as well, but I&#8217;ll argue that using DI makes it easier.<\/p>\n<p>So that&#8217;s it for now, I hope this can help as an introduction to IoC and dependency injection. I would also like to recommend John Somnes course on IoC over at <a href=\"https:\/\/app.pluralsight.com\/library\/courses\/inversion-of-control\/table-of-contents\" target=\"_blank\">Pluralsight<\/a>. This course helped me, as it explains the concepts in a good way, and provides some nice examples. I would also like to point you to <a href=\"http:\/\/www.devtrends.co.uk\/blog\/how-not-to-do-dependency-injection-the-static-or-singleton-container\" target=\"_blank\">this article<\/a>, which gives a good explanation on how not to do DI.<\/p>\n<p>What&#8217;s your experience with IoC and dependency injection?<\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2016\/02\/IoC.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 29 Feb 2016 21:34:32 +0000","created_by":1,"updated_at":"Mon, 29 Feb 2016 21:34:32 +0000","updated_by":1,"published_at":"Mon, 29 Feb 2016 21:34:32 +0000","published_by":1},{"id":1097,"title":"Dealing with app reviews","slug":"dealing-app-reviews","markdown":"\nIn todays post I\u2019d like to bring up the topic on how to deal with app reviews. The background for this is the first app I released, a few years ago, called myRemote. This is an app, which at the time, was created primarily because I wanted to control my Onkyo receiver with my Surface RT. As you probably can guess, it was created for Windows RT, and before I really knew too much of C# and .NET, so it was a bit of guesswork. When I released it, it basically was an app to send commands to the receiver, it did not read any data from it.\n\nOver the years it turned out to be quite a few people downloading the app, from all around the world. As far as I know, it was the only app in the Windows store of this kind. It also received a lot of app reviews and feedback, both good and bad, which is what I will discuss throughout this post.\n\nThe way I see it, you can split feedback into two categories; constructive and non-constructive. Obviously you can get good, bad and neutral reviews in both of these categories, but I feel that those two are the top-level categories which you can use to separate how much you care about the comments.\n\n\n## Constructive\n\nConstructive feedback is the kind of feedback that you can use to improve your app. Whether it is positive, negative (although I have mostly seen neutral or good feedback in this category) or neutral, you can usually get some tips as to how to do certain things, or new features you may add. People who give this kind of feedback typically likes the idea of the app and generally want to use the app, but they may want some additional features. One example I want to draw attention to is someone who left a positive review for the app in the Windows Store, and also sent me an e-mail asking if it was possible to add a feature to see what the current volume was (he was also very kind in his words in the e-mail, and is the primary reason I decided to upgrade the entire app, which I\u2019m currently working on).\n\n\n## Non-constructive\n\nNon-constructive feedback is feedback that does nothing in terms of suggesting improvements or new features. This can be of simply \u201cGreat app!\u201d, to the more negative types like \u201cThis app sucks. I hate it\u201d (I have yet to receive the latter!). Obviously it makes me very happy to receive positive feedback, but more negative feedback in this category is something I generally try to avoid caring about. I remember the first bad review I got, where I was a bit offended. \u201cHere I\u2019ve spent all this time working on this app, describing the functionality in the description, and you tell me it\u2019s shit?\u201d I quickly realized that I shouldn\u2019t care too much about it. People will always criticize, for several reasons (which probably could fill another post), so it is important to be able to see past negative, non-constructive feedback.\n\n\n## Summary\n\nAt the end of the day I guess what I\u2019m trying to say is that you shouldn\u2019t read too much into negative, non-constructive app reviews, as this may tear your motivation apart. It is in the same lines of athletes or actors\/actresses who I imagine try to avoid reading much news regarding themselves, as a way to avoid feeling down over negative stories. Do however consider constructive reviews, as they may improve your app, and also may give you an indication of what people expect from the app.\n\nI am also curious to hear how you deal with app reviews, so please do share!\n\n*Featured photo by Stuart Miles, found at [freedigitalphotos.net](http:\/\/www.freedigitalphotos.net\/images\/positives-negatives-buttons-shows-pros-and-cons-photo-p207251)*\n\n\n","html":"<p>In todays post I&#8217;d like to bring up the topic on how to deal with app reviews. The background for this is the first app I released, a few years ago, called myRemote. This is an app, which at the time, was created primarily because I wanted to control my Onkyo receiver with my Surface RT. As you probably can guess, it was created for Windows RT, and before I really knew too much of C# and .NET, so it was a bit of guesswork. When I released it, it basically was an app to send commands to the receiver, it did not read any data from it.<\/p>\n<p><!--more--><\/p>\n<p>Over the years it turned out to be quite a few people downloading the app, from all around the world. As far as I know, it was the only app in the Windows store of this kind. It also received a lot of app reviews and feedback, both good and bad, which is what I will discuss throughout this post. <\/p>\n<p>The way I see it, you can split feedback into two categories; constructive and non-constructive. Obviously you can get good, bad and neutral reviews in both of these categories, but I feel that those two are the top-level categories which you can use to separate how much you care about the comments.<\/p>\n<h2>Constructive<\/h2>\n<p>Constructive feedback is the kind of feedback that you can use to improve your app. Whether it is positive, negative (although I have mostly seen neutral or good feedback in this category) or neutral, you can usually get some tips as to how to do certain things, or new features you may add. People who give this kind of feedback typically likes the idea of the app and generally want to use the app, but they may want some additional features. One example I want to draw attention to is someone who left a positive review for the app in the Windows Store, and also sent me an e-mail asking if it was possible to add a feature to see what the current volume was (he was also very kind in his words in the e-mail, and is the primary reason I decided to upgrade the entire app, which I&#8217;m currently working on). <\/p>\n<h2>Non-constructive<\/h2>\n<p>Non-constructive feedback is feedback that does nothing in terms of suggesting improvements or new features. This can be of simply &#8220;Great app!&#8221;, to the more negative types like &#8220;This app sucks. I hate it&#8221; (I have yet to receive the latter!). Obviously it makes me very happy to receive positive feedback, but more negative feedback in this category is something I generally try to avoid caring about. I remember the first bad review I got, where I was a bit offended. &#8220;Here I&#8217;ve spent all this time working on this app, describing the functionality in the description, and you tell me it&#8217;s shit?&#8221; I quickly realized that I shouldn&#8217;t care too much about it. People will always criticize, for several reasons (which probably could fill another post), so it is important to be able to see past negative, non-constructive feedback.<\/p>\n<h2>Summary<\/h2>\n<p>At the end of the day I guess what I&#8217;m trying to say is that you shouldn&#8217;t read too much into negative, non-constructive app reviews, as this may tear your motivation apart. It is in the same lines of athletes or actors\/actresses who I imagine try to avoid reading much news regarding themselves, as a way to avoid feeling down over negative stories. Do however consider constructive reviews, as they may improve your app, and also may give you an indication of what people expect from the app. <\/p>\n<p>I am also curious to hear how you deal with app reviews, so please do share! <\/p>\n<p><em>Featured photo by Stuart Miles, found at <a href=\"http:\/\/www.freedigitalphotos.net\/images\/positives-negatives-buttons-shows-pros-and-cons-photo-p207251\" target=\"_blank\">freedigitalphotos.net<\/a><\/em><\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/ID-100207251.jpg","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 07 Mar 2016 18:45:23 +0000","created_by":1,"updated_at":"Mon, 07 Mar 2016 18:45:23 +0000","updated_by":1,"published_at":"Mon, 07 Mar 2016 18:45:23 +0000","published_by":1},{"id":1082,"title":"Creating a mobile app with web technology","slug":"creating-mobile-app-web-technology","markdown":"\nIn this post I will go through my first-impression of using HTML\/CSS\/JavaScript for mobile app development. The background for doing so is that I\u2019ve been spending quite a lot of time at [FreeCodeCamp](http:\/\/freecodecamp.com)\u00a0lately, and now feel comfortable enough to try to do some comparing with Xamarin and C#. To be able to see some similarities, I have chosen to create an app similar to one I have done with Xamarin, a map application. I did a tutorial on this for Xamarin last year, which you can find [here](http:\/\/leiflarsen.org\/?s=mapkit).\n\nFor the purpose of this post I\u2019ll be using Visual Studio to do the development. Microsoft have created a template to get up and running easily with [Cordova](https:\/\/cordova.apache.org\/), which I have chosen as my tool. Alternatively, one can install Cordova and create a project through npm, but I took the slightly easier route this time. All the code I\u2019ve written for this can be found at [GitHub](https:\/\/github.com\/leif-larsen\/Mobile-HTML-Test-App).\n\nThe end result of the app is like this:  \n[![Mobile app with Cordova end result](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/droidresult.png?fit=384%2C706)](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/droidresult.png)\n\n\n## Mobile App Creation\n\nThe first thing I did was to create a new project in Visual Studio, where I selected \u201cOther Languages\u201d and chose Cordova as the project template. I named it, and the project was created with some default files. I was\u00a0able to run the app with the default content, using the Ripple Emulator in Google Chrome. So far so good.[![Create new Cordova project in Visual Studio](http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/NewProject-300x208.png?fit=300%2C208)](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/NewProject.png)\n\nNext I read that the initial version of Cordova might not be the latest, so I went into \u201cconfig.xml\u201d and fixed this. In Visual Studio they provide a neat editor for this file, where I could go to the tab called \u201cPlatform\u201d and select the latest version from the dropdown list. I figured I might as well do this immediately instead of risking errors later.  \n[![Update to latest Cordova Version](http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/LatestVersion-300x52.png?fit=300%2C52)](http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/LatestVersion.png)\n\nTo be able to use different device specific features I found I could add plugins. As I have understood these are basically bindings between a phones hardware and the app itself, provided either by Cordova as core plugins, or by third-party contributors. For this example, I added the geolocation and notification plugins. Other core plugins worth mentioning are Azure connection, splash screen, device information, file systems and others. After the plugins had been added I built the app again, and it was still running as expected.\n\n\n## Code \u2013 But No Code\n\nFor the code needed it wasn\u2019t really that much. I can count one input field and one div in the HTML itself, which is for search bar and the map canvas. I didn\u2019t bother to put the JavaScript needed into its own file, as I just wanted a quick result. Also I want to emphasize that the way it\u2019s done in my example is by no means best practice, as you can read in [this](https:\/\/codingwithspike.wordpress.com\/2014\/08\/13\/loading-google-maps-in-cordova-the-right-way\/) blog post.\n\nAs this isn\u2019t a tutorial I won\u2019t share any code details here, but refer you to GitHub. The fun stuff happens in \u201cindex.html\u201d in the \u201cwww\u201d folder. Just note that you need to add your own API key for Google Maps for it to work!\n\n\n## Comparison\n\nSo how does this compare to Xamarin? For starters I can definitely say that this was less of a hassle to get up and running. I don\u2019t think I spent more than a couple of hours to finish this example app, making it work as I wanted to. Using Cordova, I believe more people are able to create mobile apps, where a lot of HTML\/CSS\/JavaScript probably can be reused for associated web sites.\n\nAnother great benefit is off course that there is no monthly\/yearly recurring cost to using Cordova, as there is with Xamarin (note! I have not looked into the release process, so there might be some costs there. Can anyone shed a light on that?). To me, as a developer with no real income on my apps, this is a great argument to use Cordova over Xamarin.\n\nAs for cons I have not really seen any yet, but I imagine there might be some negative effects in terms of performance. I will need to do some more research on this, so if anyone happen to have some links focusing on this aspect, please share!\n\n\n## Conclusion\n\nWill I be using Cordova in the future? Well, I will be testing it more over the next few weeks. I don\u2019t think I am ready to make the move completely yet, and I guess what I use will be dependent on what kind of app I am creating anyway.\n\nThis is it for this post. Not a very scientific comparison between Xamarin and Cordova, but more of a first-impression from my point of view. Have you had experience with either? I am curious to hear what others think of these, especially Cordova!\n\n\n## Edit\n\nAs requested in the comments, I want to make an addition to this post, to show some of the code used.\n\nThere are two files which needs to be referenced for Cordova to work. These are \u201ccordova.js\u201d and \u201cplatformOverrides.js\u201d. Both files should be created when creating the project, and already included in the \u201cindex.html\u201d which is created at creation. The first file is, quite obviously, Cordova itself, while the second one is where you can tell the app what it should do on startup, resume, shutdown etc. For this particular example I also included a reference to Google Maps API and its corresponding CSS file.\n\nThe first lines I want to show off particularly is the lines which actually uses device features. The following lines uses the plugins for geolocation and notification to find your position, and popup a notification if a marker is clicked:\n\n var markerClicked = function (title) { navigator.notification.alert(\"You clicked the \" + title.title + \" marker!\", function () { }); } var getPosition = function () { navigator.geolocation.getCurrentPosition(showMap); }\n\nAlso to show how to use the position you get, this is the callback function from getPosition:\n\n var showMap = function (position) { var mapOptions = { zoom: 13, center: new google.maps.LatLng(position.coords.latitude, position.coords.longitude), mapTypeId: google.maps.MapTypeId.ROADMAP, mapTypeControl: false } map = new google.maps.Map(document.getElementById(\"map_canvas\"), mapOptions); addMarkers(); var input = document.getElementById(\"pac-input\"); var searchBox = new google.maps.places.SearchBox(input); map.controls[google.maps.ControlPosition.TOP_CENTER].push(input); map.addListener('bounds_changed', function () { searchBox.setBounds(map.getBounds()); }); searchBox.addListener('places_changed', function () { var places = searchBox.getPlaces(); if (places.length == 0) { return; } map.setCenter(places[0].geometry.location); }); }\n\nBasically we use the position to create a new Google Map, centered on our location, and place this map into a div we have in the HTML. We also create a searchbox, where we can search for places, where we will move the map to the location of the place that was searched for.\n\n\n","html":"<p>In this post I will go through my first-impression of using HTML\/CSS\/JavaScript for mobile app development. The background for doing so is that I&#8217;ve been spending quite a lot of time at <a href=\"http:\/\/freecodecamp.com\" target=\"_blank\">FreeCodeCamp<\/a>\u00a0lately, and now feel comfortable enough to try to do some comparing with Xamarin and C#. To be able to see some similarities, I have chosen to create an app similar to one I have done with Xamarin, a map application. I did a tutorial on this for Xamarin last year, which you can find <a href=\"http:\/\/leiflarsen.org\/?s=mapkit\" target=\"_blank\">here<\/a>.<\/p>\n<p><!--more--><\/p>\n<p>For the purpose of this post I&#8217;ll be using Visual Studio to do the development. Microsoft have created a template to get up and running easily with <a href=\"https:\/\/cordova.apache.org\/\" target=\"_blank\">Cordova<\/a>, which I have chosen as my tool. Alternatively, one can install Cordova and create a project through npm, but I took the slightly easier route this time. All the code I&#8217;ve written for this can be found at <a href=\"https:\/\/github.com\/leif-larsen\/Mobile-HTML-Test-App\" target=\"_blank\">GitHub<\/a>.<\/p>\n<p>The end result of the app is like this:<br \/>\n<a href=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/droidresult.png\"  rel=\"lightbox[1082] attachment wp-att-1141\"><img src=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/droidresult.png?fit=384%2C706\" alt=\"Mobile app with Cordova end result\" class=\"aligncenter size-full wp-image-1141\" srcset=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/droidresult.png?resize=163%2C300 163w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/droidresult.png?w=384 384w\" sizes=\"(max-width: 384px) 100vw, 384px\" data-recalc-dims=\"1\" \/><\/a><\/p>\n<h2>Mobile App Creation<\/h2>\n<p>The first thing I did was to create a new project in Visual Studio, where I selected &#8220;Other Languages&#8221; and chose Cordova as the project template. I named it, and the project was created with some default files. I was\u00a0able to run the app with the default content, using the Ripple Emulator in Google Chrome. So far so good.<a href=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/NewProject.png\"  rel=\"lightbox[1082] attachment wp-att-1142\"><img src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/NewProject-300x208.png?fit=300%2C208\" alt=\"Create new Cordova project in Visual Studio\" class=\"alignright size-medium wp-image-1142\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/NewProject.png?resize=300%2C208 300w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/NewProject.png?resize=768%2C533 768w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/NewProject.png?w=942 942w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><\/p>\n<p>Next I read that the initial version of Cordova might not be the latest, so I went into &#8220;config.xml&#8221; and fixed this. In Visual Studio they provide a neat editor for this file, where I could go to the tab called &#8220;Platform&#8221; and select the latest version from the dropdown list. I figured I might as well do this immediately instead of risking errors later.<br \/>\n<a href=\"http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/LatestVersion.png\"  rel=\"lightbox[1082] attachment wp-att-1143\"><img src=\"http:\/\/i1.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/LatestVersion-300x52.png?fit=300%2C52\" alt=\"Update to latest Cordova Version\" class=\"aligncenter size-medium wp-image-1143\" srcset=\"http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/LatestVersion.png?resize=300%2C52 300w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/LatestVersion.png?resize=768%2C132 768w, http:\/\/i0.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/LatestVersion.png?resize=1024%2C176 1024w, http:\/\/i2.wp.com\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/LatestVersion.png?w=1530 1530w\" sizes=\"(max-width: 300px) 100vw, 300px\" data-recalc-dims=\"1\" \/><\/a><\/p>\n<p>To be able to use different device specific features I found I could add plugins. As I have understood these are basically bindings between a phones hardware and the app itself, provided either by Cordova as core plugins, or by third-party contributors. For this example, I added the geolocation and notification plugins. Other core plugins worth mentioning are Azure connection, splash screen, device information, file systems and others. After the plugins had been added I built the app again, and it was still running as expected.<\/p>\n<h2>Code &#8211; But No Code<\/h2>\n<p>For the code needed it wasn&#8217;t really that much. I can count one input field and one div in the HTML itself, which is for search bar and the map canvas. I didn&#8217;t bother to put the JavaScript needed into its own file, as I just wanted a quick result. Also I want to emphasize that the way it&#8217;s done in my example is by no means best practice, as you can read in <a href=\"https:\/\/codingwithspike.wordpress.com\/2014\/08\/13\/loading-google-maps-in-cordova-the-right-way\/\" target=\"_blank\">this<\/a> blog post.<\/p>\n<p>As this isn&#8217;t a tutorial I won&#8217;t share any code details here, but refer you to GitHub. The fun stuff happens in &#8220;index.html&#8221; in the &#8220;www&#8221; folder. Just note that you need to add your own API key for Google Maps for it to work!<\/p>\n<h2>Comparison<\/h2>\n<p>So how does this compare to Xamarin? For starters I can definitely say that this was less of a hassle to get up and running. I don&#8217;t think I spent more than a couple of hours to finish this example app, making it work as I wanted to. Using Cordova, I believe more people are able to create mobile apps, where a lot of HTML\/CSS\/JavaScript probably can be reused for associated web sites.<\/p>\n<p>Another great benefit is off course that there is no monthly\/yearly recurring cost to using Cordova, as there is with Xamarin (note! I have not looked into the release process, so there might be some costs there. Can anyone shed a light on that?). To me, as a developer with no real income on my apps, this is a great argument to use Cordova over Xamarin.<\/p>\n<p>As for cons I have not really seen any yet, but I imagine there might be some negative effects in terms of performance. I will need to do some more research on this, so if anyone happen to have some links focusing on this aspect, please share!<\/p>\n<h2>Conclusion<\/h2>\n<p>Will I be using Cordova in the future? Well, I will be testing it more over the next few weeks. I don&#8217;t think I am ready to make the move completely yet, and I guess what I use will be dependent on what kind of app I am creating anyway.<\/p>\n<p>This is it for this post. Not a very scientific comparison between Xamarin and Cordova, but more of a first-impression from my point of view. Have you had experience with either? I am curious to hear what others think of these, especially Cordova!<\/p>\n<h2>Edit<\/h2>\n<p>As requested in the comments, I want to make an addition to this post, to show some of the code used.<\/p>\n<p>There are two files which needs to be referenced for Cordova to work. These are &#8220;cordova.js&#8221; and &#8220;platformOverrides.js&#8221;. Both files should be created when creating the project, and already included in the &#8220;index.html&#8221; which is created at creation. The first file is, quite obviously, Cordova itself, while the second one is where you can tell the app what it should do on startup, resume, shutdown etc. For this particular example I also included a reference to Google Maps API and its corresponding CSS file.<\/p>\n<p>The first lines I want to show off particularly is the lines which actually uses device features. The following lines uses the plugins for geolocation and notification to find your position, and popup a notification if a marker is clicked:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nvar markerClicked = function (title) {\r\n   navigator.notification.alert(&quot;You clicked the &quot; + title.title + &quot; marker!&quot;, function () { });\r\n}\r\nvar getPosition = function () {\r\n   navigator.geolocation.getCurrentPosition(showMap);\r\n}\r\n<\/pre>\n<p>Also to show how to use the position you get, this is the callback function from getPosition:<\/p>\n<pre class=\"wp-code-highlight prettyprint\">\r\nvar showMap = function (position) {\r\n   var mapOptions = {\r\n      zoom: 13,   \r\n      center: new google.maps.LatLng(position.coords.latitude, position.coords.longitude),\r\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n      mapTypeControl: false\r\n   }\r\n   map = new google.maps.Map(document.getElementById(&quot;map_canvas&quot;), mapOptions);\r\n   addMarkers();\r\n   var input = document.getElementById(&quot;pac-input&quot;);\r\n   var searchBox = new google.maps.places.SearchBox(input);\r\n   map.controls[google.maps.ControlPosition.TOP_CENTER].push(input);\r\n   map.addListener(&#039;bounds_changed&#039;, function () {\r\n      searchBox.setBounds(map.getBounds());\r\n   });\r\n   searchBox.addListener(&#039;places_changed&#039;, function () {\r\n      var places = searchBox.getPlaces();\r\n      if (places.length == 0) {\r\n         return;\r\n      }\r\n      map.setCenter(places[0].geometry.location);\r\n   });\r\n}\r\n<\/pre>\n<p>Basically we use the position to create a new Google Map, centered on our location, and place this map into a div we have in the HTML. We also create a searchbox, where we can search for places, where we will move the map to the location of the place that was searched for. <\/p>\n","image":"http:\/\/leiflarsen.org\/wp-content\/uploads\/2016\/03\/Apache_Cordova1-e1457982472795.png","featured":0,"page":0,"status":"published","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 14 Mar 2016 20:12:45 +0000","created_by":1,"updated_at":"Sun, 20 Mar 2016 16:52:43 +0000","updated_by":1,"published_at":"Mon, 14 Mar 2016 20:12:45 +0000","published_by":1},{"id":1152,"title":"On trying something new","slug":"trying-something-new","markdown":"\nFootball yesterday, many years ago last time, destroyed body today, fun though, will try again\n\n\n","html":"<p>Football yesterday, many years ago last time, destroyed body today, fun though, will try again<\/p>\n","image":null,"featured":0,"page":0,"status":"draft","language":"en_US","meta_title":null,"meta_description":null,"author_id":1,"created_at":"Mon, 21 Mar 2016 06:22:23 +0000","created_by":1,"updated_at":"Mon, 21 Mar 2016 06:22:23 +0000","updated_by":1,"published_at":"","published_by":1}],"tags":[{"id":72,"name":".net","slug":"net","description":""},{"id":38,"name":"2015","slug":"2015","description":""},{"id":74,"name":"24 days of Hello World","slug":"24-days-of-hello-world","description":""},{"id":93,"name":"ada","slug":"ada","description":""},{"id":75,"name":"advent calendar","slug":"advent-calendar","description":""},{"id":31,"name":"agile","slug":"agile","description":""},{"id":49,"name":"Android","slug":"android","description":""},{"id":55,"name":"app","slug":"app","description":""},{"id":40,"name":"Apple","slug":"apple","description":""},{"id":70,"name":"back end","slug":"back-end","description":""},{"id":68,"name":"blogging","slug":"blogging","description":""},{"id":73,"name":"c#","slug":"c","description":""},{"id":86,"name":"Clojure","slug":"clojure","description":""},{"id":69,"name":"cloud","slug":"cloud","description":""},{"id":92,"name":"cobol","slug":"cobol","description":""},{"id":91,"name":"cobra","slug":"cobra","description":""},{"id":87,"name":"common lisp","slug":"common-lisp","description":""},{"id":33,"name":"course","slug":"course","description":""},{"id":51,"name":"Cryptography","slug":"cryptography","description":""},{"id":106,"name":"dependency injection","slug":"dependency-injection","description":""},{"id":32,"name":"development","slug":"development","description":""},{"id":56,"name":"emulator","slug":"emulator","description":""},{"id":46,"name":"epiphone les paul","slug":"epiphone-les-paul","description":""},{"id":80,"name":"Erlang","slug":"erlang","description":""},{"id":82,"name":"f#","slug":"f","description":""},{"id":107,"name":"feedback","slug":"feedback","description":""},{"id":97,"name":"go","slug":"go","description":""},{"id":39,"name":"goals","slug":"goals","description":""},{"id":43,"name":"guitar","slug":"guitar","description":""},{"id":103,"name":"hackathon","slug":"hackathon","description":""},{"id":84,"name":"Haskell","slug":"haskell","description":""},{"id":65,"name":"Home Automation","slug":"home-automation","description":""},{"id":108,"name":"html","slug":"html","description":""},{"id":105,"name":"ioc","slug":"ioc","description":""},{"id":48,"name":"iOS","slug":"ios","description":""},{"id":64,"name":"IoT","slug":"iot","description":""},{"id":78,"name":"java","slug":"java","description":""},{"id":109,"name":"javascript","slug":"javascript","description":""},{"id":102,"name":"jdk","slug":"jdk","description":""},{"id":45,"name":"justin guitar","slug":"justin-guitar","description":""},{"id":44,"name":"learning","slug":"learning","description":""},{"id":104,"name":"linux","slug":"linux","description":""},{"id":54,"name":"Localization","slug":"localization","description":""},{"id":41,"name":"Mac Mini","slug":"mac-mini","description":""},{"id":53,"name":"MapKit","slug":"mapkit","description":""},{"id":58,"name":"Microsoft","slug":"microsoft","description":""},{"id":37,"name":"new year","slug":"new-year","description":""},{"id":83,"name":"nodejs","slug":"nodejs","description":""},{"id":90,"name":"Objective c","slug":"objective-c","description":""},{"id":42,"name":"OS X","slug":"os-x","description":""},{"id":71,"name":"Parse","slug":"parse","description":""},{"id":88,"name":"pascal","slug":"pascal","description":""},{"id":81,"name":"perl","slug":"perl","description":""},{"id":7,"name":"php","slug":"php","description":""},{"id":36,"name":"privacy policy","slug":"privacy-policy","description":""},{"id":76,"name":"productivity","slug":"productivity","description":""},{"id":9,"name":"programming","slug":"programming","description":""},{"id":60,"name":"Projects","slug":"projects","description":""},{"id":98,"name":"python","slug":"python","description":""},{"id":85,"name":"R","slug":"r","description":""},{"id":62,"name":"Raspberry Pi","slug":"raspberry-pi","description":""},{"id":96,"name":"release","slug":"release","description":""},{"id":101,"name":"Releasing an app","slug":"releasing-an-app","description":""},{"id":79,"name":"ruby","slug":"ruby","description":""},{"id":95,"name":"rust","slug":"rust","description":""},{"id":67,"name":"security","slug":"security","description":""},{"id":8,"name":"soap","slug":"soap","description":""},{"id":57,"name":"Surface 3","slug":"surface-3","description":""},{"id":89,"name":"swift","slug":"swift","description":""},{"id":59,"name":"Table","slug":"table","description":""},{"id":77,"name":"time management","slug":"time-management","description":""},{"id":52,"name":"tutorial","slug":"tutorial","description":""},{"id":28,"name":"Virtual Machine","slug":"virtual-machine","description":""},{"id":94,"name":"visual basic","slug":"visual-basic","description":""},{"id":63,"name":"Windows 10","slug":"windows-10","description":""},{"id":29,"name":"Windows 8","slug":"windows-8","description":""},{"id":50,"name":"Windows Phone","slug":"windows-phone","description":""},{"id":27,"name":"Windows Phone 8","slug":"windows-phone-8","description":""},{"id":35,"name":"Windows store app","slug":"windows-store-app","description":""},{"id":66,"name":"Wordpress","slug":"wordpress","description":""},{"id":47,"name":"Xamarin","slug":"xamarin","description":""},{"id":100,"name":"Xamarin Forms","slug":"xamarin-forms","description":""}],"posts_tags":[{"tag_id":7,"post_id":48},{"tag_id":9,"post_id":48},{"tag_id":8,"post_id":48},{"tag_id":28,"post_id":155},{"tag_id":29,"post_id":155},{"tag_id":27,"post_id":155},{"tag_id":31,"post_id":201},{"tag_id":33,"post_id":201},{"tag_id":32,"post_id":201},{"tag_id":36,"post_id":232},{"tag_id":35,"post_id":232},{"tag_id":38,"post_id":260},{"tag_id":39,"post_id":260},{"tag_id":37,"post_id":260},{"tag_id":40,"post_id":241},{"tag_id":41,"post_id":241},{"tag_id":42,"post_id":241},{"tag_id":46,"post_id":273},{"tag_id":43,"post_id":273},{"tag_id":45,"post_id":273},{"tag_id":44,"post_id":273},{"tag_id":49,"post_id":278},{"tag_id":48,"post_id":278},{"tag_id":50,"post_id":278},{"tag_id":27,"post_id":278},{"tag_id":47,"post_id":278},{"tag_id":51,"post_id":282},{"tag_id":48,"post_id":287},{"tag_id":54,"post_id":287},{"tag_id":52,"post_id":287},{"tag_id":47,"post_id":287},{"tag_id":55,"post_id":299},{"tag_id":48,"post_id":299},{"tag_id":48,"post_id":284},{"tag_id":53,"post_id":284},{"tag_id":52,"post_id":284},{"tag_id":47,"post_id":284},{"tag_id":55,"post_id":327},{"tag_id":48,"post_id":327},{"tag_id":53,"post_id":327},{"tag_id":52,"post_id":327},{"tag_id":47,"post_id":327},{"tag_id":49,"post_id":318},{"tag_id":56,"post_id":318},{"tag_id":47,"post_id":318},{"tag_id":58,"post_id":362},{"tag_id":57,"post_id":362},{"tag_id":59,"post_id":362},{"tag_id":48,"post_id":349},{"tag_id":53,"post_id":349},{"tag_id":52,"post_id":349},{"tag_id":47,"post_id":349},{"tag_id":32,"post_id":383},{"tag_id":60,"post_id":383},{"tag_id":65,"post_id":406},{"tag_id":64,"post_id":406},{"tag_id":62,"post_id":406},{"tag_id":63,"post_id":406},{"tag_id":67,"post_id":418},{"tag_id":66,"post_id":418},{"tag_id":68,"post_id":431},{"tag_id":33,"post_id":431},{"tag_id":55,"post_id":436},{"tag_id":70,"post_id":436},{"tag_id":69,"post_id":436},{"tag_id":32,"post_id":436},{"tag_id":71,"post_id":436},{"tag_id":67,"post_id":452},{"tag_id":66,"post_id":452},{"tag_id":72,"post_id":464},{"tag_id":73,"post_id":464},{"tag_id":33,"post_id":464},{"tag_id":76,"post_id":473},{"tag_id":77,"post_id":473},{"tag_id":74,"post_id":470},{"tag_id":75,"post_id":470},{"tag_id":74,"post_id":486},{"tag_id":73,"post_id":486},{"tag_id":9,"post_id":486},{"tag_id":78,"post_id":497},{"tag_id":9,"post_id":497},{"tag_id":74,"post_id":509},{"tag_id":9,"post_id":509},{"tag_id":79,"post_id":509},{"tag_id":74,"post_id":517},{"tag_id":80,"post_id":517},{"tag_id":9,"post_id":517},{"tag_id":74,"post_id":527},{"tag_id":81,"post_id":527},{"tag_id":9,"post_id":527},{"tag_id":74,"post_id":537},{"tag_id":82,"post_id":537},{"tag_id":9,"post_id":537},{"tag_id":74,"post_id":543},{"tag_id":83,"post_id":543},{"tag_id":9,"post_id":543},{"tag_id":74,"post_id":548},{"tag_id":84,"post_id":548},{"tag_id":9,"post_id":548},{"tag_id":74,"post_id":556},{"tag_id":9,"post_id":556},{"tag_id":85,"post_id":556},{"tag_id":74,"post_id":565},{"tag_id":7,"post_id":565},{"tag_id":9,"post_id":565},{"tag_id":74,"post_id":579},{"tag_id":86,"post_id":579},{"tag_id":9,"post_id":579},{"tag_id":74,"post_id":595},{"tag_id":88,"post_id":595},{"tag_id":9,"post_id":595},{"tag_id":74,"post_id":592},{"tag_id":87,"post_id":592},{"tag_id":9,"post_id":592},{"tag_id":74,"post_id":604},{"tag_id":73,"post_id":604},{"tag_id":9,"post_id":604},{"tag_id":74,"post_id":618},{"tag_id":9,"post_id":618},{"tag_id":89,"post_id":618},{"tag_id":74,"post_id":627},{"tag_id":73,"post_id":627},{"tag_id":9,"post_id":627},{"tag_id":74,"post_id":636},{"tag_id":90,"post_id":636},{"tag_id":9,"post_id":636},{"tag_id":74,"post_id":642},{"tag_id":91,"post_id":642},{"tag_id":9,"post_id":642},{"tag_id":74,"post_id":648},{"tag_id":92,"post_id":648},{"tag_id":9,"post_id":648},{"tag_id":74,"post_id":653},{"tag_id":93,"post_id":653},{"tag_id":9,"post_id":653},{"tag_id":74,"post_id":662},{"tag_id":9,"post_id":662},{"tag_id":94,"post_id":662},{"tag_id":74,"post_id":667},{"tag_id":9,"post_id":667},{"tag_id":95,"post_id":667},{"tag_id":74,"post_id":679},{"tag_id":97,"post_id":679},{"tag_id":9,"post_id":679},{"tag_id":74,"post_id":682},{"tag_id":9,"post_id":682},{"tag_id":98,"post_id":682},{"tag_id":74,"post_id":692},{"tag_id":39,"post_id":699},{"tag_id":64,"post_id":482},{"tag_id":62,"post_id":482},{"tag_id":63,"post_id":482},{"tag_id":49,"post_id":821},{"tag_id":55,"post_id":821},{"tag_id":48,"post_id":821},{"tag_id":27,"post_id":821},{"tag_id":47,"post_id":821},{"tag_id":96,"post_id":845},{"tag_id":101,"post_id":845},{"tag_id":50,"post_id":845},{"tag_id":47,"post_id":845},{"tag_id":100,"post_id":845},{"tag_id":49,"post_id":897},{"tag_id":96,"post_id":897},{"tag_id":101,"post_id":897},{"tag_id":52,"post_id":897},{"tag_id":47,"post_id":897},{"tag_id":48,"post_id":676},{"tag_id":96,"post_id":676},{"tag_id":101,"post_id":676},{"tag_id":52,"post_id":676},{"tag_id":47,"post_id":676},{"tag_id":76,"post_id":1020},{"tag_id":103,"post_id":1024},{"tag_id":102,"post_id":1024},{"tag_id":104,"post_id":1024},{"tag_id":106,"post_id":1032},{"tag_id":105,"post_id":1032},{"tag_id":55,"post_id":1097},{"tag_id":107,"post_id":1097},{"tag_id":55,"post_id":1082},{"tag_id":108,"post_id":1082},{"tag_id":109,"post_id":1082},{"tag_id":9,"post_id":1082},{"tag_id":110,"post_id":1152},{"tag_id":111,"post_id":1152}],"users":[{"id":1,"slug":"Leif","bio":false,"website":"http:\/\/leiflarsen.org","created_at":"Tue, 14 Aug 2012 18:06:46 +0000","created_by":1,"email":"me@leiflarsen.org","name":"Leif"},{"id":3,"slug":"leif_h_89@hotmail.com","bio":false,"website":"","created_at":"Mon, 18 Aug 2014 17:49:11 +0000","created_by":1,"email":"leif_h_89@hotmail.com","name":"leif_h_89hotmail-com"},{"id":2,"slug":"thomasbem@outlook.com","bio":false,"website":"","created_at":"Mon, 18 Aug 2014 17:48:17 +0000","created_by":1,"email":"thomasbem@outlook.com","name":"thomasbemoutlook-com"}]},"meta":{"exported_on":"Wed, 30 Mar 2016 06:33:54 +0000","version":"000"}}